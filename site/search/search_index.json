{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u5218\u6770\u592b\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u4e60\u7b14\u8bb0","text":"<p>Hello\uff01\u6b22\u8fce\u6765\u5230\u6211\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u7b14\u8bb0\u3002\u4e4b\u524d\u4eba\u5de5\u667a\u80fd\u7b14\u8bb0\u6574\u7406\u4ee5\u540e\uff0c\u81ea\u5df1\u590d\u4e60\u7684\u65f6\u5019\u5f88\u65b9\u4fbf\uff0c\u4e8e\u662f\u51b3\u5b9a\u628a\u8ba1\u7b97\u673a\u65b9\u9762\u7684\u77e5\u8bc6\u4e5f\u90fd\u6574\u7406\u4e3a\u7b14\u8bb0\u3002</p> <p>2025 Fall\u6211\u6b63\u597d\u8981\u4e0a\u4e09\u95e8MSCS\u7684\u5fc5\u4fee\u8bfe\uff0c\u6240\u4ee5\u5c31\u540c\u6b65\u628a\u7b14\u8bb0\u505a\u4e00\u4e0b\uff1a</p> <ul> <li>Algorithms, \u91c7\u7528\u7ecf\u5178\u7684\u7b97\u6cd5\u5bfc\u8bba\u6559\u6750CLRS\uff08\u7b2c\u56db\u7248\uff09</li> <li>Networks</li> <li>Computational Theory, \u91c7\u7528\u7ecf\u5178\u7684\u8ba1\u7b97\u7406\u8bba\u5bfc\u5f15\uff08\u7b2c\u4e09\u7248\uff09</li> </ul>"},{"location":"CLRS/intro/","title":"Algorithms","text":""},{"location":"CLRS/intro/#cs160-syllabus","title":"CS160 Syllabus","text":"<p>Final Grade:</p> <ul> <li><code>25% Homework + 5% Participation + 20% Midterm1 + 20% Midterm2 + 30% Final</code></li> <li><code>25% Homework + 5% Participation + 15% Midterm1 + 15% Midterm2 + 40% Final</code></li> </ul> <p>Exams:</p> <ul> <li>Midterm1</li> <li>Midterm2</li> <li>Final</li> </ul> <p>\u540c\u6837\u7684\uff0c\u7981\u6b62\u4f7f\u7528AI\u5de5\u5177\uff0c\u4f1a\u88ab\u89c6\u4e3a\u4f5c\u5f0a\u3002</p>"},{"location":"Seminar/250911_Deployed_Robot/","title":"Deployable Robots that Learn","text":"<p>Adaptive Planner Parameter Learning from Interventions (APPLI)</p> <p>RobotiX</p> <p>Xuesu Xiao, Ph.D., Roboticist</p> <p>xiao@gmu.edu</p> <p>Deployable Robots that Learn</p> <ul> <li>Interactive Learning from Non-Expert Users</li> <li>Adaptive Planner Parameter Learning (APPL)</li> <li>In-Situ Learning from Robot-Environment Interactions</li> <li>Learning Extreme Off-Road Mobility</li> <li>Reflective Learning from Past Deployment Experiences</li> <li>Learning from Hallucination (LfH)</li> </ul>"},{"location":"computational_theory/ch0_intro/","title":"\u8ba1\u7b97\u7406\u8bba\u7eea\u8bba","text":""},{"location":"computational_theory/ch0_intro/#cs170-syllabus","title":"CS170 Syllabus","text":"<p>\u8fd9\u95e8\u8bfe\u548c\u6211\u672a\u6765\u65b9\u5411\u4e0d\u592a\u5339\u914d\uff0c\u4f46\u662f\u662f\u5fc5\u4fee\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u628a\u5b66\u4e60\u65f6\u95f4\u7f29\u77ed\u5e76\u4fdd\u8bc1\u6210\u7ee9\u4e0d\u57ae\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\u56e0\u4e3a\u53c2\u4e0e\u5206\u5f88\u4f4e\uff0c\u6240\u4ee5\u4fdd\u8bc1\u4f5c\u4e1a\u548c\u8003\u8bd5OK\u5c31\u884c\u3002</p> <p>AI Tools Policy:</p> <ul> <li>Prohibited\uff1a\u7981\u6b62\u4f7f\u7528AI\u5de5\u5177\uff0c\u82e5\u4f7f\u7528\u5219\u6309\u4f5c\u5f0a\u5904\u7406\u3002\u5e76\u4e14\u4e5f\u4e0d\u8ba9\u7528AI\u5de5\u5177\u5206\u6790\u8fc7\u7a0b\u3001\u63a2\u7a76\u601d\u8def\u7b49\u3002</li> </ul> <p>Participation: (5%)</p> <ul> <li>Includes participation in section</li> </ul> <p>Quizzes: (30%, Bring Pencil and Paper)</p> <ul> <li>Sep.16</li> <li>Oct.7</li> <li>Oct.21</li> <li>Nov.5 (In Section)</li> <li>Nov.25</li> <li>Dec.3 (\u8fd9\u4e2a\u4f3c\u4e4e\u4e5f\u662f\u5728Section\u4e2d)</li> </ul> <p>Homework Due: (35%)</p> <ul> <li>Sep.11</li> <li>Sep.25</li> <li>Oct.9</li> <li>Oct.23</li> <li>Nov.6</li> <li>Nov.20</li> <li>Dec.4</li> </ul> <p>Final Exam: (30%)</p> <ul> <li>Dec 15, 3:30 - 5:30pm</li> </ul>"},{"location":"computational_theory/ch0_intro/#_2","title":"\u4e3b\u9898\u4ecb\u7ecd","text":"<p>\u8ba1\u7b97\u7406\u8bba\u7684\u91cd\u70b9\u6709\u4e09\u4e2a\uff1a</p> <ul> <li>Automata \u81ea\u52a8\u673a</li> <li>Computability \u53ef\u8ba1\u7b97\u6027</li> <li>Complexity \u590d\u6742\u6027</li> </ul> <p>\u672c\u4e66\u7684\u5185\u5bb9\u5c06\u5e26\u9886\u6211\u4eec\u4e86\u89e3\u8fd9\u4e48\u4e00\u4e2a\u6839\u672c\u6027\u7684\u95ee\u9898\uff1a\u8ba1\u7b97\u673a\u7684\u57fa\u672c\u80fd\u529b\u548c\u5c40\u9650\u6027\u662f\u4ec0\u4e48\uff1fWhat are the fundamental capabilities and limitations of computers?</p> <p>\u81ea\u52a8\u673a\u7406\u8bba\uff1a\u9610\u8ff0\u4e86\u8ba1\u7b97\u7684\u6570\u5b66\u6a21\u578b\u7684\u5b9a\u4e49\u548c\u6027\u8d28\u3002\u4e00\u4e2a\u6a21\u578b\u662f\u6709\u7a77\u81ea\u52a8\u673a Finite Automaton\uff0c\u7528\u4e8e\u6587\u672c\u5904\u7406\u3001\u7f16\u8bd1\u7a0b\u5e8f\u4ee5\u53ca\u786c\u4ef6\u8bbe\u8ba1\uff1b\u53e6\u4e00\u4e2a\u6a21\u578b\u662f\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u6a21\u578b Context-Free Grammar\uff0c\u7528\u5728\u4eba\u5de5\u667a\u80fd\u548c\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u3002</p> <p>\u53ef\u8ba1\u7b97\u6027\u7406\u8bba\uff1a\u5c06\u4e00\u4e2a\u95ee\u9898\u62c6\u5206\u6210\u53ef\u4ee5\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u7684\uff0c\u548c\u4e0d\u53ef\u4ee5\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u7684\u3002</p> <p>\u8ba1\u7b97\u590d\u6742\u6027\u7406\u8bba\u7684\u6838\u5fc3\u95ee\u9898\uff1a\u662f\u4ec0\u4e48\u4f7f\u5f97\u67d0\u4e9b\u95ee\u9898\u5f88\u96be\u8ba1\u7b97\uff0c\u800c\u53e6\u4e00\u4e9b\u95ee\u9898\u53c8\u5f88\u5bb9\u6613\u8ba1\u7b97\uff1fComplexity\u6700\u91cd\u8981\u7684\u5e94\u7528\u662f\u5bc6\u7801\u5b66Cryptography\uff0c\u5b83\u7684\u6838\u5fc3\u76ee\u7684\u662f\u5bfb\u627e\u96be\u8ba1\u7b97\u7684\u95ee\u9898\u3002</p>"},{"location":"computational_theory/ch0_intro/#_3","title":"\u6570\u5b66\u5de5\u5177","text":"<p>\u8ba1\u7b97\u7406\u8bba\u4e2d\u6700\u5e38\u7528\u7684\u6570\u5b66\u5de5\u5177\u5305\u62ec\uff1a</p> <ul> <li>Set \u96c6\u5408</li> <li>Union, Intersection, Complement\uff08\u5e76\u3001\u4ea4\u3001\u8865\uff09</li> <li>Sequence \u5e8f\u5217</li> <li>Tuple \u5143\u7ec4</li> <li>Cartesian Product \u7b1b\u5361\u5c14\u79ef\uff08Cross Product \u53c9\u79ef\uff09</li> <li>Function \u51fd\u6570</li> <li>Mapping \u6620\u5c04</li> <li>Graph \u56fe</li> <li>Undirected Graph, Directed Graph \uff08\u65e0\u5411\u56fe\u3001\u6709\u5411\u56fe\uff09</li> <li>String, Lexicographic Order\uff08\u5b57\u7b26\u4e32\uff0c\u5b57\u5178\u5e8f\uff09</li> </ul> <p>Boolean Logic \u5e03\u5c14\u903b\u8f91\uff1a</p> <ul> <li>AND \u2227</li> <li>OR \u2228</li> <li>NOT \u00ac</li> <li>Exclusive OR \u2295 \uff08\u53ea\u67091\u22950\u4e3a0\uff09</li> <li>Equality \u2194</li> <li>Implication \u2192 \uff08\u53ea\u67091\u21920\u4e3a0\uff09</li> </ul> <p>\u5b9a\u4e49\u3001\u5b9a\u7406\u548c\u8bc1\u660e\uff1a</p> <ul> <li>Defination \u5b9a\u4e49</li> <li>Mathematical Statement \u6570\u5b66\u547d\u9898</li> <li>Proof \u8bc1\u660e</li> <li>Theorem \u5b9a\u7406</li> <li>Lemma \u5f15\u7406</li> <li>Corollary \u63a8\u8bba</li> <li>Counterexample \u53cd\u4f8b</li> </ul> <p>\u547d\u9898\u8bb0\u53f7\uff1a</p> <ul> <li>\u27fa iff, if and only if</li> <li>for P\u27faQ:</li> <li>forward direction: P\u27f9Q</li> <li>reverse direction: Q\u27f9P</li> </ul> <p>\u8bc1\u660e\u7684\u7c7b\u578b</p> <ul> <li>Proof by Construction \u6784\u9020\u6027\u8bc1\u660e</li> <li>Proof by Contradiction \u53cd\u8bc1\u6cd5</li> <li>Proof by Induction \u5f52\u7eb3\u6cd5</li> <li>Basis \u5f52\u7eb3\u57fa\u7840</li> <li>Induction Step \u5f52\u7eb3\u6b65\u9aa4</li> </ul>"},{"location":"computational_theory/ch0_intro/#_4","title":"\u8bfe\u7a0b\u89c4\u8303\u8bc1\u660e\u793a\u4f8b","text":""},{"location":"computational_theory/ch0_intro/#option-1-induction","title":"Option 1 (Induction)","text":"<p>This DFA recognizes the language by proof of induction on the length of the input string such that the DFA always ends in the correct state according to the last symbol and the requirement that the string starts with 0.</p> <p>Base Case:</p> <ol> <li>If w is a single 0, the DFA moves from q\u2080 to q\u2081. The DFA does not accept this string because it doesn\u2019t begin with a 0 AND end with a 1.</li> <li>If w is a single 1, the DFA moves from q\u2080 to q\u2083. The DFA does not accept this string and will never accept because it doesn\u2019t begin with a 0.</li> <li>If w is the empty string, the DFA will immediately reject because it doesn\u2019t begin with a 0 or end with a 1.</li> </ol> <p>Inductive Steps:</p> <p>Suppose the DFA is in the correct state after reading a string of length k and let w be a string that begins with a 0 and ends with a 1 of length k + 1.</p> <ul> <li>If w began with a 1, the DFA transitioned to q\u2081 and will never accept due to an infinite loop.</li> <li>Otherwise, if w began with a 0, the DFA can either be in q\u2081 or q\u2082 after reading in k characters.</li> </ul> <p>Now there are two cases:</p> <ol> <li>The last character of w is a 0</li> <li>The last character of w is a 1</li> </ol> <p>In the first case, if the last character of w is a 0, regardless of whether the DFA is in q\u2081 or q\u2082, the DFA will end in q\u2081 and reject.</p> <p>In the second case, if the last character of w is a 1, regardless of whether the DFA is in q\u2081 or q\u2082, the DFA will end in q\u2082 and accept.</p> <p>We know that the DFA only accepts a string iff (if and only if) it ends in q\u2082 and by the invariant, q\u2082 means the string starts with 0 and ends with 1.</p> <p>Conversely, if the string does not begin with 0, the DFA will go into an infinite loop in q\u2083 and reject.</p> <p>And if the string does not end with 1, the DFA will end in q\u2081 and reject.</p>"},{"location":"computational_theory/ch0_intro/#option-2-construction","title":"Option 2 (Construction)","text":"<p>This DFA recognizes the language by proof of construction by breaking up how the DFA handles strings in different cases.</p> <p>For any string w, w will either be one of the following:</p> <ol> <li>w begins with a 0 and ends with a 1</li> <li>w begins with a 0 and doesn\u2019t end with a 1</li> <li>w doesn\u2019t begin with a 0 and ends with a 1</li> <li>w doesn\u2019t begin with a 0 and doesn\u2019t end with a 1</li> </ol> <p>In case 1, the DFA must transition to q\u2081 since w begins with a 0 and it must end up in q\u2082 because regardless of whether the DFA is in q\u2081 or q\u2082 before the last character is read, it will always end in q\u2082. Therefore, strings in this case will always get accepted.</p> <p>In case 2, the DFA must transition to q\u2081 since w begins with a 0 and it must end up in q\u2081 because regardless of whether the DFA is in q\u2081 or q\u2083 before the last character is read, it will always end in q\u2081. Therefore, strings in this case will always be rejected.</p> <p>In case 3 and 4 (which can be combined), the DFA must transition to q\u2083 since w begins with a 1 and will remain in q\u2083 as the state loops on all inputs. Therefore, strings in this case will always be rejected.</p> <p>From the above cases, the only strings that can be accepted by this DFA are those that begin with a 0 and end with a 1 (case 1). All other cases result in the string being rejected. Therefore, the DFA recognizes the above language.</p>"},{"location":"computational_theory/ch1_regular_languages/","title":"Regular Languages \u6b63\u5219\u8bed\u8a00","text":"<p>\u73b0\u5b9e\u4e2d\u7684\u8ba1\u7b97\u673a\u592a\u590d\u6742\uff0c\u6211\u4eec\u4ece\u66f4\u52a0\u7b80\u5355\u548c\u62bd\u8c61\u7684\u6a21\u578b\u5f00\u59cb\u5b66\u4e60\u3002\u6211\u4eec\u7528\u8ba1\u7b97\u6a21\u578b\uff08computational model\uff09\u6765\u62bd\u8c61\u4e00\u4e2a\u8ba1\u7b97\u673a\uff0c\u53ea\u4fdd\u7559\u6211\u4eec\u5173\u5fc3\u7684\u6838\u5fc3\u7279\u5f81\u3002</p> <p>\u6211\u4eec\u5173\u6ce8\u72b6\u6001\u548c\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u800c\u4e0d\u8003\u8651\u590d\u6742\u7684\u5185\u5b58\u548c\u786c\u4ef6\uff0c\u56e0\u6b64\u8fd9\u79cd\u6a21\u578b\u53eb\u505a\u6709\u9650\u72b6\u6001\u673a\uff08finite state machine, FSM\uff09\uff0c\u4e5f\u53eb\u505a\u6709\u7a77\u81ea\u52a8\u673a\uff08finite automaton\uff09\u3002</p> <p>\u8fd9\u91cc\u6ce8\u610f\uff0c\u6709\u9650\u81ea\u52a8\u673a\u53ea\u6709\u6709\u9650\u591a\u4e2a\u72b6\u6001\uff0c\u6ca1\u6709\u989d\u5916\u7684\u5b58\u50a8\u5668\uff0c\u56e0\u6b64\u5e76\u975e\u6211\u4eec\u4eca\u5929\u6b63\u5728\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u3002\u73b0\u5728\u6211\u4eec\u7528\u7684\u8ba1\u7b97\u673a\uff0c\u66f4\u8fd1\u4f3c\u4e8e\u56fe\u7075\u673a\uff08\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u56fe\u7075\u673a\u6709\u65e0\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f46\u5982\u4eca\u7684\u8ba1\u7b97\u673a\u5728\u5b58\u50a8\u7a7a\u95f4\u4e0a\u5df2\u7ecf\u6709\u6781\u5927\u7684\u6269\u5c55\u7a7a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u8fd1\u4f3c\u4e8e\u56fe\u7075\u673a\uff09\uff0c\u800c\u975e\u6709\u9650\u72b6\u6001\u673a\u3002</p> <p>\u5f53\u7136\uff0c\u6211\u4eec\u7684\u751f\u6d3b\u4e2d\u5176\u5b9e\u6709\u5f88\u591a\u6709\u9650\u72b6\u6001\u673a\uff0c\u6bd4\u5982\uff1a\u7ea2\u7eff\u706f\u3001\u81ea\u52a8\u552e\u8d27\u673a\u3001\u9065\u63a7\u5668\u7b49\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#11-finite-automata","title":"1.1 Finite Automata","text":""},{"location":"computational_theory/ch1_regular_languages/#111-state-diagram","title":"1.1.1 State Diagram","text":"<p>\u5148\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5546\u573a\u5bbe\u9986\u7684\u81ea\u52a8\u95e8\u3002</p> <p></p> <p></p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u81ea\u52a8\u95e8\u53ea\u6709\u4e24\u4e2a\u72b6\u6001\uff1aCLOSED and OPEN\uff0c\u5728\u8fd9\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u5982\u4e0b\u72b6\u6001\u8f6c\u79fb\uff08Transitions\uff09\uff1a</p> <ul> <li>\u5728CLOSED\u72b6\u6001\u4e0b\uff1a</li> <li>\u5982\u679c\u524d\u9762\u6709\u4eba\u51fa\u73b0\uff08FRONT\uff09\uff0c\u90a3\u4e48\u5c31\u6253\u5f00\u95e8</li> <li>\u5982\u679c\u540e\u9762\u6709\u4eba\u3001\u4e24\u4fa7\u90fd\u6709\u4eba\u3001\u4e24\u4fa7\u90fd\u6ca1\u4eba\uff0c\u5c31\u5148\u4fdd\u6301\u5173\u7740\uff1b\u4e66\u4e2d\u4f8b\u5b50\u7684\u81ea\u52a8\u95e8\u4e0d\u662f\u6211\u4eec\u5e38\u89c1\u7684\u90a3\u79cd\u81ea\u52a8\u95e8\uff0c\u800c\u662f\u4f1a\u753b\u4e00\u4e2a\u6247\u5f62\u90a3\u6837\u7684\u81ea\u52a8\u95e8\uff0c\u6240\u4ee5\u53ea\u80fd\u4ece\u524d\u95e8\u8fdb\uff0c\u5f00\u95e8\u7684\u65f6\u5019\u4f1a\u626b\u5411\u4fa7\u58c1\u90a3\u79cd\u611f\u89c9\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684\u4fdd\u6301CLOSED\u662f\u4e3a\u4e86\u9632\u6b62\u649e\u5230\u4eba</li> <li>\u5728OPEN\u72b6\u6001\u4e0b\uff1a</li> <li>\u5982\u679c\u524d\u9762\u6709\u4eba\u3001\u540e\u9762\u6709\u4eba\u3001\u4e24\u4fa7\u90fd\u6709\u4eba\uff0c\u5219\u4fdd\u6301\u5f00\u95e8\u72b6\u6001</li> <li>\u5982\u679c\u90fd\u6ca1\u4eba\uff0c\u5219\u8f6c\u6362\u5230CLOSED\u72b6\u6001</li> </ul> <p></p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u6574\u7406\u4e3a\u72b6\u6001\u8868\u683c\u3002</p> <p></p> <p>\u4e0a\u56fe\u662f\u4e00\u4e2a\u975e\u5e38\u6807\u51c6\u7684\u6709\u7a77\u81ea\u52a8\u673aM1\u3002\u8be5\u56fe\u88ab\u79f0\u4e3a\u72b6\u6001\u56fe\uff08state diagram\uff09\uff0c\u5b83\u7684\u4e09\u4e2a\u72b6\u6001\u8bb0\u4f5cq1, q2, q3\uff1a</p> <ul> <li>q1\u4ee3\u8868 start state \u8d77\u59cb\u72b6\u6001</li> <li>q2\u4ee3\u8868 accept state \u63a5\u53d7\u72b6\u6001</li> </ul> <p>\u4e0a\u56fe\u8f93\u5165\u4fe1\u53f7\u4e3a1101. \u5bf9\u4e8eFA\uff0c\u6bcf\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u90fd\u53ea\u4f1a\u5728\u88ab\u8bfb\u53d6\u7684\u90a3\u4e00\u523b\u8d77\u4f5c\u7528\uff0c\u5f53\u8fd9\u4e2a\u7b26\u53f7\u88ab\u7528\u5b8c\u540e\uff0c\u4ed6\u5c31\u88ab\u6d88\u8017\u4e86\u3002\u4f46\u662f\uff0c\u4fe1\u53f7\u4f1a\u6539\u53d8\u72b6\u6001\uff0c\u56e0\u6b64\u673a\u5668\u53ef\u4ee5\u8bb0\u4f4f\u72b6\u6001\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u8be6\u7ec6\u63cf\u8ff0\u5982\u4e0b\uff1a</p> <ol> <li>\u9996\u5148\u7b2c\u4e00\u4e2a1\u88abq1\u8bfb\u53d6\u540e\uff0c\u72b6\u6001\u4eceq1\u8f6c\u79fb\u5230\u4e86q2.</li> <li>\u7136\u540e\u7b2c\u4e8c\u4e2a1\u88abq2\u8bfb\u53d6\u540e\uff0c\u4fdd\u7559\u5728\u4e86q2.</li> <li>\u7136\u540e\u7b2c\u4e09\u4e2a0\u88abq2\u8bfb\u53d6\u540e\uff0c\u8f6c\u79fb\u5230\u4e86q3.</li> <li>\u7136\u540e\u7b2c\u56db\u4e2a1\u88abq3\u8bfb\u53d6\u540e\uff0c\u8f6c\u79fb\u5230\u4e86q2.</li> </ol> <p>\u8f93\u5165\u4fe1\u53f7/\u8f93\u5165\u4e321101\u88ab\u6d88\u8017\u540e\uff0c\u673a\u5668\u505c\u5728\u4e86q2. \u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u56fe\u7247\u4e2dq3\u5230q2\u7684\u80a9\u5934\u4e0a\u5199\u4e860\u548c1\uff0c\u8fd9\u91cc\u8bb0\u5f55\u7684\u662f\u89c4\u5219\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cstate diagram \u72b6\u6001\u56fe\u4e2d\u53ea\u8bb0\u5f55\u89c4\u5219\uff0c\u5177\u4f53\u7684\u8f6c\u79fb\u9700\u8981\u7528\u6237\u81ea\u5df1\u53bbtrack\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#112-5-tuple","title":"1.1.2 5-Tuple","text":"<p>\u4e00\u4e2a\u6709\u9650\u81ea\u52a8\u673aFA\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u4e94\u5143\u7ec4</p> <p>A finite automaton is a 5-tuple,</p> \\[ (Q, \\Sigma, \\delta, q_{0}, F) \\] <p>where</p> <ol> <li>\\(Q\\) is a finite set called the states \u72b6\u6001\u96c6\u5408</li> <li>\\(\\Sigma\\) is a finite set called the alphabet \u5b57\u6bcd\u8868</li> <li>\\(\\delta : Q \\times \\Sigma \\to Q\\) is the transition function \u8f6c\u79fb\u51fd\u6570</li> <li>\\(q_{0} \\in Q\\) is the start state \u8d77\u59cb\u72b6\u6001</li> <li>\\(F \\subseteq Q\\) is the set of accept states \u63a5\u53d7\u72b6\u6001\u96c6</li> </ol> <p>\u5176\u4e2d\uff0cFA\u5fc5\u987b\u6709start state\uff0c\u4f46\u662f\u7279\u6b8a\u60c5\u51b5\u4e2daccept states\u53ef\u4ee5\u4e3a\u7a7a\u3002</p> <p></p> <p>\u521a\u624d\u6211\u4eec\u8ba8\u8bba\u7684\u5c31\u53ef\u4ee5\u6539\u5199\u4e3a\u4e0a\u8ff0\u5f62\u5f0f\u3002</p> <p>\u5982\u679cA\u662f\u673a\u5668M\u53ef\u4ee5\u63a5\u53d7\u7684\u4e00\u4e32string\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8bf4\uff1aA is the language of machine M, \u5e76\u5199\u4f5c\uff1a</p> \\[ L(M) = A \\] <p>We say that M recognizes A, or M accepts A.</p> <p>\u4e00\u53f0FA\u673a\u5668\u53ef\u4ee5\u63a5\u53d7\u82e5\u5e72\u5b57\u7b26\u4e32\uff0c\u4f46\u5b83\u6c38\u8fdc\u53ea\u80fd\u8bc6\u522b\u4e00\u4e2a\u8bed\u8a00\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#113-concise-description","title":"1.1.3 Concise Description","text":"<p>\u4e66\u4e2dP37\u63cf\u8ff0\u4e86\u5982\u4f55\u6807\u51c6\u5730\u53bb\u63cf\u8ff0\u4e00\u4e2aFA\u673a\u5668\u3002\u5728\u63cf\u8ff0\u7684\u65f6\u5019\uff0c\u6709\u8fde\u5f29\u5404\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li>state diagram \u72b6\u6001\u56fe\uff0c\u5373\u5706\u5708\u548c\u7bad\u5934\u6240\u8868\u8fbe\u7684\u56fe</li> <li>formal description \u5f62\u5f0f\u5316\u63cf\u8ff0\uff0c\u5373\u7528\u6587\u5b57\u3001\u4e94\u5143\u7ec4\u3001\u8f6c\u79fb\u8868\u7684\u8868\u8fbe</li> </ul> <p>\u8fd9\u4e24\u79cd\u65b9\u6cd5\u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u4e66\u4e2d\u6700\u540e\u603b\u7ed3\u4e86\u4e00\u4e2a\u96c6\u5408\u5f62\u5f0f\u7684concise description:</p> \\[ L(M_2) = \\{ w \\mid w \\text{ ends in a } 1 \\} \\] <p>\u4e0a\u5f0f\u4e5f\u53ef\u4ee5\u7528\u8bed\u8a00\u8868\u8fbe\uff1a</p> <p>M2 accepts exactly the set of binary strings that end with a 1.</p> <p>\u6216\u8005\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a</p> \\[ L(M_2) = (0 + 1) * 1 \\] <p>\u4e0a\u9762\u4e09\u79cd\u65b9\u5f0f\u90fd\u662fconcise description\uff0c\u5177\u4f53\u5199\u54ea\u79cd\u9700\u8981\u6839\u636e\u9700\u8981\u6765\u8fdb\u884c\u3002concise description\u5c31\u662f\u628a\u54ea\u4e9b\u4e32\u80fd\u5230\u8fbe\u63a5\u53d7\u6001\u603b\u7ed3\u6210\u4e00\u4e2a\u7b80\u6d01\u7684\u8bed\u8a00\u63cf\u8ff0\u3002</p> <p>\u518d\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a</p> <p>\u4f8b1.9</p> <p></p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2daccept state\u63a5\u53d7\u7a7a\u548c\u6240\u6709\u4ee50\u7ed3\u5c3e\u7684string</p> <p>\u4f8b1.11</p> <p></p> <p>start state\u4e00\u65e6\u63a5\u6536\u5230string\uff0c\u8981\u4e48\u53bbq1\uff0c\u8981\u4e48\u53bbr1\uff0c\u6ca1\u6709\u8fd4\u56de\u7684\u60c5\u51b5\uff0c\u6240\u4ee5M4\u8bb0\u4f4f\u4e86\u7b2c\u4e00\u4e2a\u7b26\u53f7\u3002</p> <p>\u5728\u5de6\u5206\u652f\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u7b26\u53f7\u662fa\uff0cM4\u63a5\u53d7\uff1b\u5728\u53f3\u5206\u652f\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u7b26\u53f7\u662fb\uff0cM4\u63a5\u53d7\u3002\u56e0\u6b64\u603b\u7ed3\u6765\u8bf4\uff1a</p> \\[ L(M_4) = \\{ w \\mid w \\text{ starts and ends with the same symbol} \\} \\] <p>\u4f8b1.13</p> <p></p> <p>\u9996\u5148\u6765\u770b\u4e00\u4e0b\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684alphabet={<code>&lt;RESET&gt;,0,1,2</code>}\uff0c\u4e5f\u5c31\u662f\u8bf4\u8f93\u5165string\u53ef\u80fd\u7531\u56db\u79cd\u7b26\u53f7\u7ec4\u6210\uff0c\u5206\u522b\u662f\u6570\u5b570\u30011\u30012\u548c\u7279\u6b8a\u7b26\u53f7RESET\u3002</p> <p>\u8fd9\u4e2aFA\u4eceq0\u5f00\u59cb\uff0c\u5982\u679c\u662f0\u5c31\u63a5\u53d7\uff0c1\u7684\u8bdd\u5230q1\uff0c2\u7684\u8bdd\u5230q2\uff1b\u5728q1\u8fd9\u91cc\u5982\u679c\u662f2\u5c31\u8fd4\u56deq0\u7136\u540e\u88ab\u63a5\u53d7\uff1b\u5728q2\u7684\u8bdd\u5982\u679c\u662f1\u5c31\u56de\u5230q0\u2026\u2026\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f1a\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u6a21\u8fd0\u7b97FA\u3002RESET\u7684\u4f5c\u7528\u662f\u6682\u505c\u5f53\u524d\u7684\u6a21\u8fd0\u7b97\uff0c\u8fdb\u884c\u65b0\u7684\u6a21\u8fd0\u7b97\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u4e2aFA\uff0c\u6587\u5b57\u63cf\u8ff0\u4f1a\u66f4\u7b80\u5355\u548c\u6e05\u6670\u4e00\u70b9\u3002</p> <p>\u4f8b1.15</p> <p></p> <p>\u8fd9\u4e2a\u662f\u4e0a\u4e00\u4e2a\u9898\u7684\u6cdb\u5316\u7248\u672c\u3002\u5982\u679c\u6211\u4eec\u753b\u4e00\u4e2aModule4\uff0cModule5\u6216\u8005Module\u4efb\u610f\u6570\u5b57\u7684\u4f8b\u5b50\uff0c\u90fd\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u753b\u51fa\u6765\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#114-formal-definition-of-computation","title":"1.1.4 Formal Definition of Computation","text":"<p>\u8ba1\u7b97\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\u5728\u4e0a\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u5206\u522b\u7528\u72b6\u6001\u56fe\u5bf9FA\u8fdb\u884c\u4e86\u975e\u5f62\u5f0f\u5316\u7684\u63cf\u8ff0\uff0c\u540c\u65f6\u4e5f\u75285\u5143\u7ec4\u4f5c\u4e3a\u5f62\u5f0f\u5316\u5b9a\u4e49\u63cf\u8ff0\u4e86\u5b83\u3002</p> <p>\u6211\u4eec\u9700\u8981\u638c\u63e1FA\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49\u65b9\u6cd5\uff1a</p> <p>Let \\(M = (Q, \\Sigma, \\delta, q_0, F)\\) be a finite automaton and let \\(w = w_1 w_2 \\cdots w_n\\) be a string where each \\(w_i\\) is a member of the alphabet \\(\\Sigma\\).</p> <p>Then \\(M\\) accepts \\(w\\) if a sequence of states \\(r_0, r_1, \\ldots, r_n\\) in \\(Q\\) exists with three conditions:</p> <ol> <li>\\(r_0 = q_0\\),</li> <li>\\(\\delta(r_i, w_{i+1}) = r_{i+1}, \\quad \\text{for } i = 0, \\ldots, n-1\\),</li> <li>\\(r_n \\in F\\).</li> </ol> <p>Condition 1 says that the machine starts in the start state. Condition 2 says that the machine goes from state to state according to the transition function. Condition 3 says that the machine accepts its input if it ends up in an accept state.</p> <p>We say that \\(M\\) recognizes language \\(A\\) if</p> \\[ A = \\{ w \\mid M \\text{ accepts } w \\}. \\] <p>A language is called a regular language if some finite automaton recognizes it.</p> <p>\u4e0a\u8ff0\u6570\u7406\u5c42\u9762\u7684\u5b9a\u4e49\u4e5f\u4e0d\u7528\u592a\u7ec6\u6263\u3002\u5bf9\u4e8e\u8fd9\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u80fd\u591f\u638c\u63e1\u57fa\u672c\u6982\u5ff5\u548c\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\u5c31\u884c\u4e86\uff1a</p> <ul> <li>\u533a\u5206DFA\u548cNFA\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u6765\u4e00\u4e2a\u5b57\u7b26\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u552f\u4e00\u7684\u8f6c\u79fb\uff0c\u5219\u662fDFA\uff1b\u5426\u5219\u662fNFA\u3002\u4f5c\u4e1a\u4e2d\u57fa\u672c\u90fd\u662fDFA\u3002</li> <li>\u8d70\u5b8c\u5b57\u7b26\u4e32\u540e\u6b63\u597d\u505c\u5728\u63a5\u53d7\u72b6\u6001\uff0c\u6216\u8005\u8d77\u59cb\u70b9\u5c31\u662f\u63a5\u6536\u72b6\u6001\uff0c\u5219\u79f0\u4e3a\u201c\u63a5\u53d7\u201d\u3002</li> <li>\u80fd\u591f\u770b\u61c2\u5e76\u7528\u4e00\u53e5\u8bdd\u63cf\u8ff0\u4e00\u4e2aDFA\u3002</li> <li>\u80fd\u591f\u6839\u636e\u8981\u6c42\u6784\u9020DFA\u3002</li> <li>\u80fd\u591f\u5bf9\u8fdb\u884c\u7b80\u77ed\u7684\u8bc1\u660e\u3002</li> </ul> <p>\u4f8b\uff1a</p> <p></p>"},{"location":"computational_theory/ch1_regular_languages/#115-dfa","title":"1.1.5 \u8bbe\u8ba1DFA","text":"<p>DFA\u7684D\u7684\u610f\u601d\u5c31\u662f\u786e\u5b9a\u6027\uff08Deterministic\uff09\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6765\u81ea\u5b57\u6bcd\u8868\u7684\u8f93\u5165\u7b26\u53f7\uff0c\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\u6240\u4ee5\u5728\u8bfe\u7a0b\u4e2d\uff0c\u5927\u90e8\u5206\u5b57\u6bcd\u8868\u90fd\u6bd4\u8f83\u7b80\u5355\u3002</p> <p>\u5b9e\u8df5\u4e2d\u6709\u65f6\u5019\u4f1a\u7528\u7b80\u5199\uff08Shorthand\uff09\uff0c\u6765\u7b80\u5316DFA\u56fe\u3002</p> <p>\u4f8b1\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u80fd\u591f\u8bc6\u522b\u5b57\u7b26\u4e32\u4e2d1\u7684\u4e2a\u6570\u662f\u5947\u6570\u4e2a\u8fd8\u662f\u5076\u6570\u4e2a\u7684FDA</p> <p></p> <p>\u7136\u540e\u6211\u4eec\u52a0\u5165start state\u548caccept state</p> <p></p> <p>\u8fd9\u91cc\u8fd9\u4e48\u8bbe\u7f6e\u7684\u539f\u56e0\u662f\u5728\u4e00\u4e2a\u6570\u5b57\u90fd\u6ca1\u6709\u8bfb\u7684\u65f6\u5019\uff0c\u8bfb\u5230\u76841\u7684\u4e2a\u6570\u662f0\u4e2a\uff0c\u6240\u4ee5start state\u662fq_even\u3002</p> <p>\u800caccept state\u7684\u8bbe\u7f6e\u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\u3002\u5982\u679c\u4f60\u60f3\u63a5\u53d7\u7684\u6027\u8d28\u662f\u5947\u6570\u4e2a\uff0c\u90a3\u4e48\u5c31\u628aq_odd\u8bbe\u7f6e\u4e3aaccept\uff1b\u5426\u5219\u5c31\u628aq_even\u8bbe\u7f6e\u4e3aaccept\u3002</p> <p>\u4f8b2\uff1a\u8bbe\u8ba1\u4e00\u4e2aDFA\uff0c\u8bc6\u522b\u201c\u81f3\u5c11\u5305\u542b\u4e00\u6b21\u5b57\u4e32001\u7684\u4e8c\u8fdb\u5236string\u201d</p> <p>\u89e3\u9898\u601d\u8def:</p> <ol> <li>\u5ffd\u7565\u6240\u6709\u76841</li> <li>\u4e00\u65e6\u770b\u52300\uff0c\u5c31\u8bb0\u4f4f\u53ef\u80fd\u662f001\u7684\u7b2c\u4e00\u4e2a0</li> <li>\u63a5\u7740\u5982\u679c\u8fd8\u662f0\uff0c\u5c31\u8bb0\u4f4f\u53ef\u80fd\u662f001\u768400</li> <li>\u63a5\u4e0b\u6765\u5982\u679c\u53c8\u662f\u4e00\u4e2a0\uff0c\u5219\u4ecd\u7136\u4fdd\u630100\u72b6\u6001</li> <li>\u572800\u72b6\u6001\u4e0b\u770b\u52301\uff0c\u5219\u627e\u5230\u4e86\u89e3\uff0caccept</li> </ol> <p></p>"},{"location":"computational_theory/ch1_regular_languages/#116-regular-operations","title":"1.1.6 Regular Operations \u6b63\u5219\u8fd0\u7b97","text":"<p>\u5728\u7b97\u672f\u4e2d\uff0c\u6570\u5b57\u662f\u5bf9\u8c61\uff0c\u52a0\u51cf\u4e58\u9664\u662f\u5de5\u5177\uff1b\u5728\u8ba1\u7b97\u7406\u8bba\u4e2d\uff0c\u5de5\u5177\u662f\u8bed\u8a00\uff0c\u5de5\u5177\u5219\u662f\u4e13\u95e8\u5904\u7406\u8bed\u8a00\u7684\u8fd0\u7b97\u3002</p> <p>\u8fd9\u91cc\u7684\u8bed\u8a00\u6307\u7684\u5c31\u662f\u6211\u4eec\u521a\u624d\u5b66\u4e60\u7684\u5f62\u5f0f\u8bed\u8a00\uff08formal language\uff09\u3002\u6bd4\u5982\u5728\u521a\u624d\u7ec3\u4e60\u7684\u4e60\u9898\u201c\u67e5\u627estring\u4e2d1\u7684\u4e2a\u6570\u662f\u5076\u6570\u4e2a\u8fd8\u662f\u5947\u6570\u4e2a\u201d\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u628a\u7ed3\u679c\u8fdb\u884c\u6b63\u5219\u5f62\u5f0f\u5316\u8868\u8ff0\uff1a</p> <p>\u5947\u6570\u4e2a 1 \u7684\u8bed\u8a00\uff1a</p> \\[ L_{\\text{odd}} = \\{\\, w \\in \\{0,1\\}^* \\mid \\#1(w) \\equiv 1 \\pmod{2} \\,\\} \\] <p>\u7b49\u4ef7\u6b63\u5219\u5f0f\uff1a</p> \\[ 0^* 1 0^* (10^*10^*)^* \\] <p>\u5047\u8bbeA\u548cB\u662f\u4e24\u4e2a\u8bed\u8a00\uff0c\u6b63\u5219\u8fd0\u7b97\u5305\u62ec\uff1a</p> <ul> <li>Union: \uff08\u5e76\uff09</li> </ul> <p>$$   A \\cup B = { x \\mid x \\in A \\;\\text{or}\\; x \\in B }   $$ - Concatenation: \uff08\u8fde\u63a5\uff09</p> <p>$$   A \\circ B = { xy \\mid x \\in A \\;\\text{and}\\; y \\in B }   $$ - Star: \uff08\u661f\u53f7\uff09</p> <p>$$   A^* = { x_1 x_2 \\cdots x_k \\mid k \\geq 0 \\;\\text{and each } x_i \\in A }   $$</p> <p>\u5e76\u5c31\u662f\u628aA\u548cB\u4e2d\u6240\u6709\u7684string\u5408\u5e76\u5728\u4e00\u4e2a\u8bed\u8a00\u4e2d\u3002</p> <p>\u8fde\u63a5\u4ee5\u6240\u6709\u53ef\u80fd\u7684\u65b9\u5f0f\uff0c\u628aA\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u5728B\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u9762\uff0c\u5f97\u5230\u65b0\u7684\u8bed\u8a00\u4e2d\u7684\u5168\u90e8\u5b57\u7b26\u4e32\u3002</p> <p>\u661f\u53f7\u8fd0\u7b97\u4f5c\u7528\u4e8e\u4e00\u4e2a\u8bed\u8a00\uff0c\u56e0\u6b64\u662funary operation\uff08\u4e00\u5143\u8fd0\u7b97\uff09\u800c\u4e0d\u662fbinary operation\uff08\u4e8c\u5143\u8fd0\u7b97\uff09\u3002\u661f\u53f7\u8fd0\u7b97\u4f1a\u628aA\u4e2d\u7684\u4efb\u610f\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f97\u5230\u65b0\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> <p>\u4f8b\uff1a</p> <p></p> <p>\u6ce8\u610fsigma\uff08alphabet\uff09\u53ea\u662f\u4fdd\u8bc1A\u548cB\u662f\u5408\u6cd5\u7684\uff0c\u6b63\u5219\u8fd0\u7b97\u4e2d\u4e0d\u9700\u8981\u7528\u5230alphabet\u4e2d\u7684\u5185\u5bb9\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#12-nondeterminism","title":"1.2 Nondeterminism \u975e\u786e\u5b9a\u6027","text":""},{"location":"computational_theory/ch1_regular_languages/#121-dfa-nfa","title":"1.2.1 DFA, NFA","text":"<p>\u786e\u5b9a\u6027\u8ba1\u7b97\uff08Deterministic Computation\uff09\u5c31\u662f\u5f53\u673a\u5668\u5904\u4e8e\u7ed9\u5b9a\u72b6\u6001\u4e0b\u5e76\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u65f6\uff0c\u53ef\u4ee5\u660e\u786e\u77e5\u9053\u673a\u5668\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002</p> <p>\u5728\u975e\u786e\u5b9a\u6027\uff08Nondeterministic\uff09\u673a\u5668\u4e2d\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u9009\u62e9\uff0c\u4ece\u800c\u5bfc\u81f4\u975e\u552f\u4e00\u7684\u7ed3\u679c\u3002\u6211\u4eec\u5728\u8bfe\u7a0b\u4e2d\u4e3b\u8981\u8ba8\u8bbaDFA\uff0c\u5373\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\u3002NFA\u5219\u662f\u975e\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\u3002</p> <p></p> <p>\u5728\u4e0a\u56fe\u7684\u4f8b\u5b50\u4e2d\uff0cq1\u72b6\u6001\u4e0b\u5982\u679c\u63a5\u53d71\uff0c\u53ef\u80fd\u8f6c\u79fb\u5230q2\uff0c\u4e5f\u53ef\u80fd\u4fdd\u6301\u5728q1\uff0c\u56e0\u6b64\u8fd9\u662f\u975e\u786e\u5b9a\u6027\u7684\u3002</p> <p>\u7531\u4e8e\u8bfe\u7a0b\u4e3b\u8981\u8ba8\u8bbaDFA\uff0c\u56e0\u6b64NFA\u7684\u8bf8\u591a\u76f8\u5173\u5185\u5bb9\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u8ba8\u8bba\u4e86\u3002\u552f\u4e00\u8981\u660e\u786e\u7684\u662f\uff1a\u6240\u6709\u7684NFA\u90fd\u80fd\u8f6c\u6362\u4e3aDFA\u3002</p> <p>\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a{q1,q2}\u7684state\uff0c\u4ece\u800c\u8ba9q1\u63a5\u53d71\u540e\u6307\u5411\u8fd9\u4e2a\u65b0\u7684state\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7528\u72b6\u6001\u96c6\u5408\u7684\u65b9\u5f0f\u53ef\u4ee5\u628a\u540c\u4e00\u8f93\u5165\u6307\u5411\u4e0d\u540c\u7684\u72b6\u6001\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u8f6c\u5316\u4e3a\u786e\u5b9a\u6027\u3002</p> <p>\u5b9a\u74061.19\uff1a\u6bcf\u4e00\u53f0NFA\u90fd\u7b49\u4ef7\u4e8e\u67d0\u4e00\u53f0DFA\u3002</p> <p>Corollary 1.40: A language is regular if and only if some nondeterministic finite automaton recognizes it.</p> <p>\u63a8\u8bba1.20\uff1a\u4e00\u4e2a\u8bed\u8a00\u662f\u6b63\u5219\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u6709\u4e00\u53f0\u975e\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\u8bc6\u522b\u4ed6\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#122-closure-under-the-regular-operations","title":"1.2.2 Closure under the regular operations","text":"<p>\u6b63\u5219\u8bed\u8a00\u7684\u5c01\u95ed\u6027</p> <p>Theorem 1.45: The class of regular languages is closed under the union operation.</p> <p>\u5b9a\u74061.22 \u6b63\u5219\u8bed\u8a00\u7c7b\u5728\u5e76\u8fd0\u7b97\u4e0b\u5c01\u95ed</p> <p>\u8be6\u89c1\u4e66\u4e0a\u5185\u5bb9</p> <p>Theorem 1.47: The class of regular languages is closed under the concatenation operation.</p> <p>\u5b9a\u74061.23 \u6b63\u5219\u8bed\u8a00\u7c7b\u5728\u8fde\u63a5\u8fd0\u7b97\u4e0b\u5c01\u95ed</p> <p>\u8be6\u89c1\u4e66\u4e0a\u5185\u5bb9</p> <p>Theorem 1.49: The class of regular languages is closed under the star operation.</p> <p>\u5b9a\u74061.24 \u6b63\u5219\u8bed\u8a00\u5728\u661f\u53f7\u8fd0\u7b97\u4e0b\u5c01\u95ed</p> <p>\u8be6\u89c1\u4e66\u4e0a\u5185\u5bb9</p>"},{"location":"computational_theory/ch1_regular_languages/#13-regular-expressions","title":"1.3 Regular Expressions \u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"computational_theory/ch1_regular_languages/#131-formal-definition-of-a-regular-expression","title":"1.3.1 Formal definition of a regular expression","text":"<p>\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u4e00\u4e2a\u201c\u6a21\u5f0f\u201d\uff08Pattern\uff09\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u5b9a\u4e49\u4e86\u4e00\u7ec4\u5b57\u7b26\u4e32\u7684\u89c4\u5219\u3002\u5339\u914d\u5f15\u64ce\u5728\u5de5\u4f5c\u65f6\uff0c\u4f1a\u4ece\u5de6\u5230\u53f3\u8bfb\u53d6\u8fd9\u4e2a\u6a21\u5f0f\uff0c\u5e76\u5c1d\u8bd5\u4ece\u5de6\u5230\u53f3\u5339\u914d\u76ee\u6807\u5b57\u7b26\u4e32\u3002</p> <p>\u6bd4\u5982\u8bf4\uff1a</p> \\[ (0 \\cup 1)0^* \\] <p>\u8fd9\u4e2a\u5305\u62ec\u4e24\u4e2a\u90e8\u5206\uff0c\u524d\u534a\u90e8\u5206\u7684\\((0 \\cup 1)\\)\u4ee3\u88680\u6216\u80051\uff1b\u540e\u9762\u76840*\u4ee3\u8868\u4ee50\u5f00\u5934\u7684\u3001\u957f\u5ea6\u4efb\u610f\u7684\u5b57\u7b26\u4e32\u3002\u5408\u8d77\u6765\u7684\u610f\u601d\u5c31\u662f\uff1a\u4ee50\u6216\u80051\u5f00\u5934\u7684\u4e00\u4e2a\uff0c\u540e\u9762\u5168\u90e8\u90fd\u662f0\u7684\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u53c8\u6bd4\u5982\u8bf4\uff1a</p> \\[ (0 \\cup 1)^* \\] <p>\u8fd9\u4e2a\u4ee3\u8868\u7684\u5c31\u662f\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u7684binary\u4e32\u3002</p> <p>\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5148\u505a\u661f\u53f7\u8fd0\u7b97\uff0c\u7136\u540e\u505a\u8fde\u63a5\u8fd0\u7b97\uff0c\u6700\u540e\u505a\u5e76\u8fd0\u7b97\u3002\u4e3a\u4e86\u66f4\u6e05\u6670\uff0c\u63a8\u8350\u7528\u62ec\u53f7\u6539\u53d8\u8fd9\u79cd\u60ef\u5e38\u987a\u5e8f\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679calphabet\u53ea\u5305\u542b0\u548c1\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528 \u03a3 \u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f (0\u222a1) \u7684\u7f29\u5199\u3002</p> <p></p> <p>\u603b\u7ed3\uff1a</p> <p></p> <p></p>"},{"location":"computational_theory/ch1_regular_languages/#132-kleenes-theorem","title":"1.3.2 Kleene's Theorem","text":"<p>\u5c31\u63cf\u8ff0\u80fd\u529b\u800c\u8a00\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u548cDFA\u662f\u7b49\u4ef7\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6240\u6709\u7684DFA\u90fd\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u63cf\u8ff0\u3002</p> <p>\u4efb\u4f55\u4e00\u4e2aDFA\uff08\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a\uff09\u6240\u80fd\u8bc6\u522b\u7684\u8bed\u8a00\uff0c\u90fd\u4e00\u5b9a\u53ef\u4ee5\u7528\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u63cf\u8ff0\u3002\u53cd\u4e4b\uff0c\u4efb\u4f55\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6240\u63cf\u8ff0\u7684\u8bed\u8a00\uff0c\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u7528\u4e00\u4e2aDFA\u6765\u8bc6\u522b\u3002</p> <p>\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5de7\u5408\uff0c\u800c\u662f\u7531\u4e00\u6761\u8457\u540d\u7684\u5b9a\u7406\u2014\u2014\u514b\u6797\u5b9a\u7406 (Kleene's Theorem) \u6240\u4fdd\u8bc1\u7684\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u63ed\u793a\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7b49\u4ef7\u5173\u7cfb\uff1a</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f (Regular Expressions) \u21d4 \u6709\u9650\u81ea\u52a8\u673a (Finite Automata)</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u4e0b\u9762\u8fd9\u4e09\u79cd\u63cf\u8ff0\u8bed\u8a00\u7684\u65b9\u5f0f\uff0c\u5b83\u4eec\u5728\u8868\u8fbe\u80fd\u529b\u4e0a\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\uff1a</p> <ol> <li>\u6b63\u5219\u8868\u8fbe\u5f0f (Regular Expression)</li> <li>\u975e\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a (NFA)</li> <li>\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a (DFA)</li> </ol> <p>\u5b83\u4eec\u90fd\u80fd\u4e14\u4ec5\u80fd\u63cf\u8ff0\u540c\u4e00\u7c7b\u8bed\u8a00\uff0c\u8fd9\u7c7b\u8bed\u8a00\u88ab\u79f0\u4e3a  \u201c\u6b63\u5219\u8bed\u8a00\u201d (Regular Languages) \u3002</p> <p>\u8fd9\u79cd\u7b49\u4ef7\u5173\u7cfb\u610f\u5473\u7740\u6211\u4eec\u6709\u660e\u786e\u7684\u7b97\u6cd5\u53ef\u4ee5\u5728\u8fd9\u51e0\u79cd\u5f62\u5f0f\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff1a</p> <ul> <li>\u6b63\u5219\u8868\u8fbe\u5f0f \u2192 NFA \uff1a \u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u79cd\u53eb\u505a\u201c\u6c64\u666e\u68ee\u6784\u9020\u6cd5\u201d (Thompson's construction) \u7684\u7b97\u6cd5\uff0c\u5c06\u4efb\u610f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210\u4e00\u4e2a\u7b49\u4ef7\u7684NFA\u3002</li> <li>NFA \u2192 DFA \uff1a \u6211\u4eec\u53ef\u4ee5\u7528\u201c\u5b50\u96c6\u6784\u9020\u6cd5\u201d (Subset construction) \u5c06\u4efb\u610f\u4e00\u4e2aNFA\u8f6c\u6362\u6210\u4e00\u4e2a\u7b49\u4ef7\u7684DFA\u3002</li> <li>DFA \u2192 \u6b63\u5219\u8868\u8fbe\u5f0f \uff1a \u540c\u6837\uff0c\u6211\u4eec\u4e5f\u6709\u7b97\u6cd5\uff08\u4f8b\u5982\u201c\u72b6\u6001\u6d88\u9664\u6cd5\u201d State Elimination Method \u6216 Brzozowski's Algebraic Method\uff09\u53ef\u4ee5\u5c06\u4efb\u610f\u4e00\u4e2aDFA\u8f6c\u6362\u6210\u4e00\u4e2a\u7b49\u4ef7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</li> </ul>"},{"location":"computational_theory/ch1_regular_languages/#14-nonregular-languages","title":"1.4 Nonregular Languages","text":""},{"location":"computational_theory/ch1_regular_languages/#141-pigeonhole-principle","title":"1.4.1 Pigeonhole Principle","text":"<p>\u975e\u6b63\u5219\u8bed\u8a00\u5c31\u662fDFA\u65e0\u6cd5\u8bc6\u522b\u7684\u8bed\u8a00\uff0c\u672c\u7ae0\u4e3b\u8981\u5c31\u662f\u6765\u8bf4\u660e\u5982\u4f55\u8bc6\u522b\u975e\u6b63\u5219\u8bed\u8a00\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2aDFA\uff0c\u5176\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u5b83\u7684\u72b6\u6001\u6570\u91cf\u4e5f\u662f\u6709\u9650\u7684\u3002\u4f60\u53ef\u4ee5\u628a\u72b6\u6001\u60f3\u8c61\u6210\u662f\u8fd9\u53f0\u673a\u5668\u7684\u5185\u5b58\uff0c\u5982\u679c\u4e00\u4e2aDFA\u670910\u4e2a\u72b6\u6001\uff0c\u90a3\u4e48\u5b83\u7684\u5185\u5b58\u5c31\u53ea\u670910\u4e2a\u5355\u4f4d\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u8981\u505a\u4e00\u4e2a\u65e0\u9650\u8ba1\u6570\u7684\u4efb\u52a1\uff0c\u8fd9\u4e2a\u4f18\u5148\u5185\u5b58\u7684\u7279\u6027\u5c31\u4f1a\u51b3\u5b9a\u8be5DFA\u7684\u80fd\u529b\u4e0a\u9650\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u8bed\u8a00B={\\(0^n1^n\\) | n&gt;=0}\uff0c\u8fd9\u4e2a\u7684\u8bed\u8a00\u7684\u542b\u4e49\u662f0\u548c1\u7684\u6570\u91cf\u76f8\u7b49\uff0c\u4e140\u5728\u524d1\u5728\u540e\u3002\u8981\u8bc6\u522b\u8fd9\u4e2a\u8bed\u8a00\uff0c\u673a\u5668\u5fc5\u987b\u7cbe\u786e\u5730\u8bb0\u4f4f\u5b83\u5230\u5e95\u8bfb\u4e86\u591a\u5c11\u4e2a0\uff0c\u8fd9\u6837\u624d\u80fd\u5224\u65ad\u540e\u9762\u76841\u7684\u6570\u91cf\u662f\u5426\u5b8c\u5168\u76f8\u7b49\u3002\u5047\u8bben\u53ef\u4ee5\u662f\u4efb\u4f55\u975e\u8d1f\u6574\u6570\uff0c\u90a3\u4e48\u8fd9\u53f0\u673a\u5668\u663e\u7136\u9700\u8981\u65e0\u9650\u7684\u8bb0\u5fc6\u80fd\u529b\u6765\u5b58\u50a8\u4efb\u610f\u5927\u7684\u6570\u5b57n\u3002\u7136\u800cDFA\u7684\u5185\u5b58\uff08\u72b6\u6001\uff09\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u76f4\u89c9\u6765\u770b\uff0cDFA\u529e\u4e0d\u5230\u8fd9\u4ef6\u4e8b\u3002</p> <p>\u672c\u7ae0\u8282\u4e3b\u8981\u5c31\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\uff0c\u4ecb\u7ecd\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u7684\u539f\u7406\u2014\u2014\u9e3d\u5de2\u539f\u7406\uff08Pigeonhole Principle\uff09\uff1a\u5047\u8bbe\u670910\u4e2a\u9e3d\u5b50\uff0c9\u4e2a\u9e3d\u7b3c\uff0c\u90a3\u4e48\u663e\u7136\u6709\u4e00\u4e2a\u9e3d\u7b3c\u8981\u653e2\u53ea\u9e3d\u5b50\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u6709N\u4e2a\u5bb9\u5668\uff0c\u5374\u6709N+1\u4e2a\u7269\u54c1\uff0c\u90a3\u4e48\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u9700\u8981\u88c5\u4e24\u4e2a\u6216\u8005\u66f4\u591a\u7684\u7269\u54c1\u3002</p> <p>\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2aDFA\uff0c\u663e\u7136\u9e3d\u7b3c\u5c31\u662f\u72b6\u6001\u96c6\u5408\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u9650\u7684\u6570\u91cf\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3ap\u4e2a\u72b6\u6001\u3002</p> <p>\u800c\u5f53\u6211\u4eec\u5904\u7406\u4e00\u4e2a\u5f88\u957f\u7684\u5b57\u7b26\u4e32s\u7684\u65f6\u5019\uff0cDFA\u6bcf\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c31\u4f1a\u8fdb\u5165\u4e00\u4e2a\u72b6\u6001\u3002\u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662fn\uff08\u5047\u8bben&gt;=p\uff09\uff0c\u90a3\u4e48DFA\u5c31\u4f1a\u4f9d\u6b21\u7ecf\u8fc7n+1\u4e2a\u72b6\u6001\uff08\u5305\u62ec\u8d77\u59cb\u72b6\u6001\uff09\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u6709n+1\u957f\u5ea6\u7684\u72b6\u6001\u5e8f\u5217\uff0c\u4e14\u6709p\u4e2aDFA\u672c\u8eab\u7684\u72b6\u6001\u3002\u6839\u636e\u9e3d\u5de2\u539f\u7406\uff0c\u5728DFA\u8d70\u8fc7\u7684\u8fd9\u4e2a\u72b6\u6001\u5e8f\u5217\u4e2d\uff0c\u5fc5\u7136\u81f3\u5c11\u6709\u4e00\u4e2a\u72b6\u6001\u88ab\u8bbf\u95ee\u4e86\u4e24\u6b21\u6216\u4ee5\u4e0a\u3002\u8fd9\u4e2a\u88ab\u91cd\u590d\u8bbf\u95ee\u7684\u72b6\u6001\u5c31\u5236\u9020\u4e86\u4e00\u4e2a\u201c\u5708\u201d\uff08loop\uff09\uff0c\u800c\u8fd9\u4e2a\u5708\u5219\u548c\u4e0b\u4e00\u4e2a\u6211\u4eec\u8981\u63a2\u8ba8\u7684\u6cf5\u5f15\u7406\u5bc6\u5207\u76f8\u5173\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#142-pumping-lemma","title":"1.4.2 Pumping Lemma","text":"<p>\u5982\u679c <code>A</code> \u662f\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\uff0c\u90a3\u4e48\u5b83\u5fc5\u7136\u62e5\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a\u6cf5\u957f\u5ea6 (pumping length) \u7684\u7279\u6b8a\u6570\u5b57 <code>p</code>\u3002\u8fd9\u4e2a <code>p</code> \u5177\u6709\u4ee5\u4e0b\u795e\u5947\u7684\u6027\u8d28\uff1a</p> <p>\u5bf9\u4e8e\u8bed\u8a00 <code>A</code> \u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e\u6216\u7b49\u4e8e <code>p</code> \u7684\u5b57\u7b26\u4e32 <code>s</code>\uff0c\u6211\u4eec\u603b\u80fd\u591f\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06 <code>s</code> \u5206\u89e3\u6210 <code>x</code>\u3001<code>y</code>\u3001<code>z</code> \u4e09\u6bb5\uff08\u5373 <code>s = xyz</code>\uff09\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5206\u89e3\u65b9\u5f0f\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a</p> <ol> <li><code>xy^iz \u2208 A</code>\uff0c\u5bf9\u4e8e\u6240\u6709 <code>i \u2265 0</code></li> <li>\u8fd9\u662f\u201c\u6cf5\u201d\u7684\u6838\u5fc3\u3002\u610f\u601d\u662f\uff0c\u4f60\u53ef\u4ee5\u628a\u4e2d\u95f4\u7684 <code>y</code> \u6bb5\u590d\u5236\u4efb\u610f\u6b21\u6570\uff08<code>i</code>=2, 3, 4...\uff09\u3001\u4fdd\u6301\u539f\u6837\uff08<code>i</code>=1\uff09\uff0c\u6216\u8005\u5b8c\u5168\u5220\u9664\uff08<code>i</code>=0\uff09\uff0c\u5f97\u5230\u7684\u65b0\u5b57\u7b26\u4e32\uff08\u5982 <code>xyyz</code>, <code>xyz</code>, <code>xz</code>\uff09\u5fc5\u987b\u4ecd\u7136\u662f\u8bed\u8a00 <code>A</code> \u7684\u4e00\u90e8\u5206\u3002</li> <li><code>|y| &gt; 0</code></li> <li>\u8fd9\u4e2a\u6761\u4ef6\u4fdd\u8bc1\u4e86\u6211\u4eec\u7528\u6765\u201c\u6cf5\u201d\u7684 <code>y</code> \u6bb5 \u4e0d\u662f\u7a7a\u7684 \u3002\u5982\u679c <code>y</code> \u53ef\u4ee5\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u7b2c\u4e00\u6761\u89c4\u5219\u5c31\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\u4e86\uff0c\u56e0\u4e3a\u590d\u5236\u6216\u5220\u9664\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u4e1c\u897f\u3002</li> <li><code>|xy| \u2264 p</code></li> <li>\u8fd9\u4e2a\u6761\u4ef6\u89c4\u5b9a\uff0c\u6211\u4eec\u627e\u5230\u7684\u8fd9\u4e2a\u53ef\u201c\u6cf5\u201d\u7684 <code>y</code> \u6bb5\uff0c\u5fc5\u987b\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u7684 \u65e9\u671f\u90e8\u5206 \u3002\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u5230 <code>y</code> \u6bb5\u7ed3\u675f\u7684\u8fd9\u90e8\u5206\uff08\u5373 <code>xy</code>\uff09\u7684\u603b\u957f\u5ea6\uff0c\u4e0d\u80fd\u8d85\u8fc7\u6211\u4eec\u4e00\u5f00\u59cb\u8bf4\u7684\u90a3\u4e2a\u7279\u6b8a\u6570\u5b57 <code>p</code>\uff08\u6cf5\u957f\u5ea6\uff09\u3002</li> </ol> <p>\u4e66\u672c\u4e0a\u7684\u8865\u5145\u8bf4\u660e\uff1a</p> <ul> <li><code>x</code> \u548c <code>z</code> \u53ef\u4ee5\u662f\u7a7a\u5b57\u7b26\u4e32\uff0c\u4f46 <code>y</code> \u4e0d\u884c\u3002</li> <li>\u6761\u4ef62\u548c\u6761\u4ef63\u662f\u6280\u672f\u6027\u7ea6\u675f\uff0c\u5b83\u4eec\u5728\u540e\u7eed\u7528\u8fd9\u4e2a\u5f15\u7406\u53bb\u8bc1\u660e\u4e00\u4e2a\u8bed\u8a00\u4e0d\u662f\u6b63\u5219\u7684\u65f6\u5019\uff0c\u4f1a\u8d77\u5230\u81f3\u5173\u5448\u8981\u7684\u4f5c\u7528\u3002</li> </ul> <p>\u6cf5\u5f15\u7406\u8bc1\u660e\u7684\u8be6\u7ec6\u6b65\u9aa4</p> <p>\u76ee\u6807\uff1a \u8bc1\u660e\u5982\u679c <code>A</code> \u662f\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\uff0c\u90a3\u4e48\u5b83\u6ee1\u8db3\u6cf5\u5f15\u7406\u3002</p> <p>\u7b2c1\u6b65\uff1a\u524d\u63d0\u4e0e\u8bbe\u5b9a (Premise and Setup)</p> <ol> <li>\u5047\u8bbe <code>A</code> \u662f\u6b63\u5219\u8bed\u8a00 : \u6839\u636e\u6b63\u5219\u8bed\u8a00\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u77e5\u9053\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a (DFA) <code>M</code> \u6765\u8bc6\u522b\u5b83\u3002</li> <li>\u5f62\u5f0f\u5316 <code>M</code> : \u6211\u4eec\u5c06 <code>M</code> \u5b9a\u4e49\u4e3a <code>(Q, \u03a3, \u03b4, q\u2080, F)</code>\uff0c\u5176\u4e2d <code>Q</code> \u662f <code>M</code> \u7684\u72b6\u6001\u96c6\u5408\u3002</li> <li>\u8bbe\u5b9a\u6cf5\u957f\u5ea6 <code>p</code> : \u6211\u4eec\u5c06\u6cf5\u5f15\u7406\u4e2d\u63d0\u5230\u7684\u6cf5\u957f\u5ea6 <code>p</code>\uff0c\u76f4\u63a5\u8bbe\u5b9a\u4e3aDFA <code>M</code> \u7684 \u72b6\u6001\u603b\u6570 \u3002\u5373 <code>p = |Q|</code>\u3002\u8fd9\u662f\u6574\u4e2a\u8bc1\u660e\u6700\u5173\u952e\u7684\u4e00\u6b65\u8bbe\u5b9a\u3002</li> </ol> <p>\u7b2c2\u6b65\uff1a\u9009\u62e9\u5b57\u7b26\u4e32\u5e76\u89c2\u5bdf\u5176\u72b6\u6001\u5e8f\u5217</p> <ol> <li>\u9009\u62e9\u5b57\u7b26\u4e32 <code>s</code> : \u4ece\u8bed\u8a00 <code>A</code> \u4e2d\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u957f\u5ea6 <code>n</code> \u5927\u4e8e\u6216\u7b49\u4e8e <code>p</code> \u7684\u5b57\u7b26\u4e32\uff0c\u5373 <code>|s| = n \u2265 p</code>\u3002\uff08\u5982\u679c\u8bed\u8a00 <code>A</code> \u4e2d\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u957f\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6cf5\u5f15\u7406\u7684\u6761\u4ef6\u81ea\u7136\u6210\u7acb\uff0c\u56e0\u4e3a\u5b83\u7684\u8981\u6c42\u662f\u9488\u5bf9\u6240\u6709\u957f\u5b57\u7b26\u4e32\u7684\uff0c\u6ca1\u6709\u957f\u5b57\u7b26\u4e32\u5c31\u7b49\u4e8e\u6ca1\u6709\u53cd\u4f8b\u3002\uff09</li> <li>\u751f\u6210\u72b6\u6001\u5e8f\u5217 : \u8ba9DFA <code>M</code> \u8bfb\u53d6\u5b57\u7b26\u4e32 <code>s = s\u2081s\u2082...s\u2099</code>\u3002\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u72b6\u6001\u5e8f\u5217 <code>r\u2080, r\u2081, r\u2082, ..., r\u2099</code>\uff0c\u5176\u4e2d <code>r\u2080 = q\u2080</code> \u662f\u8d77\u59cb\u72b6\u6001\uff0c<code>r\u1d62</code> \u662f\u8bfb\u53d6\u4e86\u524d <code>i</code> \u4e2a\u5b57\u7b26\u540e <code>M</code> \u6240\u5904\u7684\u72b6\u6001\u3002</li> <li>\u8ba1\u7b97\u5e8f\u5217\u957f\u5ea6 : \u8fd9\u4e2a\u72b6\u6001\u5e8f\u5217\u603b\u5171\u5305\u542b\u4e86 <code>n+1</code> \u4e2a\u72b6\u6001\u3002</li> </ol> <p>\u7b2c3\u6b65\uff1a\u5e94\u7528\u9e3d\u5de2\u539f\u7406\u627e\u5230\u91cd\u590d\u72b6\u6001 (\u6838\u5fc3\u8bba\u8bc1)</p> <ol> <li> <p>\u786e\u5b9a\u201c\u9e3d\u5b50\u201d\u548c\u201c\u9e3d\u7b3c\u201d :</p> </li> <li> <p>\u9e3d\u7b3c (Containers) : DFA <code>M</code> \u81ea\u8eab\u7684\u6240\u6709\u72b6\u6001\uff0c\u5171 <code>p</code> \u4e2a\u3002</p> </li> <li> <p>\u9e3d\u5b50 (Items) : \u4e0a\u8ff0\u72b6\u6001\u5e8f\u5217\u4e2d\u7684 \u524d <code>p+1</code> \u4e2a\u72b6\u6001 \uff0c\u5373 <code>r\u2080, r\u2081, ..., r\u209a</code>\u3002</p> </li> <li> <p>\u5f97\u51fa\u7ed3\u8bba : \u56e0\u4e3a <code>p+1 &gt; p</code>\uff0c\u201c\u9e3d\u5b50\u201d\u6570\u91cf\u591a\u4e8e\u201c\u9e3d\u7b3c\u201d\u6570\u91cf\u3002\u6839\u636e \u9e3d\u5de2\u539f\u7406 \uff0c\u5728\u8fd9 <code>p+1</code> \u4e2a\u72b6\u6001\u4e2d\uff0c \u5fc5\u7136\u81f3\u5c11\u6709\u4e00\u4e2a\u72b6\u6001\u662f\u91cd\u590d\u51fa\u73b0\u7684 \u3002</p> </li> <li>\u5f62\u5f0f\u5316\u91cd\u590d\u72b6\u6001 : \u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u4e00\u5b9a\u80fd\u627e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u4e0b\u6807 <code>j</code> \u548c <code>l</code>\uff0c\u6ee1\u8db3 <code>0 \u2264 j &lt; l \u2264 p</code>\uff0c\u4f7f\u5f97\u72b6\u6001 <code>r\u2c7c</code> \u548c\u72b6\u6001 <code>r\u2097</code> \u662f\u540c\u4e00\u4e2a\u72b6\u6001\uff0c\u5373 <code>r\u2c7c = r\u2097</code>\u3002</li> </ol> <p>\u7b2c4\u6b65\uff1a\u6839\u636e\u91cd\u590d\u72b6\u6001\u5206\u89e3\u5b57\u7b26\u4e32 <code>s</code></p> <p>\u6211\u4eec\u5229\u7528\u627e\u5230\u7684\u91cd\u590d\u72b6\u6001 <code>r\u2c7c = r\u2097</code> \u6765\u5c06\u5b57\u7b26\u4e32 <code>s</code> \u5206\u89e3\u6210 <code>xyz</code> \u4e09\u6bb5\uff1a</p> <ul> <li><code>x</code> : \u662f <code>s</code> \u7684\u524d <code>j</code> \u4e2a\u5b57\u7b26 (<code>s\u2081...s\u2c7c</code>)\u3002\u8fd9\u90e8\u5206\u5b57\u7b26\u4e32\u5c06 <code>M</code> \u4ece\u8d77\u59cb\u72b6\u6001 <code>r\u2080</code> \u5e26\u5230\u4e86 <code>r\u2c7c</code>\u3002</li> <li><code>y</code> : \u662f <code>s</code> \u7684\u7b2c <code>j+1</code> \u5230\u7b2c <code>l</code> \u4e2a\u5b57\u7b26 (<code>s\u2c7c\u208a\u2081...s\u2097</code>)\u3002\u8fd9\u90e8\u5206\u5b57\u7b26\u4e32\u5c06 <code>M</code> \u4ece <code>r\u2c7c</code> \u5e26\u5230 <code>r\u2097</code>\uff0c\u56e0\u4e3a <code>r\u2c7c = r\u2097</code>\uff0c\u6240\u4ee5 <code>y</code> \u9a71\u52a8 <code>M</code> \u8d70\u4e86\u4e00\u4e2a \u72b6\u6001\u56de\u8def \u3002</li> <li><code>z</code> : \u662f <code>s</code> \u5269\u4e0b\u7684\u90e8\u5206 (<code>s\u2097\u208a\u2081...s\u2099</code>)\u3002\u8fd9\u90e8\u5206\u5b57\u7b26\u4e32\u5c06 <code>M</code> \u4ece <code>r\u2097</code> \u5e26\u5230\u4e86\u6700\u7ec8\u72b6\u6001 <code>r\u2099</code>\u3002</li> </ul> <p>\u7b2c5\u6b65\uff1a\u9a8c\u8bc1\u5206\u89e3\u540e\u7684 <code>xyz</code> \u6ee1\u8db3\u6cf5\u5f15\u7406\u7684\u4e09\u4e2a\u6761\u4ef6</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u6765\u9010\u4e00\u9a8c\u8bc1\u8fd9\u6837\u5206\u89e3\u51fa\u7684 <code>xyz</code> \u6ee1\u8db3\u6cf5\u5f15\u7406\u7684\u6240\u6709\u8981\u6c42\u3002</p> <ol> <li> <p>\u9a8c\u8bc1 <code>|y| &gt; 0</code> :</p> </li> <li> <p>\u56e0\u4e3a\u6211\u4eec\u627e\u5230\u7684\u4e0b\u6807 <code>j</code> \u548c <code>l</code> \u6ee1\u8db3 <code>j &lt; l</code>\uff0c\u8fd9\u610f\u5473\u7740\u4ece <code>j+1</code> \u5230 <code>l</code> \u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u5b57\u3002\u6240\u4ee5\uff0c\u5b50\u5b57\u7b26\u4e32 <code>y</code> \u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5b57\u7b26 <code>s\u2c7c\u208a\u2081</code>\u3002\u56e0\u6b64\uff0c<code>y</code> \u4e0d\u53ef\u80fd\u662f\u7a7a\u5b57\u7b26\u4e32\u3002(\u6761\u4ef6\u6ee1\u8db3)</p> </li> <li> <p>\u9a8c\u8bc1 <code>|xy| \u2264 p</code> :</p> </li> <li> <p>\u5b57\u7b26\u4e32 <code>xy</code> \u7684\u957f\u5ea6\u5c31\u662f <code>l</code>\u3002\u6839\u636e\u6211\u4eec\u5728\u7b2c3\u6b65\u7684\u63a8\u5bfc\uff0c\u91cd\u590d\u72b6\u6001 <code>r\u2097</code> \u662f\u5728\u72b6\u6001\u5e8f\u5217\u7684\u524d <code>p+1</code> \u4e2a\u6210\u5458\u4e2d\u627e\u5230\u7684\uff0c\u6240\u4ee5 <code>l</code> \u7684\u6700\u5927\u503c\u5c31\u662f <code>p</code>\u3002\u56e0\u6b64\uff0c<code>|xy| = l \u2264 p</code>\u3002(\u6761\u4ef6\u6ee1\u8db3)</p> </li> <li> <p>\u9a8c\u8bc1 <code>xy^iz \u2208 A</code> \u5bf9\u6240\u6709 <code>i \u2265 0</code> \u6210\u7acb :</p> </li> <li> <p>\u6211\u4eec\u6765\u5206\u6790 <code>M</code> \u5982\u4f55\u5904\u7406 <code>xy^iz</code>\uff1a</p> </li> <li><code>M</code> \u8bfb\u53d6 <code>x</code> \u540e\uff0c\u4ece <code>r\u2080</code> \u5230\u8fbe <code>r\u2c7c</code>\u3002</li> <li><code>M</code> \u8bfb\u53d6 <code>y</code> \u540e\uff0c\u4ece <code>r\u2c7c</code> \u7ed5\u4e00\u5708\u56de\u5230 <code>r\u2c7c</code>\u3002\u65e0\u8bba\u8bfb\u53d6\u591a\u5c11\u6b21\uff08<code>i</code> \u6b21\uff09<code>y</code>\uff0c<code>M</code> \u6700\u7ec8\u90fd\u4f1a\u505c\u5728 <code>r\u2c7c</code> \u72b6\u6001\u3002</li> <li>\u5982\u679c <code>i=0</code>\uff0c\u76f8\u5f53\u4e8e\u4e0d\u8bfb\u53d6 <code>y</code>\uff0c<code>M</code> \u505c\u5728 <code>r\u2c7c</code>\u3002</li> <li>\u6700\u540e\uff0c<code>M</code> \u4ece <code>r\u2c7c</code> \u5f00\u59cb\u8bfb\u53d6 <code>z</code>\u3002\u56e0\u4e3a <code>r\u2c7c = r\u2097</code>\uff0c\u6240\u4ee5\u4ece <code>r\u2c7c</code> \u5f00\u59cb\u8bfb <code>z</code> \u548c\u4ece <code>r\u2097</code> \u5f00\u59cb\u8bfb <code>z</code> \u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\uff0c\u90fd\u4f1a\u6700\u7ec8\u5230\u8fbe <code>r\u2099</code> \u72b6\u6001\u3002</li> <li>\u7531\u4e8e\u539f\u59cb\u5b57\u7b26\u4e32 <code>s=xyz</code> \u5728\u8bed\u8a00 <code>A</code> \u4e2d\uff0c\u6240\u4ee5 <code>r\u2099</code> \u5fc5\u987b\u662f\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u65e0\u8bba <code>i</code> \u662f\u591a\u5c11\uff0c<code>M</code> \u5904\u7406 <code>xy^iz</code> \u540e\u90fd\u4f1a\u5230\u8fbe\u540c\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001 <code>r\u2099</code>\u3002\u8fd9\u610f\u5473\u7740\u6240\u6709 <code>xy^iz</code> \u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u90fd\u88ab <code>M</code> \u63a5\u53d7\uff0c\u5373\u5b83\u4eec\u90fd\u5728\u8bed\u8a00 <code>A</code> \u4e2d\u3002(\u6761\u4ef6\u6ee1\u8db3)</li> </ol> <p>\u7ed3\u8bba</p> <p>\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\uff0c\u4ece\u201c<code>A</code>\u662f\u6b63\u5219\u8bed\u8a00\u201d\u8fd9\u4e2a\u552f\u4e00\u7684\u524d\u63d0\u51fa\u53d1\uff0c\u53ef\u4ee5\u63a8\u5bfc\u51fa\uff1a\u5bf9\u4e8e <code>A</code> \u4e2d\u4efb\u610f\u4e00\u4e2a\u8db3\u591f\u957f\u7684\u5b57\u7b26\u4e32 <code>s</code>\uff0c\u6211\u4eec\u603b\u80fd\u627e\u5230\u4e00\u79cd\u6ee1\u8db3\u6cf5\u5f15\u7406\u6240\u6709\u4e09\u4e2a\u6761\u4ef6\u7684 <code>xyz</code> \u5206\u89e3\u65b9\u5f0f\u3002\u8fd9\u8868\u660e\u6cf5\u5f15\u7406\u7684\u9648\u8ff0\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u8bed\u8a00 <code>L = {0\u207f1\u207f | n \u2265 0}</code>\u3002\u5b83\u5305\u542b \"\u03b5\", \"01\", \"0011\", \"000111\" \u7b49\u3002\u6211\u4eec\u53ef\u4ee5\u7528pumping lemma\u8bc1\u660e\u8be5\u8bed\u8a00\u4e0d\u662f\u6b63\u5219\u8bed\u8a00\u3002</p> <p>\u8bc1\u660e\u56de\u987e\uff1a</p> <ol> <li>\u5047\u8bbe\u5b83\u662f\u6b63\u5219\u7684\uff0c\u62e5\u6709\u6cf5\u957f\u5ea6 <code>p</code>\u3002</li> <li>\u6211\u4eec\u9009\u62e9\u5b57\u7b26\u4e32 <code>s = 0^p1^p</code>\u3002</li> <li>\u56e0\u4e3a <code>|xy| \u2264 p</code>\uff0c\u6240\u4ee5 <code>y</code> \u5fc5\u7136\u53ea\u5305\u542b <code>0</code>\u3002</li> <li>\u5f53\u6211\u4eec\u201c\u6cf5\u201d <code>y</code> \u65f6\uff08\u6bd4\u5982\u590d\u5236\u4e00\u6b21\u5f97\u5230 <code>xyyz</code>\uff09\uff0c\u6211\u4eec\u589e\u52a0\u4e86 <code>0</code> \u7684\u6570\u91cf\uff0c\u4f46 <code>1</code> \u7684\u6570\u91cf\u4e0d\u53d8\u3002</li> <li>\u65b0\u5b57\u7b26\u4e32 <code>xyyz</code> \u7684 <code>0</code> \u548c <code>1</code> \u6570\u91cf\u4e0d\u518d\u76f8\u7b49\uff0c\u6240\u4ee5\u5b83\u4e0d\u5c5e\u4e8e\u8bed\u8a00 <code>L</code>\u3002</li> <li>\u8fd9\u4e0e\u6cf5\u5f15\u7406\u7684\u627f\u8bfa\uff08\u6cf5\u5b8c\u4e4b\u540e\u8fd8\u5fc5\u987b\u5728\u8bed\u8a00\u91cc\uff09\u4ea7\u751f \u77db\u76fe \u3002</li> <li>\u56e0\u6b64\uff0c\u8bed\u8a00 L \u4e0d\u662f\u6b63\u5219\u7684\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4efb\u4f55DFA\u53ef\u4ee5\u8bc6\u522b\u5b83\u3002</li> </ol>"},{"location":"computational_theory/ch1_regular_languages/#_1","title":"\u9644\uff1a\u7ec3\u4e60","text":""},{"location":"networks/intro/","title":"Networks","text":""},{"location":"networks/intro/#cs112-syllabus","title":"CS112 Syllabus","text":"<p>\u7981\u6b62\u4f7f\u7528AI Tools\u3002</p> <p>Reference Book: Computer Networking: A Top Down Approach by Kurose and Ross (6th or more recent edition)</p> <p>Grade Distribution (tentative):</p> <ul> <li>Exams (40%)</li> <li>Assignments/projects (30%),</li> <li>Class/Online participation and activities (30%).</li> </ul> <p>Tentative Schedule (along with relevant readings from the book's 6th Edition)</p> <p>9/2 - Introduction (Chapter 1.1, 1.2, 1.3) 9/4 - Introduction (Chapter 1.4 and 1.5) 9/9 - Applications - Overview and Socket API (Chapter 2.1 and 2.7). Also see the following slides from CMU. 9/11 - Applications - Web (Chapter 2.2) 9/16 - Applications - DNS (Chapter 2.5) 9/18 - Applications - P2P (Chapter 2.6) 9/23 \u2013 Transport \u2013 Overview + UDP (Chapter 3.1, 3.2, and 3.3) 9/25 -Transport - Reliability (Chapter 3.4) 9/30 - Transport - TCP (Chapter 3.5) 10/2 - Transport - Congestion Control (Chapter 3.6 and 3.7) 10/7  - Network Layer - IP (Chapter 4.1, 4.2, 4.3, 4.4) 10/9 -  Routing - BGP (Chapter 4.6) and OSPF (Chapter 4.5) 10/14 - Link Layer (Chapter 5.1, 5.2, 5.3, 5.4)</p> <p>10/16 - PHY + wireless (Chapter 6.1 and 6.3 + slides from CMU for PHY layer discussion: http://www.cs.cmu.edu/~dga/15-441/F08/lectures/05-physical.pdf) 10/21  -  Security(Chapter 8.1 - 8.4; 8.6)</p> <p>10/23 -  QUIC/HTTP 3.0) + Midterm Review</p> <p>10/28 - Midterm (during our usual lecture time)</p> <p>Research papers to follow\u2026 </p>"},{"location":"networks/intro/#pin","title":"pin","text":"<p>Final Exam - per block schedule (Thursday December 11th 3:30-5:30pm)</p>"}]}