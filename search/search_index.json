{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u5218\u6770\u592b\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u4e60\u7b14\u8bb0","text":"<p>Hello\uff01\u6b22\u8fce\u6765\u5230\u6211\u7684\u8ba1\u7b97\u673a\u79d1\u5b66\u7b14\u8bb0\u3002\u4e4b\u524d\u4eba\u5de5\u667a\u80fd\u7b14\u8bb0\u6574\u7406\u4ee5\u540e\uff0c\u81ea\u5df1\u590d\u4e60\u7684\u65f6\u5019\u5f88\u65b9\u4fbf\uff0c\u4e8e\u662f\u51b3\u5b9a\u628a\u8ba1\u7b97\u673a\u65b9\u9762\u7684\u77e5\u8bc6\u4e5f\u90fd\u6574\u7406\u4e3a\u7b14\u8bb0\u3002</p> <p>2025 Fall\u6211\u6b63\u597d\u8981\u4e0a\u4e09\u95e8MSCS\u7684\u5fc5\u4fee\u8bfe\uff0c\u6240\u4ee5\u5c31\u540c\u6b65\u628a\u7b14\u8bb0\u505a\u4e00\u4e0b\uff1a</p> <ul> <li>Algorithms\uff0c\u91c7\u7528\u7ecf\u5178\u7684\u7b97\u6cd5\u5bfc\u8bba\u6559\u6750CLRS\uff08\u7b2c\u56db\u7248\uff09</li> <li>Networks\uff0c\u91c7\u7528\u7ecf\u5178\u7684\u81ea\u9876\u5411\u4e0b\u65b9\u6cd5\uff08\u7b2c\u516b\u7248\uff09</li> <li>Computational Theory\uff0c\u91c7\u7528\u7ecf\u5178\u7684\u8ba1\u7b97\u7406\u8bba\u5bfc\u5f15\uff08\u7b2c\u4e09\u7248\uff09</li> </ul>"},{"location":"Seminar/250911_Deployed_Robot/","title":"Deployable Robots that Learn","text":"<p>Adaptive Planner Parameter Learning from Interventions (APPLI)</p> <p>RobotiX</p> <p>Xuesu Xiao, Ph.D., Roboticist</p> <p>xiao@gmu.edu</p> <p>Deployable Robots that Learn</p> <ul> <li>Interactive Learning from Non-Expert Users</li> <li>Adaptive Planner Parameter Learning (APPL)</li> <li>In-Situ Learning from Robot-Environment Interactions</li> <li>Learning Extreme Off-Road Mobility</li> <li>Reflective Learning from Past Deployment Experiences</li> <li>Learning from Hallucination (LfH)</li> </ul>"},{"location":"algorithms/1_intro/","title":"\u7b97\u6cd5\u5bfc\u8bba\uff1a\u5e8f\u8a00\u4e0e\u6982\u8bba","text":""},{"location":"algorithms/1_intro/#_2","title":"\u7b97\u6cd5\u7b80\u4ecb","text":"<p>CLRS 1.1\uff0c 1.2</p>"},{"location":"algorithms/1_intro/#_3","title":"\u7b97\u6cd5\u5206\u6790\u6846\u67b6","text":"<p>\u4e00\u4e2a\u5b8c\u6574\u7684\u7b97\u6cd5\u5206\u6790\u4e00\u822c\u5305\u542b\u5982\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>Example</li> <li>Description</li> <li>Pseudocode</li> <li>Actual Code</li> <li>Justification</li> <li>Time Analysis</li> <li>Space Analysis</li> </ul> <p>\u4ee5\u63d2\u5165\u6392\u5e8f\u4e3a\u4f8b\uff1a</p> <ul> <li>Example</li> </ul> <p>Input: [5, 3, 4, 1, 2]Process:Step 1: [3, 5, 4, 1, 2]Step 2: [3, 4, 5, 1, 2]Step 3: [1, 3, 4, 5, 2]Step 4: [1, 2, 3, 4, 5]Output: [1, 2, 3, 4, 5]</p> <ul> <li>Description</li> </ul> <p>Given an array of n numbers, insertion sort works by considering each element (starting from the second) and inserting it into its correct position among the already sorted part of the array. It keeps moving the element left until it is not smaller than the element before it. The process repeats until the entire array is sorted.</p> <ul> <li>Pseudocode</li> </ul> <pre><code>INSERTION-SORT(A[1...n])\n        for i = 2 to n\n            j = i\n            while j &gt; 1 and A[j] &lt; A[j-1]\n                swap A[j] and A[j-1]\n                j = j - 1\n</code></pre> <ul> <li>Actual Code</li> </ul> <pre><code>def insertion_sort(arr):\n    for i in range(1, len(arr)):\n        j = i\n        while j &gt; 0 and arr[j] &lt; arr[j-1]:\n            arr[j], arr[j-1] = arr[j-1], arr[j]\n            j -= 1\n    return arr\n</code></pre> <p>.</p> <p>Justification</p> <p>Loop invariant:</p> <p>At the beginning of each iteration i, the subarray A[1...i-1] is sorted.</p> <ol> <li>Initialization: When i=2, the subarray A[1] is trivially sorted.</li> <li>Maintenance: If A[1...i-1] is sorted before iteration i, then inserting A[i] into its correct position keeps A[1...i] sorted.</li> <li>Termination: When i=n+1, the invariant tells us that A[1...n] is sorted, so the algorithm is correct.</li> </ol> <p>\u6ce8\u610f\u8fd9\u91cc\u7684Loop Invariant\uff08\u5faa\u73af\u4e0d\u53d8\u91cf\uff09\uff1a</p> <p>\u63d2\u5165\u6392\u5e8f\u7684 \u6838\u5fc3\u627f\u8bfa \uff0c\u4e5f\u5c31\u662f\u5b83\u7684\u5faa\u73af\u4e0d\u53d8\u91cf (Loop Invariant) \u662f\uff1a</p> <p>\u201c\u5728 <code>for</code> \u5faa\u73af\u7684\u6bcf\u6b21\u8fed\u4ee3 <code>i</code> \u5f00\u59cb\u65f6\uff0c\u5b50\u6570\u7ec4 <code>A[1...i-1]</code> \u90fd\u5305\u542b\u8be5\u8303\u56f4\u5185\u7684\u539f\u59cb\u5143\u7d20\uff0c\u5e76\u4e14\u662f\u6392\u597d\u5e8f\u7684\u3002\u201d</p> <p>\u4e0b\u9762\u6211\u4eec\u7528\u4e09\u4e2a\u6b65\u9aa4\u6765\u9a8c\u8bc1\u8fd9\u4e2a\u627f\u8bfa\u7684\u6709\u6548\u6027\u3002</p> <p>1\u3001\u521d\u59cb\u5316\uff08\u8bc1\u660e\u8d77\u70b9\uff09</p> <p>\u8fd9\u4e00\u6b65\u68c0\u67e5\u7684\u662f\uff0c\u5728\u5faa\u73af \u7b2c\u4e00\u6b21\u6267\u884c\u4e4b\u524d \uff0c\u6211\u4eec\u7684\u627f\u8bfa\u662f\u5426\u6210\u7acb\u3002</p> <ul> <li><code>for</code> \u5faa\u73af\u662f\u4ece <code>i = 2</code> \u5f00\u59cb\u7684\u3002</li> <li>\u5728\u8fd9\u4e2a\u8d77\u70b9\uff0c\u4e0d\u53d8\u91cf\u6240\u6307\u7684\u5b50\u6570\u7ec4\u662f <code>A[1...i-1]</code>\uff0c\u4ee3\u5165 <code>i=2</code> \u5c31\u662f <code>A[1...2-1]</code>\uff0c\u5373 <code>A[1]</code>\u3002</li> <li>\u4e00\u4e2a\u53ea\u5305\u542b\u5355\u4e2a\u5143\u7d20\u7684\u5b50\u6570\u7ec4\uff0c\u6839\u636e\u5b9a\u4e49\uff0c\u5b83\u672c\u8eab\u5c31\u662f\u6709\u5e8f\u7684\u3002</li> <li>\u56e0\u6b64\uff0c\u6211\u4eec\u7684\u627f\u8bfa\u5728\u6700\u5f00\u59cb\u7684\u65f6\u5019\u662f\u6210\u7acb\u7684\u3002\u2705</li> </ul> <p>2\u3001\u4fdd\u6301\uff08\u8bc1\u660e\u8fc7\u7a0b\uff09</p> <p>\u8fd9\u4e00\u6b65\u8981\u8bc1\u660e\u7684\u662f\uff1a\u5982\u679c\u5728\u67d0\u4e00\u6b21\u8fed\u4ee3\u5f00\u59cb\u65f6\u627f\u8bfa\u662f\u6210\u7acb\u7684\uff0c\u90a3\u4e48\u5728\u8fd9\u6b21\u8fed\u4ee3\u7ed3\u675f\u3001\u4e0b\u4e00\u6b21\u8fed\u4ee3\u5f00\u59cb\u65f6\uff0c\u627f\u8bfa \u4f9d\u7136\u4f1a\u6210\u7acb \u3002\u8fd9\u8bc1\u660e\u4e86\u6211\u4eec\u7684\u627f\u8bfa\u5728\u5faa\u73af\u4e2d\u662f\u80fd\u591f\u4e00\u76f4\u7ef4\u6301\u4e0b\u53bb\u7684\u3002</p> <ul> <li>\u5047\u8bbe \uff1a\u5728\u7b2c <code>i</code> \u6b21\u8fed\u4ee3\u5f00\u59cb\u65f6\uff0c\u627f\u8bfa\u4e3a\u771f\uff0c\u4e5f\u5c31\u662f\u8bf4\u5b50\u6570\u7ec4 <code>A[1...i-1]</code> \u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\u3002</li> <li>\u64cd\u4f5c \uff1a\u5728\u8fd9\u6b21\u8fed\u4ee3\u4e2d\uff0c\u5faa\u73af\u4f53\uff08\u5185\u90e8\u7684 <code>while</code> \u5faa\u73af\uff09\u4f1a\u53d6\u51fa\u4e0b\u4e00\u4e2a\u5143\u7d20 <code>A[i]</code>\uff0c\u5e76\u5c06\u5b83\u63d2\u5165\u5230\u524d\u9762\u5df2\u7ecf\u6709\u5e8f\u7684 <code>A[1...i-1]</code> \u4e2d\u7684\u6b63\u786e\u4f4d\u7f6e\u3002</li> <li>\u7ed3\u679c \uff1a\u5f53 <code>A[i]</code> \u63d2\u5165\u540e\uff0c\u8fd9\u4e2a\u65b0\u7684\u3001\u66f4\u957f\u7684\u5b50\u6570\u7ec4 <code>A[1...i]</code> \u73b0\u5728\u6574\u4f53\u5c31\u662f\u6709\u5e8f\u7684\u4e86\u3002\u8fd9\u4e2a\u72b6\u6001\u662f\u7b2c <code>i</code> \u6b21\u8fed\u4ee3\u7ed3\u675f\u65f6\u7684\u72b6\u6001\u3002</li> <li>\u5f53\u5faa\u73af\u8fdb\u5165\u4e0b\u4e00\u6b21\u8fed\u4ee3\uff0c\u4e5f\u5c31\u662f\u7b2c <code>i+1</code> \u6b21\u65f6\uff0c\u5b83\u6240\u9762\u5bf9\u7684 <code>A[1...(i+1)-1]</code> \u6b63\u662f\u6211\u4eec\u521a\u521a\u6392\u597d\u5e8f\u7684 <code>A[1...i]</code>\u3002</li> <li>\u56e0\u6b64\uff0c\u627f\u8bfa\u6210\u529f\u5730\u7ef4\u6301\u5e76\u4f20\u9012\u5230\u4e86\u4e0b\u4e00\u6b21\u8fed\u4ee3\u3002\u2705</li> </ul> <p>3\u3001\u7ec8\u6b62\uff08\u8bc1\u660e\u7ec8\u70b9\uff09</p> <p>\u8fd9\u4e00\u6b65\u5c55\u793a\u7684\u662f\uff0c\u5f53\u5faa\u73af \u7ed3\u675f\u65f6 \uff0c\u8fd9\u4e2a\u4e00\u76f4\u4fdd\u6301\u4e3a\u771f\u7684\u627f\u8bfa\u80fd\u544a\u8bc9\u6211\u4eec\u4ec0\u4e48\u3002</p> <ul> <li><code>for</code> \u5faa\u73af\u7684\u7ec8\u6b62\u6761\u4ef6\u662f\u5f53 <code>i</code> \u589e\u52a0\u5230 n + 1 \u65f6\uff0c\u5faa\u73af\u4e0d\u518d\u6267\u884c\u3002</li> <li>\u5728\u5faa\u73af\u7ec8\u6b62\u7684\u8fd9\u4e00\u523b\uff0c\u6211\u4eec\u53ef\u4ee5\u6700\u540e\u4e00\u6b21\u8fd0\u7528\u6211\u4eec\u7684\u4e0d\u53d8\u91cf\uff0c\u5c06 <code>i = n + 1</code> \u4ee3\u5165\u4e0d\u53d8\u91cf\u7684\u9648\u8ff0\u4e2d\u3002</li> <li>\u8fd9\u4e2a\u9648\u8ff0\u5c31\u53d8\u6210\u4e86\uff1a\u201c\u5b50\u6570\u7ec4 <code>A[1...(n+1)-1]</code>\uff0c\u5373 <code>A[1...n]</code>\uff0c\u662f\u6392\u597d\u5e8f\u7684\u3002\u201d</li> <li>\u8fd9\u4e2a\u6700\u7ec8\u7684\u9648\u8ff0\u610f\u5473\u7740\u6574\u4e2a\u6570\u7ec4\u90fd\u5df2\u6709\u5e8f\u3002\u8fd9\u6b63\u662f\u6211\u4eec\u7b97\u6cd5\u60f3\u8981\u8fbe\u6210\u7684\u76ee\u6807\uff0c\u6240\u4ee5\u8bc1\u660e\u5b8c\u6210\u3002\u6211\u4eec\u901a\u8fc7\u5faa\u73af\u4e0d\u53d8\u91cf\uff0c\u4e25\u8c28\u5730\u8bf4\u660e\u4e86\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u662f\u6b63\u786e\u7684\u3002\u2705</li> </ul> <p>Time Analysis</p> <p>Best Case: Array already sorted \u2192 n-1 comparisons \u2192 \u0398(n).</p> <p>Worst Case: Array in reverse order \u2192 1+2+...+(n-1) = n(n-1)/2 comparisons \u2192 \u0398(n\\^2).</p> <p>Average Case: Random input \u2192 about n\\^2/4 comparisons \u2192 \u0398(n\\^2).</p> <p>Space Analysis</p> <p>Insertion Sort is an in-place sorting algorithm. It only requires a constant amount of additional memory for indices and temporary variables.</p> <p>Space complexity: O(1).</p> <p>Stability: Stable (equal elements retain their relative order)</p>"},{"location":"algorithms/1_intro/#_4","title":"\u7b97\u6cd5\u8bbe\u8ba1","text":"<p>CLRS 2.3</p>"},{"location":"algorithms/1_intro/#_5","title":"\u590d\u6742\u6027\u5206\u6790","text":"<p>\uff08\u5f85\u529e\uff1a\u8fc7\u4e00\u904dCLRS 3.1\uff0c3.2\uff0c3.3\uff0c\u8865\u5145\u4e00\u4e0b\u9057\u6f0f\u6389\u7684\u5185\u5bb9\uff09</p> <p>\u5728\u7b97\u6cd5\u5206\u6790\u4e2d\uff0c\u6211\u4eec\u91c7\u7528Asymptotic Notation\uff0c\u4e5f\u5373\u6e10\u8fdb\u8bb0\u6cd5\uff0c\u6765\u5206\u6790\u7b97\u6cd5\u7684\u6548\u7387\u3002\u5176\u5305\u542b\u4e09\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1a</p> <ul> <li>Big O</li> <li>Big Omega \\(\\Omega\\)</li> <li>Big Theta \\(\\Theta\\)</li> </ul>"},{"location":"algorithms/1_intro/#big-o","title":"Big O","text":"<ul> <li>Definition: The function \\(f(n)\\) is \\(O(g(n))\\) if there exist constants \\(c &gt; 0\\) and \\(n_0\\) such that</li> </ul> <p>$$   0 \\leq f(n) \\leq c \\cdot g(n) \\quad \\text{for all } n \\geq n_0.   $$ - Example: \\(2n^2 + 3n + 1\\) is \\(O(n^2)\\) because for \\(c = 3\\) and \\(n_0 = 1\\), we have</p> <p>$$   0 \\leq 2n^2 + 3n + 1 \\leq 2n^2 + 3n^2 + 1 \\cdot n^2 \\leq 6n^2 , \\quad \\text{for all } n \\geq 1   $$</p> <p>\u4e00\u822c\u6765\u8bf4\uff0cBig O\u63cf\u8ff0\u4e86\u4e00\u4e2a\u51fd\u6570\u589e\u957f\u901f\u5ea6\u7684\u4e0a\u9650\uff08Upper Bound\uff09\u3002\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u201c\u5f53\u8f93\u5165\u89c4\u6a21 <code>n</code> \u8db3\u591f\u5927\u65f6\uff0c\u51fd\u6570 <code>f(n)</code> \u7684\u589e\u957f\u901f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u51fd\u6570 <code>g(n)</code> \u7684 <code>c</code> \u500d\u3002</p> <p>\u901a\u5e38n0\u9009\u53d6\u4e3a1\uff0c\u6216\u8005\u5927\u4e8e1\u7684\u4e00\u4e2a\u6574\u6570\u3002\uff08\u867d\u7136\u5728\u4e0a\u8ff0\u5b9a\u4e49\u4e2d\u6ca1\u6709\u8bf4\u660en0\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e1\uff0c\u4f46\u662f\u4e00\u822c\u5728\u7b97\u6cd5\u5206\u6790\u4e2d\u6211\u4eec\u9ed8\u8ba4n0\u662f\u5927\u4e8e\u7b49\u4e8e1\u7684\u3002\u56e0\u4e3a\u6211\u4eec\u5728\u5206\u6790\u590d\u6742\u6027\u7684\u65f6\u5019\uff0c\u5173\u5fc3\u7684\u662f\u6e10\u8fdb\u6027\u4e3a\uff0c\u76ee\u7684\u662f\u63cf\u8ff0\u51fd\u6570\u7684\u957f\u671f\u589e\u957f\u8d8b\u52bf\uff0c\u56e0\u6b64\u5982\u679cn0\u8d77\u59cb\u4e8e\u8d1f\u6570\uff0c\u5728\u8fd9\u4e2a\u5e94\u7528\u4e2d\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\uff09</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7b97\u6cd5\u5206\u6790\u4e2d\uff0cg(n)\u662ff(n)\u7684\u592a\u725b\u82b1\u74e3\uff0c\u5e76\u4e14\u6211\u4eec\u4e0d\u5173\u6ce8\u5e38\u6570\u56e0\u5b50\u3002\u6240\u4ee5\u5f53\u6211\u4eec\u53bb\u5206\u6790\u4e00\u4e2a\u7b97\u6cd5\u7684Big O\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u5408\u9002\u7684c\u548cn\uff0c\u627e\u5230g(n)\u5c31\u53ef\u4ee5\u4e86\u3002</p> <p>\u4ece\u6570\u5b66\u5b9a\u4e49\u4e0a\u6765\u8bf4\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u5c31\u7b97\u7ed9\u51fa <code>O(n\u00b3)</code> \uff0c\u4ecd\u7136\u4e5f\u662f\u4e00\u4e2a\u6b63\u786e\u7684\u4e0a\u9650\uff0c\u4f46\u5b83\u662f\u4e00\u4e2a\u5f88\u201c\u677e\u201d\u7684\u4e0a\u9650\uff0c\u6ca1\u6709\u7cbe\u786e\u5730\u53cd\u6620\u51fa\u51fd\u6570 <code>2n</code> \u7684\u589e\u957f\u8d8b\u52bf\u3002\u8fd9\u5c31\u50cf\u95ee\u4e00\u4e2a\u5c0f\u5b69\u591a\u9ad8\uff0c\u4f60\u8bf4\uff1a\u201c\u4ed6\u80af\u5b9a\u4e0d\u8d85\u8fc73\u7c73\u9ad8\u3002\u201d \u8fd9\u53e5\u8bdd\u867d\u7136\u6ca1\u9519\uff0c\u4f46\u6ca1\u4ec0\u4e48\u7528\u3002\u6211\u4eec\u66f4\u60f3\u542c\u5230\u7684\u662f\uff1a\u201c\u4ed6\u5927\u69821\u7c732\u9ad8\u3002\u201d\u6240\u4ee5\uff0c\u5f53\u6211\u4eec\u5206\u6790\u7b97\u6cd5\u590d\u6742\u5ea6\u65f6\uff0c\u867d\u7136\u6709\u65e0\u6570\u4e2a\u6b63\u786e\u7684 Big O \u7b54\u6848\uff0c\u4f46\u6211\u4eec\u603b\u662f\u7ea6\u5b9a\u4fd7\u6210\u5730\u53bb\u5bfb\u627e\u5e76\u7ed9\u51fa\u4e00\u4e2a\u6700\u7b80\u5355\u3001\u6700\u8d34\u8fd1\u7684\u90a3\u4e2a\uff0c\u4e5f\u5c31\u662f \u6700\u5c0f\u7684\u90a3\u4e2a\u589e\u957f\u7387 \u3002\u5982\u679c\u80fd\u627e\u5230\u4e25\u683c\u4e0a\u754c\uff0c\u6709\u65f6\u5019\u4e5f\u4f1a\u5199\u4f5co\u8bb0\u53f7\uff08\u5c0fo\uff09\u3002</p> <p>\u5728\u8bb0\u5f55Big O\u7684\u65f6\u5019\uff0c\u4e00\u822c\u6709\u4e24\u79cd\u5e38\u89c1\u5199\u6cd5\uff1a</p> <ul> <li><code>f(n) = O(n\u00b2)</code> \uff1a\u8fd9\u662f\u6700\u5e38\u89c1\u3001\u6700\u901a\u7528\u7684\u5199\u6cd5\u3002\u5b83\u8bfb\u4f5c \u201cf(n) is O of n-squared\u201d\uff08f(n) \u662f n \u5e73\u65b9\u7684 Big O\uff09\u3002\u867d\u7136\u8fd9\u91cc\u7528\u7684\u662f\u7b49\u53f7 <code>=</code>\uff0c\u4f46\u5b83\u5e76\u4e0d\u8868\u793a\u6570\u5b66\u4e0a\u4e25\u683c\u7684\u201c\u76f8\u7b49\u201d\uff0c\u800c\u662f\u4e00\u79cd\u7ea6\u5b9a\u4fd7\u6210\u7684\u8868\u793a\u6cd5\uff0c\u610f\u601d\u662f\u201cf(n) \u7684\u589e\u957f\u7387\u5c5e\u4e8e O(n\u00b2) \u8fd9\u4e2a\u7ea7\u522b\u201d\u3002</li> <li><code>f(n) \u2208 O(n\u00b2)</code> \uff1a\u8fd9\u662f\u4ece\u6570\u5b66\u96c6\u5408\u89d2\u5ea6\u6765\u770b\u66f4\u4e25\u8c28\u7684\u5199\u6cd5\u3002\u8fd9\u91cc\u7684 <code>\u2208</code> \u7b26\u53f7\u8868\u793a\u201c\u5c5e\u4e8e\u201d\uff08is an element of\uff09\u3002<code>O(n\u00b2)</code> \u5b9e\u9645\u4e0a\u4ee3\u8868\u4e00\u4e2a \u51fd\u6570\u7684\u96c6\u5408 \uff0c\u8fd9\u4e2a\u96c6\u5408\u5305\u542b\u4e86\u6240\u6709\u589e\u957f\u901f\u5ea6\u4e0d\u8d85\u8fc7 <code>n\u00b2</code> \u7684\u51fd\u6570\u3002\u6240\u4ee5 <code>f(n) \u2208 O(n\u00b2)</code> \u7684\u610f\u601d\u662f \u201cf(n) \u662f O(n\u00b2) \u8fd9\u4e2a\u96c6\u5408\u4e2d\u7684\u4e00\u5458\u201d\u3002</li> </ul>"},{"location":"algorithms/1_intro/#big-o_1","title":"\u8bc1\u660eBig O\u6027\u8d28","text":"<p>\u5982\u679c <code>f(n) = O(g(n))</code> \u5e76\u4e14 <code>h(n) = O(g(n))</code>\uff0c\u90a3\u4e48 <code>f(n) + h(n) = O(g(n))</code>\u3002</p> <p>\u7528\u901a\u4fd7\u7684\u8bed\u8a00\u89e3\u91ca\u5c31\u662f\uff1a \u5982\u679c\u4e24\u4e2a\u51fd\u6570 <code>f(n)</code> \u548c <code>h(n)</code> \u7684\u589e\u957f\u7387\u90fd\u6700\u591a\u548c <code>g(n)</code> \u4e00\u6837\u5feb\uff08\u6216\u8005\u66f4\u6162\uff09\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u548c <code>f(n) + h(n)</code> \u7684\u589e\u957f\u7387\u4e5f\u6700\u591a\u548c <code>g(n)</code> \u4e00\u6837\u5feb\u3002</p> <p>\u8fd9\u5728\u7b97\u6cd5\u5206\u6790\u4e2d\u975e\u5e38\u6709\u7528\u3002\u6bd4\u5982\uff0c\u5982\u679c\u4f60\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u4ee3\u7801\u5757\uff0c\u5b83\u4eec\u7684\u8fd0\u884c\u65f6\u95f4\u5206\u522b\u662f <code>O(n)</code> \u548c <code>O(n)</code>\uff0c\u90a3\u4e48\u6574\u4e2a\u8fc7\u7a0b\u7684\u8fd0\u884c\u65f6\u95f4\u5c31\u662f <code>O(n) + O(n)</code>\uff0c\u6839\u636e\u8fd9\u4e2a\u5b9a\u7406\uff0c\u7ed3\u679c\u4f9d\u7136\u662f <code>O(n)</code>\u3002</p> <p>PROOFS</p> <p>\u8bc1\u660e\u8fc7\u7a0b\u662f\u4e25\u683c\u6309\u7167\u5927O\u8868\u793a\u6cd5\u7684\u5b9a\u4e49\u6765\u8fdb\u884c\u7684\u3002\u6211\u4eec\u4e00\u6b65\u4e00\u6b65\u6765\u770b\uff1a</p> <p>1. \u5047\u8bbe (Suppose)</p> <p><code>Suppose f = O(g) and h = O(g).</code></p> <p>\u8bc1\u660e\u7684\u7b2c\u4e00\u6b65\u662f\u5047\u8bbe\u8bba\u70b9\u7684\u524d\u63d0\u6761\u4ef6\u6210\u7acb\u3002\u8fd9\u91cc\u6211\u4eec\u5047\u8bbe <code>f</code> \u7684\u589e\u957f\u7387\u662f <code>O(g)</code>\uff0c<code>h</code> \u7684\u589e\u957f\u7387\u4e5f\u662f <code>O(g)</code>\u3002 \uff08\u56fe\u7247\u53f3\u4e0a\u89d2\u63d0\u793a\uff0c<code>f</code> \u662f <code>f(n)</code> \u7684\u7b80\u5199\uff0c\u8fd9\u5728\u6570\u5b66\u8bc1\u660e\u4e2d\u5f88\u5e38\u89c1\u3002\uff09</p> <p>2. \u5c55\u5f00 <code>f = O(g)</code> \u7684\u5b9a\u4e49</p> <p><code>f = O(g) means f \u2264 c*g for n \u2265 n\u2080.</code></p> <p>\u8fd9\u662f\u5927O\u8868\u793a\u6cd5\u7684\u6b63\u5f0f\u5b9a\u4e49\u3002<code>f(n) = O(g(n))</code> \u7684\u610f\u601d\u662f\uff1a \u5b58\u5728\u4e00\u4e2a\u6b63\u5e38\u6570 <code>c</code> \u548c\u4e00\u4e2a\u6574\u6570 <code>n\u2080</code>\uff0c\u4f7f\u5f97\u5f53 <code>n</code> \u5927\u4e8e\u7b49\u4e8e <code>n\u2080</code> \u65f6\uff0c<code>f(n)</code> \u7684\u503c\u603b\u662f\u4e0d\u8d85\u8fc7 <code>c</code> \u4e58\u4ee5 <code>g(n)</code> \u7684\u503c\u3002</p> <ul> <li><code>c</code> \u662f\u4e00\u4e2a\u5e38\u91cf\u7cfb\u6570\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5ffd\u7565\u5e38\u6570\u500d\u7684\u5dee\u5f02\u3002</li> <li><code>n\u2080</code> \u662f\u4e00\u4e2a\u9608\u503c\uff0c\u5b83\u8868\u793a\u6211\u4eec\u53ea\u5173\u5fc3\u5f53\u8f93\u5165\u89c4\u6a21 <code>n</code> \u8db3\u591f\u5927\u65f6\u7684\u60c5\u51b5\u3002</li> </ul> <p>3. \u5c55\u5f00 <code>h = O(g)</code> \u7684\u5b9a\u4e49</p> <p><code>h = O(g) means h \u2264 d*g for n \u2265 n\u2081.</code></p> <p>\u540c\u7406\uff0c<code>h(n) = O(g(n))</code> \u7684\u610f\u601d\u662f\uff1a \u5b58\u5728\u53e6\u4e00\u4e2a\u6b63\u5e38\u6570 <code>d</code> \u548c\u53e6\u4e00\u4e2a\u6574\u6570 <code>n\u2081</code>\uff0c\u4f7f\u5f97\u5f53 <code>n</code> \u5927\u4e8e\u7b49\u4e8e <code>n\u2081</code> \u65f6\uff0c<code>h(n)</code> \u7684\u503c\u603b\u662f\u4e0d\u8d85\u8fc7 <code>d</code> \u4e58\u4ee5 <code>g(n)</code> \u7684\u503c\u3002 \u6ce8\u610f\uff1a \u8fd9\u91cc\u7684\u5e38\u6570 <code>d</code> \u548c\u9608\u503c <code>n\u2081</code> \u53ef\u80fd\u4e0e\u4e0a\u9762 <code>f(n)</code> \u7684 <code>c</code> \u548c <code>n\u2080</code> \u4e0d\u540c\u3002</p> <p>4. \u76f8\u52a0 (Adding gives)</p> <p><code>Adding gives f + h \u2264 (c+d)g for n \u2265 ?</code></p> <p>\u73b0\u5728\uff0c\u4e3a\u4e86\u8bc1\u660e <code>f(n) + h(n)</code> \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u5c06\u4e0a\u9762\u4e24\u4e2a\u4e0d\u7b49\u5f0f\u76f8\u52a0\uff1a <code>f(n) \u2264 c*g(n)</code> <code>h(n) \u2264 d*g(n)</code> \u4e24\u5f0f\u76f8\u52a0\u5f97\u5230\uff1a <code>f(n) + h(n) \u2264 c*g(n) + d*g(n)</code> \u63d0\u53d6\u516c\u56e0\u5f0f <code>g(n)</code>\uff0c\u5f97\u5230\uff1a <code>f(n) + h(n) \u2264 (c+d)g(n)</code></p> <p>5. \u786e\u5b9a\u65b0\u7684\u9608\u503c <code>n</code>\uff08\u56fe\u7247\u4e2d\u672a\u5199\u5b8c\u7684\u90e8\u5206\uff09 \u5173\u952e\u95ee\u9898\u6765\u4e86\uff1a\u8fd9\u4e2a\u65b0\u7684\u4e0d\u7b49\u5f0f <code>f+h \u2264 (c+d)g</code> \u5728\u4ec0\u4e48\u6761\u4ef6\u4e0b\u6210\u7acb\u5462\uff1f</p> <ul> <li>\u7b2c\u4e00\u4e2a\u4e0d\u7b49\u5f0f <code>f \u2264 c*g</code> \u8981\u6c42 <code>n \u2265 n\u2080</code>\u3002</li> <li>\u7b2c\u4e8c\u4e2a\u4e0d\u7b49\u5f0f <code>h \u2264 d*g</code> \u8981\u6c42 <code>n \u2265 n\u2081</code>\u3002   \u4e3a\u4e86\u8ba9\u4e24\u4e2a\u4e0d\u7b49\u5f0f\u540c\u65f6\u6210\u7acb\uff0c<code>n</code> \u5fc5\u987b\u540c\u65f6\u6ee1\u8db3 <code>n \u2265 n\u2080</code> \u548c <code>n \u2265 n\u2081</code>\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53d6\u4e24\u8005\u4e2d\u8f83\u5927\u7684\u90a3\u4e2a\u503c\u4f5c\u4e3a\u65b0\u7684\u9608\u503c\u5373\u53ef\u3002   \u6240\u4ee5\uff0c\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u9608\u503c <code>n\u2082 = max(n\u2080, n\u2081)</code>\u3002\u5f53 <code>n \u2265 n\u2082</code> \u65f6\uff0c\u4e0a\u9762\u4e24\u4e2a\u4e0d\u7b49\u5f0f\u90fd\u6210\u7acb\uff0c\u56e0\u6b64\u5b83\u4eec\u7684\u548c\u4e5f\u6210\u7acb\u3002</li> </ul> <p>\u6240\u4ee5\uff0c\u56fe\u7247\u4e2d\u90a3\u4e2a\u7a7a\u767d\u7684\u5730\u65b9\u5e94\u8be5\u586b <code>max(n\u2080, n\u2081)</code>\u3002</p> <p>\u7ed3\u8bba</p> <p>\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\uff1a \u5b58\u5728\u4e00\u4e2a\u65b0\u7684\u5e38\u6570 <code>C = c+d</code> \u548c\u4e00\u4e2a\u65b0\u7684\u9608\u503c <code>n\u2082 = max(n\u2080, n\u2081)</code>\uff0c\u4f7f\u5f97\u5f53 <code>n \u2265 n\u2082</code> \u65f6\uff0c<code>f(n) + h(n) \u2264 C * g(n)</code>\u3002</p> <p>\u8fd9\u5b8c\u5168\u7b26\u5408\u5927O\u8868\u793a\u6cd5\u7684\u5b9a\u4e49\uff01\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u51fa\u7ed3\u8bba\uff1a<code>f(n) + h(n) = O(g(n))</code>\u3002\u8bc1\u660e\u5b8c\u6bd5\u3002</p> <p>\u7b80\u5355\u4f8b\u5b50</p> <p>\u5047\u8bbe <code>f(n) = 2n + 10</code>\uff0c<code>h(n) = 3n + 5</code>\uff0c\u6211\u4eec\u8981\u8bc1\u660e <code>f(n) + h(n)</code> \u662f <code>O(n)</code>\u3002</p> <ol> <li>\u8bc1\u660e <code>f(n) = O(n)</code> :    \u6211\u4eec\u9700\u8981\u627e\u5230 <code>c</code> \u548c <code>n\u2080</code> \u4f7f\u5f97 <code>2n + 10 \u2264 c*n</code>\u3002    \u5982\u679c\u6211\u4eec\u9009 <code>c = 3</code>\uff0c\u90a3\u4e48 <code>2n + 10 \u2264 3n</code> -&gt; <code>10 \u2264 n</code>\u3002\u6240\u4ee5\uff0c\u5f53 <code>c\u2081=3, n\u2080=10</code> \u65f6\uff0c<code>f(n) = O(n)</code> \u6210\u7acb\u3002</li> <li>\u8bc1\u660e <code>h(n) = O(n)</code> :    \u6211\u4eec\u9700\u8981\u627e\u5230 <code>d</code> \u548c <code>n\u2081</code> \u4f7f\u5f97 <code>3n + 5 \u2264 d*n</code>\u3002    \u5982\u679c\u6211\u4eec\u9009 <code>d = 4</code>\uff0c\u90a3\u4e48 <code>3n + 5 \u2264 4n</code> -&gt; <code>5 \u2264 n</code>\u3002\u6240\u4ee5\uff0c\u5f53 <code>c\u2082=4, n\u2081=5</code> \u65f6\uff0c<code>h(n) = O(n)</code> \u6210\u7acb\u3002</li> <li> <p>\u8bc1\u660e <code>f(n) + h(n) = O(n)</code> :    <code>f(n) + h(n) = (2n+10) + (3n+5) = 5n + 15</code>\u3002    \u6839\u636e\u4e0a\u9762\u7684\u8bc1\u660e\uff0c\u6211\u4eec\u5e94\u8be5\u6709 <code>f(n) + h(n) \u2264 (c\u2081+c\u2082)n</code> \u5bf9\u4e8e <code>n \u2265 max(n\u2080, n\u2081)</code> \u6210\u7acb\u3002</p> </li> <li> <p>\u65b0\u5e38\u6570 <code>C = c\u2081 + c\u2082 = 3 + 4 = 7</code>\u3002</p> </li> <li>\u65b0\u9608\u503c <code>n\u2082 = max(n\u2080, n\u2081) = max(10, 5) = 10</code>\u3002</li> <li>\u6211\u4eec\u6765\u9a8c\u8bc1\u4e00\u4e0b\uff1a<code>5n + 15 \u2264 7n</code> \u662f\u5426\u5728 <code>n \u2265 10</code> \u65f6\u6210\u7acb\uff1f   <code>15 \u2264 2n</code> -&gt; <code>7.5 \u2264 n</code>\u3002   \u56e0\u4e3a <code>n \u2265 10</code> \u5df2\u7ecf\u6ee1\u8db3\u4e86 <code>n \u2265 7.5</code> \u7684\u6761\u4ef6\uff0c\u6240\u4ee5\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u662f\u6210\u7acb\u7684\u3002</li> </ol> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u6210\u529f\u8bc1\u660e\u4e86 <code>f(n) + h(n) = O(n)</code>\u3002</p>"},{"location":"algorithms/1_intro/#big-omega","title":"Big Omega","text":"<ul> <li>Definition: The function \\(f(n)\\) is \\(\\Omega(g(n))\\) if there exist constants \\(c &gt; 0\\) and \\(n_0\\) such that</li> </ul> <p>$$   0 \\leq c \\cdot g(n) \\leq f(n) \\quad \\text{for all } n \\geq n_0.   $$ - Example: \\(2n^2 + 3n + 1\\) is \\(\\Omega(n^2)\\) because for \\(c = 2\\) and \\(n_0 = 1\\), we have</p> <p>$$   0 \\leq 2n^2 \\leq 2n^2 + 3n + 1, \\quad \\text{for all } n \\geq 1   $$</p> <p>\u4e00\u822c\u6765\u8bf4\uff0cBig Omega\u63cf\u8ff0\u4e86\u4e00\u4e2a\u51fd\u6570\u589e\u957f\u901f\u5ea6\u7684\u4e0b\u9650\uff08Lower Bound\uff09\u3002\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1a\u201c\u5f53\u8f93\u5165\u89c4\u6a21 <code>n</code> \u8db3\u591f\u5927\u65f6\uff0c\u51fd\u6570 <code>f(n)</code> \u7684\u589e\u957f\u901f\u5ea6\u81f3\u5c11\u548c\u51fd\u6570 <code>g(n)</code> \u7684 <code>d</code> \u500d\u4e00\u6837\u5feb\u3002\u201d \u4e5f\u5c31\u662f\u8bf4\uff0c<code>g(n)</code> \u662f <code>f(n)</code> \u7684\u4e00\u79cd\u201c\u5730\u677f\u201d\uff0c<code>f(n)</code> \u7684\u589e\u957f\u518d\u6162\u4e5f\u6162\u4e0d\u8fc7 <code>g(n)</code>\u3002\u5728\u7b97\u6cd5\u5206\u6790\u4e2d\uff0c\u5b83\u5e38\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u7b97\u6cd5\u7684 \u6700\u597d\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6 \u3002</p> <p>\u5bf9\u4e8e\u6240\u6709\u589e\u957f\u7684\u51fd\u6570 <code>f(n)</code>\uff08\u6bd4\u5982\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\uff09\uff0c\u6211\u4eec\u51e0\u4e4e\u603b\u53ef\u4ee5\u8bf4 <code>f(n) = \u03a9(1)</code>\uff08\u56e0\u4e3a\u8fd0\u884c\u65f6\u95f4\u81f3\u5c11\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e0d\u4f1a\u662f\u8d1f\u6570\uff09\u3002\u4f46\u662f\uff0c\u8fd9\u540c\u6837\u662f\u4e00\u4e2a\u6ca1\u6709\u4fe1\u606f\u91cf\u7684\u201c\u677e\u201d\u7684\u4e0b\u9650\u3002</p> <p>\u6211\u4eec\u4f7f\u7528 Big Omega \u662f\u60f3\u77e5\u9053\uff1a\u201c\u8fd9\u4e2a\u7b97\u6cd5\u7684\u8fd0\u884c\u65f6\u95f4\u6700\u5c11\u4e5f\u8981\u589e\u957f\u5f97\u591a\u5feb\uff1f\u201d \u8bf4 <code>\u03a9(1)</code> \u7b49\u4e8e\u5728\u8bf4\uff1a\u201c\u8fd9\u4e2a\u7b97\u6cd5\u603b\u5f97\u82b1\u70b9\u65f6\u95f4\u624d\u80fd\u8fd0\u884c\u5b8c\u3002\u201d \u8fd9\u662f\u4e00\u53e5\u5e9f\u8bdd\u3002\u8bf4\u4e00\u4e2a\u6392\u5e8f\u7b97\u6cd5\u662f <code>\u03a9(n)</code> \u610f\u5473\u7740\uff1a\u201c\u4e0d\u7ba1\u8f93\u5165\u7684\u6570\u636e\u6709\u591a\u597d\uff08\u6bd4\u5982\u5df2\u7ecf\u6392\u597d\u5e8f\u4e86\uff09\uff0c\u4f60\u81f3\u5c11\u4e5f\u5f97\u628a\u6bcf\u4e2a\u5143\u7d20\u770b\u4e00\u904d\uff0c\u6240\u4ee5\u65f6\u95f4\u4e0b\u9650\u662f\u7ebf\u6027\u589e\u957f\u7684\u3002\u201d \u8fd9\u4e2a\u4fe1\u606f\u5c31\u975e\u5e38\u6709\u7528\u4e86\u3002</p> <p>\u6240\u4ee5\u5728\u5b9e\u9645\u5206\u6790\u4e2d\uff0c\u548c Big O \u4e00\u6837\uff0c\u6211\u4eec\u4e00\u534a\u5462\u5bfb\u627e\u7684\u662f\u6700\u7d27\u7684\u4e0b\u9650\uff08Tightest Lower Bound\uff09\uff0c\u4e5f\u5c31\u662f\u589e\u957f\u6700\u5feb\u7684\u90a3\u4e2a\u4e0b\u754c\u51fd\u6570\uff0c\u6765\u63d0\u4f9b\u6709\u610f\u4e49\u7684\u5206\u6790\u3002\u5982\u679c\u80fd\u627e\u5230\u4e25\u683c\u4e0b\u754c\uff0c\u8bb0\u5f55\u65f6\u4e5f\u7528\u5c0fomega\uff0c\u4e5f\u5373\\(\\omega\\)\u6765\u8868\u793a\u3002</p>"},{"location":"algorithms/1_intro/#big-theta","title":"Big Theta","text":"<ul> <li>Definition:  The function \\(f(n)\\) is \\(\\Theta(g(n))\\) if it is both \\(O(g(n))\\) and \\(\\Omega(g(n))\\).</li> <li>Example: \\(2n^2 + 3n + 1\\) is \\(\\Theta(n^2)\\) because it is both \\(O(n^2)\\) and \\(\\Omega(n^2)\\).</li> </ul> <p><code>f(n) = \u0398(g(n))</code> \u7684\u610f\u601d\u662f\uff1a\u5b58\u5728\u6b63\u5e38\u6570 <code>c</code>, <code>d</code> \u548c <code>n\u2080</code>\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709 <code>n \u2265 n\u2080</code>\uff0c\u90fd\u6709 <code>d * g(n) \u2264 f(n) \u2264 c * g(n)</code>\u3002Big Theta \u63cf\u8ff0\u4e86\u4e00\u4e2a\u51fd\u6570\u589e\u957f\u901f\u5ea6\u7684 \u7d27\u5bc6\u754c\u9650 (Tight Bound) \u3002\u5b83\u5176\u5b9e\u662f Big O \u548c Big Omega \u7684\u7ed3\u5408\u3002<code>f(n) = \u0398(g(n))</code> \u610f\u5473\u7740 <code>f(n)</code> \u7684\u589e\u957f\u901f\u5ea6\u65e2\u4e0d\u6bd4 <code>g(n)</code> \u5feb\uff0c\u4e5f\u4e0d\u6bd4 <code>g(n)</code> \u6162\uff0c\u5b83\u4eec\u7684\u589e\u957f\u901f\u7387\u662f\u76f8\u540c\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<code>f(n)</code> \u88ab <code>g(n)</code> \u4ece\u4e0a\u4e0b\u4e24\u4e2a\u65b9\u5411\u201c\u5939\u4f4f\u201d\u4e86\u3002\u8fd9\u662f\u5bf9\u4e00\u4e2a\u7b97\u6cd5\u590d\u6742\u5ea6\u6700\u7cbe\u786e\u7684\u63cf\u8ff0\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5982\u679c\u6211\u4eec\u5728\u627eBig O\u548cBig Omega\u7684\u65f6\u5019\uff0c\u627e\u5230\u7684\u5982\u679c\u5df2\u7ecf\u662f\u6700\u7d27\u7684\u4e0a\u9650\u548c\u6700\u7d27\u7684\u4e0b\u9650\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u7528\u8fd9\u4e24\u4e2a\u6700\u7d27\u7684\u4e0a\u4e0b\u9650\u5c31\u80fd\u8f7b\u677e\u627e\u5230\u90a3\u4e2a\u88ab\u5939\u4f4f\u7684\u7d27\u5bc6\u754c\u9650\u3002</p>"},{"location":"algorithms/1_intro/#_6","title":"\u6570\u5b66\u57fa\u7840","text":"<p>\u672c\u8282\u6574\u7406\u4e86\u4e00\u4e9b\u672c\u4e66\u4e2d\u7ecf\u5e38\u6d89\u53ca\u5230\u7684\u4e00\u4e9b\u6570\u5b66\u76f8\u5173\u7684\u77e5\u8bc6\uff0c\u57fa\u672c\u90fd\u662f\u6bd4\u8f83\u57fa\u7840\u7684\u6570\u5b66\u5185\u5bb9\u3002</p>"},{"location":"algorithms/1_intro/#_7","title":"\u6307\u6570\u589e\u957f\u5feb\u4e8e\u591a\u9879\u5f0f\u51fd\u6570","text":"<p>\u5728\u7b97\u6cd5\u5206\u6790\u4e2d\u6709\u4e00\u4e2a\u81f3\u5173\u91cd\u8981\u7684\u89c4\u5f8b\uff1a\u4efb\u4f55\u6307\u6570\u51fd\u6570\u7684\u589e\u957f\u901f\u5ea6\u90fd\u6bd4\u4efb\u4f55\u591a\u9879\u5f0f\u51fd\u6570\u5feb\u3002</p> <ul> <li>\u591a\u9879\u5f0f\u51fd\u6570 (Polynomials) \uff1a\u5f62\u5982\\(n^b\\)\u7684\u51fd\u6570\uff0c\u5176\u4e2d <code>b</code> \u662f\u4e00\u4e2a\u5e38\u6570\u3002\u4f8b\u5982\uff1a\\(n^2\\), \\(n^{100}\\)\u90fd\u662f\u591a\u9879\u5f0f\u3002</li> <li>\u6307\u6570\u51fd\u6570 (Exponentials) \uff1a\u5f62\u5982\\(a^n\\)\u7684\u51fd\u6570\uff0c\u5176\u4e2d <code>a</code> \u662f\u4e00\u4e2a\u5927\u4e8e 1 \u7684\u5e38\u6570\u3002\u4f8b\u5982\uff1a\\(2^n\\), \\(1.1^n\\)\u90fd\u662f\u6307\u6570\u51fd\u6570\u3002</li> </ul> <p>\u5bf9\u4e8e\u591a\u9879\u5f0f\u51fd\u6570\u548c\u6307\u6570\u51fd\u6570\uff0c\u5982\u679ca &gt; 1\uff0c\u90a3\u4e48\u6211\u4eec\u6709\uff1a</p> \\[ \\lim_{n \\to \\infty} \\frac{n^b}{a^n} = 0 \\] <p>\u8fd9\u4e2a\u6781\u9650\u516c\u5f0f\u8868\u660e\u5f53n\u8d8b\u5411\u4e8e\u65e0\u7a77\u5927\u65f6\uff0c\u4e00\u4e2a\u591a\u9879\u5f0f\u51fd\u6570\u548c\u4e00\u4e2a\u6307\u6570\u51fd\u6570\u7684\u6bd4\u503c\u4f1a\u8d8b\u8fd1\u4e8e0\u3002\u8fd9\u610f\u5473\u7740\u5206\u6bcd\u7684\u589e\u957f\u901f\u5ea6\u8fdc\u5feb\u4e8e\u5206\u5b50\u7684\u589e\u957f\u901f\u5ea6\uff0c\u56e0\u6b64\u5728\u6781\u9650\u60c5\u51b5\u4e0b\u4ed6\u4eec\u7684\u6bd4\u503c\u51e0\u4e4e\u4e3a0\u3002</p> <p>\u901a\u8fc7\u8fd9\u4e2a\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u63a8\u8bba\uff1a</p> \\[ n^b = O\\!\\left(a^n\\right) \\] <p>\u5373\u6307\u6570\u51fd\u6570\u4e00\u5b9a\u662f\u591a\u9879\u5f0f\u51fd\u6570\u7684\u4e0a\u9650\u3002\uff08\u5728a&gt;1\u7684\u60c5\u51b5\u4e0b\uff09</p>"},{"location":"algorithms/1_intro/#_8","title":"\u6307\u6570","text":""},{"location":"algorithms/1_intro/#notation","title":"Notation","text":"<ul> <li>\\(\\log_b n = a \\iff b^a = n\\)  (definition of log)</li> <li>\\(\\ln n = \\log_e n\\)  (natural log)</li> <li>\\(\\lg n \\ \\text{or} \\ \\log n = \\log_2 n\\)  (base-2 shorthand)</li> <li>\\(\\lg^2 n = (\\lg n)(\\lg n)\\)  (multiplication)</li> <li>\\(\\lg \\lg n = (\\lg(\\lg n))\\)  (composition)</li> </ul>"},{"location":"algorithms/1_intro/#properties","title":"Properties","text":"<ul> <li>\\((a^m)^n = a^{mn}\\)</li> <li>\\(a^m \\cdot a^n = a^{m+n}\\)</li> <li>\\(a^n = 2^{n \\lg a}\\)</li> <li>\\(a^{\\log_b n} = n^{\\log_b a}\\)</li> <li>\\(\\log_b a = \\dfrac{\\log_c a}{\\log_c b}\\)  (A way to change from base \\(b\\) to base \\(c\\))</li> <li>\\(\\lg ab = \\lg a + \\lg b\\)</li> <li>\\(\\lg(a^x) = x \\lg a\\)</li> <li>\\(\\lg(1/a) = -\\lg a\\)</li> </ul>"},{"location":"algorithms/1_intro/#quantifiers","title":"Quantifiers","text":"<p>Quantifiers\u5c31\u662f\u91cf\u8bcd\uff0c\u7528\u6765\u9650\u5b9a\u4e00\u4e2a\u9648\u8ff0\u5728\u67d0\u4e2a\u96c6\u5408\u4e2d\u662f\u5bf9\u5168\u90e8\u6210\u7acb\uff0c\u6291\u6216\u662f\u5bf9\u81f3\u5c11\u6709\u4e00\u4e2a\u6210\u7acb\u3002</p> <ul> <li>Universal Quantifier (\\(\\forall\\)): The symbol \\(\\forall\\) is used to express that a statement holds for every element in a given set. For example:</li> </ul> <p>$$   \\forall x \\in \\mathbb{R}, \\; x^2 \\geq 0   $$ - Existential Quantifier (\\(\\exists\\)): The symbol \\(\\exists\\) is used to express that there exists at least one element in a given set for which a statement holds. For example:</p> <p>$$   \\exists x \\in \\mathbb{R} \\;\\; \\text{such that} \\;\\; x^2 = 4   $$</p> <p>\u7b80\u5355\u6765\u8bf4\uff1a</p> <ul> <li><code>\u2200</code> (\u4efb\u610f)\uff1a \u8981\u6c42\u5f88\u9ad8\uff0c\u5fc5\u987b\u5bf9\u96c6\u5408\u91cc\u6240\u6709\u6210\u5458\u90fd\u6210\u7acb\u624d\u7b97\u5bf9\u3002<code>\u2200</code> \u7b26\u53f7\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u5012\u8fc7\u6765\u7684\u5b57\u6bcd \"A\"\uff0c\u53ef\u4ee5\u8054\u60f3\u82f1\u6587\u5355\u8bcd \"All\" (\u6240\u6709)\u3002</li> <li><code>\u2203</code> (\u5b58\u5728)\uff1a \u8981\u6c42\u5f88\u4f4e\uff0c\u53ea\u9700\u8981\u5728\u96c6\u5408\u91cc\u627e\u5230\u81f3\u5c11\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u6210\u5458\u5c31\u7b97\u5bf9\u3002<code>\u2203</code> \u7b26\u53f7\u770b\u8d77\u6765\u50cf\u4e00\u4e2a\u53cd\u8fc7\u6765\u7684\u5b57\u6bcd \"E\"\uff0c\u53ef\u4ee5\u8054\u60f3\u82f1\u6587\u5355\u8bcd \"Exists\" (\u5b58\u5728)\u3002</li> </ul> <p>\u8fd9\u4e24\u4e2a\u7b26\u53f7\u5728\u5b9a\u4e49\u6570\u5b66\u6982\u5ff5\uff08\u6bd4\u5982\u6211\u4eec\u4e4b\u524d\u8ba8\u8bba\u7684 Big O \u5b9a\u4e49\uff09\u548c\u8fdb\u884c\u903b\u8f91\u8bc1\u660e\u65f6\u975e\u5e38\u5173\u952e\u3002</p>"},{"location":"algorithms/1_intro/#summation-formulas","title":"Summation Formulas","text":"<p>\u6c42\u548c\u516c\u5f0f</p>"},{"location":"algorithms/1_intro/#arithmetic-series","title":"Arithmetic series","text":"<p>\u7b49\u5dee\u6570\u5217\u6c42\u548c\u516c\u5f0f</p> <p>For integer \\(n \\geq 1\\), we have</p> \\[ 1 + 2 + \\dots + n \\;=\\; \\sum_{k=0}^n k  \\;=\\; \\frac{n(n+1)}{2} \\]"},{"location":"algorithms/1_intro/#geometric-series","title":"Geometric series","text":"<p>\u7b49\u6bd4\u6570\u5217\u6c42\u548c\u516c\u5f0f</p> <p>For real \\(r \\neq 1\\), we have</p> \\[ 1 + r + r^2 + \\dots + r^k \\;=\\; \\sum_{i=0}^k r^i \\;=\\; \\frac{1 - r^{k+1}}{1-r} \\] <p>When the summation is infinite and \\(|r| &lt; 1\\), we have</p> \\[ 1 + r + r^2 + \\dots \\;=\\; \\sum_{i=0}^{\\infty} r^i \\;=\\; \\frac{1}{1-r} \\]"},{"location":"algorithms/1_intro/#_9","title":"\u79bb\u6563\u6570\u5b66\u548c\u96c6\u5408","text":"<p>Let \\(A\\) and \\(B\\) be sets.</p> <p>Union\u5e76\u96c6\uff0cIntersection\u4ea4\u96c6\uff0cDifference\u5dee\u96c6\uff1a</p> <ul> <li>Union: \\(A \\cup B =\\) The set of elements that appear in either \\(A\\) or \\(B\\) or both.</li> <li>Intersection:\\(A \\cap B =\\) The set of elements that appear in both \\(A\\) and \\(B\\).</li> <li>Difference:\\(A \\setminus B\\) or \\(A - B =\\) The set of elements that appear in \\(A\\) and not in \\(B\\).</li> </ul> <p>\u57fa\u6570\uff1a\uff08\u96c6\u5408A\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\uff09</p> <ul> <li>Cardinality:\\(|A| =\\) The number of elements in \\(A\\).</li> </ul> <p>\u9636\u4e58</p> <ul> <li>Factorial: The notation \\(n!\\) is read \u201c\\(n\\) factorial\u201d and is defined for integer \\(n &gt; 0\\) as follows:</li> </ul> <p>$$   n! = 1 \\times 2 \\times \\dots \\times (n-1) \\times n   $$</p> <p>By convention, \\(0! = 1\\).</p> <p>Choose\u9009\u62e9\uff0cPermutations\u6392\u5217\uff0cCombinations\u7ec4\u5408\uff1a</p> <ul> <li>\u201cChoose\u201d: The notation \\(\\binom{n}{k}\\) is read \u201c\\(n\\) choose \\(k\\)\u201d because it represents the number of ways to choose \\(k\\) items from \\(n\\) distinct items.For integers \\(0 \\leq k \\leq n\\), we have:</li> </ul> <p>$$   \\binom{n}{k} = \\frac{n!}{k!(n-k)!}   = \\binom{n}{n-k}   $$ - Permutations and Combinations:   In a set of elements \\(A\\), the number of ordered permutations of all \\(|A|\\) elements is \\(|A|!\\).   The number of combinations of \\(k\\) elements is</p> <p>$$   \\binom{|A|}{k}.   $$</p> <p>\u6392\u5217\u548c\u7ec4\u5408\u7684\u6700\u91cd\u8981\u533a\u522b\u5c31\u662f\uff1a\u6392\u5217\u4e2d\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u800c\u7ec4\u5408\u4e2d\u987a\u5e8f\u4e0d\u91cd\u8981\u3002\u6bd4\u5982ABC\u548cCAB\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u6392\u5217\uff0c\u4f46\u662f\u5374\u662f2\u540c\u4e00\u4e2a\u7ec4\u5408\u3002</p>"},{"location":"algorithms/1_intro/#probability","title":"Probability","text":"<ul> <li>Random Variables:In probability theory, a random variable is a variable whose possible values are outcomes of a random phenomenon.For example, let \\(X\\) represent the outcome of rolling a six-sided die.\\(X\\) can take values \\(\\{1,2,3,4,5,6\\}\\).</li> <li>Notation:\\(P(X = 5) = \\tfrac{1}{6}\\) means \u201cThe probability that \\(X\\) takes the value \\(5\\) is \\(\\tfrac{1}{6}\\).\u201d</li> </ul> <p>Expectation \u671f\u671b</p> <ul> <li>Expectation:   The expectation (or mean) of a random variable \\(X\\) is denoted by \\(E[X]\\) and represents the average value it takes.   For a discrete random variable, it is computed as:</li> </ul> <p>$$   E[X] = \\sum_x x \\cdot P(X = x)   $$</p> <p>where the sum is taken over all possible values of \\(X\\).</p> <p>Example: Consider a fair six-sided die. Let \\(X\\) be the outcome of a single roll. The expectation of \\(X\\) is:</p> \\[ E[X] = \\tfrac{1}{6}(1) + \\tfrac{1}{6}(2) + \\tfrac{1}{6}(3) + \\tfrac{1}{6}(4) + \\tfrac{1}{6}(5) + \\tfrac{1}{6}(6)  = \\tfrac{7}{2} \\] <p>Properties of Expectation:</p> <ul> <li>\\(E[aX + b] = aE[X] + b\\) for constants \\(a\\) and \\(b\\).</li> <li>\\(E[X + Y] = E[X] + E[Y]\\) for independent random variables \\(X\\) and \\(Y\\).</li> </ul>"},{"location":"algorithms/1_intro/#ceilings-and-floors","title":"Ceilings and Floors","text":"<ul> <li>\\(\\lceil x \\rceil = \\text{ceiling}(x) =\\) the least integer greater than or equal to \\(x\\)</li> <li>\\(\\lfloor x \\rfloor = \\text{floor}(x) =\\) the greatest integer less than or equal to \\(x\\)</li> </ul>"},{"location":"algorithms/2_recurrence/","title":"\u7b97\u6cd5\u9012\u5f52\u5f0f","text":""},{"location":"algorithms/2_recurrence/#1","title":"1. \u7b97\u6cd5\u9012\u5f52\u5f0f","text":""},{"location":"algorithms/2_recurrence/#11","title":"1.1 \u5206\u6cbb\u601d\u60f3","text":"<p>\u5206\u6cbb\u6cd5\uff08Divide and Conquer\uff09\u662f\u4e00\u79cd\u9ad8\u6548\u5730\u7b97\u6cd5\u8bbe\u8ba1\u7b56\u7565\uff0c\u80fd\u591f\u5f97\u5230\u6e10\u8fdb\u610f\u4e49\u4e0a\u9ad8\u6548\u7684\u7b97\u6cd5\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u628a\u4e00\u4e2a\u5927\u95ee\u9898\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u5c0f\u95ee\u9898\uff08\u6216\u8005\u8bf4\u5b50\u95ee\u9898\uff09\uff0c\u7136\u540e\u9012\u5f52\u6c42\u89e3\uff0c\u628a\u5b50\u95ee\u9898\u7684\u89e3\u7ec4\u5408\u8d77\u6765\u5f97\u5230\u539f\u95ee\u9898\u7684\u89e3 \u3002</p> <p>\u5206\u6cbb\u901a\u5e38\u5305\u542b\u4e09\u4e2a\u6b65\u9aa4 \uff1a</p> <ol> <li>Divide \u5206\u89e3\uff1a \u5c06\u539f\u95ee\u9898\u62c6\u5206\u6210\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u95ee\u9898</li> <li>Conquer \u89e3\u51b3\uff1a \u9012\u5f52\u5730\u89e3\u51b3\u8fd9\u4e9b\u5b50\u95ee\u9898\u3002\u5982\u679c\u5b50\u95ee\u9898\u8db3\u591f\u5c0f\u5230base case\uff0c\u5219\u76f4\u63a5\u89e3\u51b3\u3002</li> <li>Combine \u5408\u5e76\uff1a \u5c06\u5b50\u95ee\u9898\u7684\u89e3\u7ec4\u5408\u6210\u539f\u95ee\u9898\u7684\u89e3\u3002</li> </ol> <p>\u9012\u5f52\u4f1a\u5728\u9047\u5230base case\u7684\u65f6\u5019\u505c\u4e0b\u6765\uff0c\u4e5f\u5373bottoms out\uff08\u9012\u5f52\u5230\u5934\uff09\u3002</p>"},{"location":"algorithms/2_recurrence/#12","title":"1.2 \u7b97\u6cd5\u9012\u5f52\u5f0f","text":"<p>\u9012\u5f52\u5f0f\u672c\u8eab\u662f\u4e00\u4e2a\u6570\u5b66\u6982\u5ff5\uff0c\u5728\u6570\u5b66\u9886\u57df\uff08\u7279\u522b\u662f\u79bb\u6563\u6570\u5b66\u4e2d\uff09\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217\u3002\u4ed6\u7684\u5178\u578b\u7279\u5f81\u5c31\u662f\uff1a\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u662f\u7531\u5b83\u524d\u9762\u7684\u4e00\u9879\u6216\u51e0\u9879\u6765\u51b3\u5b9a\u7684\u3002\u6700\u7ecf\u5178\u7684\u4f8b\u5b50\u5c31\u662f\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e86\uff1a</p> \\[ F(n) = F(n-1) + F(n-2) \\] \\[ \\text{base case: } F(0) = 0,\\; F(1) = 1 \\] <p>\u5728\u7b97\u6cd5\u9886\u57df\u4e2d\uff0c\u5bf9\u4e8e\u666e\u901a\u7b97\u6cd5\uff0c\u6211\u4eec\u76f4\u63a5\u8003\u8651\u7b97\u6cd5\u672c\u8eab\u7684\u5faa\u73af\u5c31\u80fd\u5f97\u5230\u8fd0\u884c\u6b21\u6570\uff1b\u4f46\u662f\u5bf9\u4e8e\u9012\u5f52\u7b97\u6cd5\uff0c\u6216\u8005\u8bf4\u5206\u6cbb\u3001\u5f52\u5e76\u7b49\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u4ee3\u7801\u4f1a\u8c03\u7528\u81ea\u8eab\uff0c\u4ece\u800c\u8ba9\u5206\u6790\u4ee3\u7801\u8fd0\u884c\u6548\u7387\u53d8\u5f97\u8270\u96be\u3002\u6bd4\u5982\u8bf4\uff0c\u5f52\u5e76\u6392\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u5f0f\u8fd9\u4e48\u5199\u7684\uff1a</p> \\[ T(n) = 2T\\!\\left(\\tfrac{n}{2}\\right) + O(n) \\] <p>\u5c31\u662f\u3002</p> <p>\u8fd9\u5c31\u662f\u9012\u5f52\u5f0f\uff08Recurrence\uff09\u6216\u8005\u8bf4\u7b97\u6cd5\u9012\u5f52\u5f0f\uff08Algorithmic Recurrences\uff09\u3002\u8fd9\u4e2a\u5f0f\u5b50\u7684\u610f\u601d\u662f\uff1a</p> <ul> <li>\u89c4\u6a21\u4e3an\u7684\u95ee\u9898\u7684\u8fd0\u884c\u65f6\u95f4\u662fT(n)</li> <li>\u8be5\u95ee\u9898\u4f1a\u88ab\u5212\u5206\u4e3a2\u4e2a\u89c4\u6a21\u4e3an/2\u7684\u5b50\u95ee\u9898\uff0c\u53732T(n/2)</li> <li>\u6700\u540e\u52a0\u4e0a\u5206\u89e3\u95ee\u9898+\u5408\u5e76\u7ed3\u679c\u7684\u4ee3\u4ef7\uff0c\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u65f6\u95f4O(n)</li> </ul> <p>\u4e00\u4e2a\u6807\u51c6\u7684\u7b97\u6cd5\u9012\u5f52\u5f0f\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a</p> <ul> <li>Base Case \u57fa\u672c\u60c5\u51b5\uff1a \u5bf9\u4e8e\u8db3\u591f\u5c0f\u7684\u95ee\u9898\u89c4\u6a21\\(n\\)\uff08\u4e00\u822c\u6765\u8bf4\uff0c\u5c0f\u4e8e\u67d0\u4e2a\u9608\u503c\\(n_0\\)\uff09\uff0c\u5176\u89e3\u51b3\u95ee\u9898\u7684\u65f6\u95f4\u662f\u4e00\u4e2a\u5e38\u6570\uff0c\u4e5f\u5373\uff1a</li> </ul> \\[ T(n) = \\Theta(1) \\quad \\text{for } n &lt; n_{0} \\] <ul> <li>Recursive Step \u9012\u5f52\u6b65\u9aa4\uff1a \u5bf9\u4e8e\u8f83\u5927\u7684\u95ee\u9898\u89c4\u6a21\\(n\\)\uff0c\u5176\u8fd0\u884c\u65f6\u95f4\u7531\u5206\u89e3\u51fa\u7684\u5b50\u95ee\u9898\u7684\u8fd0\u884c\u65f6\u95f4\u548c\u5206\u89e3/\u5408\u5e76\u6b65\u9aa4\u81ea\u8eab\u7684\u65f6\u95f4\u5171\u540c\u5b9a\u4e49\uff1a</li> </ul> \\[ T(n) = (\\text{\u5b50\u95ee\u9898\u7684\u6210\u672c}) + (\\text{\u5206\u89e3\u4e0e\u5408\u5e76\u7684\u6210\u672c}) \\] <p>\u4e00\u4e2a\u7b97\u6cd5\u9012\u5f52\u5f0f\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u57fa\u672c\u5c5e\u6027\uff1a</p> <ul> <li>\u5fc5\u987b\u6709\u57fa\u672c\u60c5\u51b5\uff0c\u4e14\u8fd9\u4e2a\u57fa\u672c\u60c5\u51b5\u5728\u5e38\u6570\u8303\u56f4\u5185\u3002</li> <li>\u9012\u5f52\u5fc5\u987b\u5728\u6709\u9650\u6b65\u5185\u7ec8\u6b62\uff0c\u8fd9\u662f\u7b97\u6cd5\u6b63\u786e\u6027\uff08Correctnness\uff09\u7684\u57fa\u672c\u8981\u6c42\u3002</li> </ul> <p>\u4e00\u4e2a\u9012\u5f52\u5f0f\u53ef\u80fd\u6709\u96f6\u4e2a\u3001\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u89e3\u3002\u5982\u679c\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u89e3\uff0c\u5b83\u662fwell defined\uff08\u826f\u5b9a\u4e49\uff09\u7684\uff1b\u5426\u5219\u662fill defined\uff08\u4e0d\u826f\u5b9a\u4e49\uff09\u7684\u3002</p> <p>\u5f88\u663e\u7136\uff0c\u5982\u679c\u6211\u4eec\u60f3\u4e86\u89e3\u8fd9\u4e2a\u9012\u5f52\u5f0f\u7684\u5177\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6211\u4eec\u5c31\u5fc5\u987b\u501f\u52a9\u4e00\u4e9b\u989d\u5916\u7684\u5de5\u5177\u6765\u5b8c\u6210\u3002\u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528\u5f52\u7eb3\u6cd5\uff08Induction\uff09\u6216\u8005\u4e3b\u65b9\u6cd5\uff08Master Method\uff09\u7b49\uff0c\u5728\u540e\u9762\u7684\u90e8\u5206\u4e2d\u6211\u4eec\u4f1a\u8be6\u7ec6\u8bb2\u89e3\u5404\u4e2a\u65b9\u6cd5\u7684\u9002\u7528\u60c5\u51b5\u548c\u4f7f\u7528\u65b9\u5f0f\u3002</p>"},{"location":"algorithms/2_recurrence/#13","title":"1.3 \u4f8b\uff1a\u77e9\u9635\u4e58\u6cd5","text":"<p>\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff0c\u6765\u4e86\u89e3\u7b97\u6cd5\u9012\u5f52\u5f0f\u662f\u5982\u4f55\u6e05\u6670\u5730\u8bb0\u5f55\u7b97\u6cd5\u5728\u89e3\u51b3\u95ee\u9898\u4e0a\u7684\u7b56\u7565\u548c\u5176\u6548\u7387\u7684\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u77e9\u9635A\u548c\u77e9\u9635B\u7684\u4e58\u6cd5\uff0c\u6765\u5f97\u5230C\uff1a</p> <p>\u77e9\u9635 A\uff1a</p> \\[ A = \\begin{pmatrix} 1 &amp; 2 &amp; 3 &amp; 4 \\\\ 5 &amp; 6 &amp; 7 &amp; 8 \\\\ 9 &amp; 1 &amp; 2 &amp; 3 \\\\ 4 &amp; 5 &amp; 6 &amp; 7 \\end{pmatrix} \\] <p>\u77e9\u9635 B\uff1a</p> \\[ B = \\begin{pmatrix} 8 &amp; 7 &amp; 6 &amp; 5 \\\\ 4 &amp; 3 &amp; 2 &amp; 1 \\\\ 1 &amp; 2 &amp; 3 &amp; 4 \\\\ 5 &amp; 6 &amp; 7 &amp; 8 \\end{pmatrix} \\] <p>\u8ba1\u7b97\u4e24\u4e2a <code>n x n</code> \u65b9\u9635\u7684\u4e58\u79ef <code>C = A \u00b7 B</code>\u3002\u77e9\u9635 C \u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20 <code>c_ij</code> \u901a\u8fc7\u4ee5\u4e0b\u516c\u5f0f\u8ba1\u7b97\uff1a</p> \\[ c_{ij} = \\sum_{k=1}^{n} a_{ik} \\cdot b_{kj} \\] <p>\u5047\u8bbe: \u8fd9\u91cc\u7684\u7b97\u6cd5\u5904\u7406\u7684\u90fd\u662f\u7a20\u5bc6\u77e9\u9635 (dense matrices)\uff0c\u5373\u5927\u90e8\u5206\u5143\u7d20\u90fd\u4e0d\u662f 0\u3002</p> <p>\u5982\u679c\u6211\u4eec\u7528\u6700\u76f4\u89c2\u7684\u76f4\u63a5\u4e58\u6cd5\uff0c\u5373\u7528\u4e09\u5c42for\u5faa\u73af\u6765\u5b9e\u73b0\u7684\u8bdd\uff0c\u6211\u4eec\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(\\Theta(n^3\\))\u3002</p> <pre><code>MATRIX-MULTIPLY(A, B, C, n)\n1  for i = 1 to n\n2      for j = 1 to n\n3          for k = 1 to n\n4              c_ij = c_ij + a_ik \u00b7 b_kj\n</code></pre> <p>\u4f46\u662f\u5982\u679c\u6211\u4eec\u7528\u5206\u6cbb\u7684\u601d\u8def\uff0c\u628a\u5927\u77e9\u9635\u5206\u89e3\u4e3a\u5c0f\u77e9\u9635\uff0c\u5219\u53ef\u4ee5\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u6c42\u89e3\uff1a</p> <ol> <li>\u5206\u89e3\uff08Divide\uff09\uff1a\u5c06 4x4 \u7684 A \u548c B \u77e9\u9635\uff0c\u90fd\u5206\u89e3\u6210 4 \u4e2a 2x2 \u7684\u5b50\u77e9\u9635\u3002</li> <li>\u89e3\u51b3\uff08Conquer\uff09\uff1a\u5bf9\u8fd9\u4e9b 2x2 \u7684\u5b50\u77e9\u9635\u8fdb\u884c\u4e58\u6cd5\u548c\u52a0\u6cd5\u8fd0\u7b97\uff0c\u4ee5\u8ba1\u7b97\u51fa\u7ed3\u679c C \u7684 4 \u4e2a 2x2 \u5b50\u77e9\u9635\u3002</li> <li>\u5408\u5e76\uff08Combine\uff09\uff1a\u5c06\u8ba1\u7b97\u51fa\u7684 4 \u4e2a 2x2 \u5b50\u77e9\u9635\u62fc\u63a5\u6210\u6700\u7ec8\u7684 4x4 \u7ed3\u679c\u77e9\u9635 C\u3002</li> </ol> <p>\u5206\u89e3\u5982\u4e0b\uff1a</p> \\[ A = \\begin{pmatrix} A_{11} &amp; A_{12} \\\\ A_{21} &amp; A_{22} \\end{pmatrix}, \\quad B = \\begin{pmatrix} B_{11} &amp; B_{12} \\\\ B_{21} &amp; B_{22} \\end{pmatrix} \\] \\[ \u5176\u4e2d\uff0c\\; A_{11} = \\begin{pmatrix} 1 &amp; 2 \\\\ 5 &amp; 6 \\end{pmatrix}, \\quad B_{11} = \\begin{pmatrix} 8 &amp; 7 \\\\ 4 &amp; 3 \\end{pmatrix}\uff0c\\;\\text{\u4ee5\u6b64\u7c7b\u63a8\u3002} \\] <p>\u7136\u540e\u89e3\u51b3\uff1a</p> \\[ \\begin{aligned} C_{11} &amp;= A_{11}B_{11} + A_{12}B_{21} \\\\ C_{12} &amp;= A_{11}B_{12} + A_{12}B_{22} \\\\ C_{21} &amp;= A_{21}B_{11} + A_{22}B_{21} \\\\ C_{22} &amp;= A_{21}B_{12} + A_{22}B_{22} \\end{aligned} \\] <p>\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u9700\u8981\u8fdb\u884c 8 \u6b21 2x2 \u77e9\u9635\u7684\u4e58\u6cd5\uff08\u9012\u5f52\u8c03\u7528\uff09\u548c 4 \u6b21 2x2 \u77e9\u9635\u7684\u52a0\u6cd5\u3002</p> <p>\u7efc\u4e0a\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b97\u6cd5\u9012\u5f52\u5f0f\uff1a</p> \\[ T(n) = 8T\\!\\left(\\tfrac{n}{2}\\right) + \\Theta(n^2) \\] <ul> <li><code>8T(n/2)</code>: \u4ee3\u8868 8 \u6b21\u89c4\u6a21\u4e3a\u4e00\u534a\u7684\u5b50\u95ee\u9898\uff08\u77e9\u9635\u4e58\u6cd5\uff09\u7684\u6210\u672c\u3002</li> <li><code>\u0398(n\u00b2)</code>: \u4ee3\u8868 4 \u6b21\u5b50\u77e9\u9635\u52a0\u6cd5\u7684\u6210\u672c\uff08\u4e24\u4e2a n/2 x n/2 \u77e9\u9635\u76f8\u52a0\u9700\u8981 n\u00b2/4 \u6b21\u6807\u91cf\u52a0\u6cd5\uff09\u3002</li> </ul> <p>\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u4e3b\u65b9\u6cd5\u5206\u6790\uff08\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u5f97\u5230\u5176\u7b97\u6cd5\u7684\u6548\u7387\u4e3a\\(\\Theta(n^3)\\)\uff0c\u5373\u6ca1\u6709\u5e26\u6765\u6e10\u8fdb\u610f\u4e49\u4e0a\u7684\u6548\u7387\u63d0\u5347\u3002\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u5206\u6cbb\u6cd5\u7684\u74f6\u9888\u5728\u4e8e8\u6b21\u9012\u5f52\u8c03\u7528\u3002</p> <p>\u5982\u679c\u6211\u4eec\u7528\u66f4\u5c11\u7684\u9012\u5f52\u8c03\u7528\u6b21\u6570\u6765\u5b8c\u6210\u4efb\u52a1\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u6e10\u8fdb\u610f\u4e49\u4e0a\u83b7\u5f97\u6548\u7387\u63d0\u5347\u3002Strassen\u7b97\u6cd5\u5c31\u662f\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\uff0c\u5b83\u901a\u8fc7\u5de7\u5999\u7684\u4ee3\u6570\u8fd0\u7b97\uff0c\u5c06\u9012\u5f52\u6b21\u6570\u4ece8\u6b21\u51cf\u5c11\u5230\u4e867\u6b21\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u66f4\u9ad8\u7684\u6548\u7387\u3002</p> <p>\u7531\u4e8eStrassen\u7b97\u6cd5\u5b9e\u73b0\u4e0d\u662f\u8fd9\u91cc\u7684\u91cd\u70b9\uff0c\u56e0\u6b64\u5177\u4f53\u7684\u65b9\u6cd5\u5c31\u4e0d\u5c55\u5f00\u63cf\u8ff0\u4e86\u3002\u672c\u90e8\u5206\u7684\u6838\u5fc3\u4e0e\u91cd\u70b9\u5728\u4e8e\u4e86\u89e3\u9012\u5f52\u5f0f\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u770b\u4e00\u4e0b\uff0c\u5982\u4f55\u7528\u4e00\u4e9b\u5de5\u5177\u548c\u6280\u5de7\uff0c\u7531\u9012\u5f52\u5f0f\u51fa\u53d1\uff0c\u5feb\u901f\u4e86\u89e3\u4e00\u4e2a\u7b97\u6cd5\u9012\u5f52\u5f0f\u7684\u5b9e\u9645\u6548\u7387\u3002</p>"},{"location":"algorithms/2_recurrence/#2-substitution-method","title":"2. Substitution Method","text":""},{"location":"algorithms/2_recurrence/#21","title":"2.1 \u4ee3\u5165\u6cd5","text":"<p>\u4ee3\u5165\u6cd5\uff08Substitution Method\uff09\u662f\u4e00\u4e2a\u7528\u6765\u4e25\u683c\u8bc1\u660e\u9012\u5f52\u5f0f\u89e3\u7684\u6570\u5b66\u5de5\u5177\u3002\u5b83\u5305\u542b\u4e24\u4e2a\u6838\u5fc3\u6b65\u9aa4\uff1a</p> <ol> <li>Guess\uff0c\u5373\u63d0\u51fa\u5047\u8bf4\uff1a\u89c2\u5bdf\u4e00\u4e2a\u9012\u5f52\u5f0f\uff0c\u6839\u636e\u7ecf\u9a8c\u6216\u8005\u522b\u7684\u5de5\u5177\uff0c\u731c\u6d4b\u4e00\u4e2a\u5b83\u53ef\u80fd\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6bd4\u5982\\(O(nlogn)\\)\u3002</li> <li>Prove, \u5373\u8fdb\u884c\u9a8c\u8bc1\uff1a\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\uff08\u6700\u4e25\u8c28\u7684\u6570\u5b66\u5de5\u5177\uff09\u6765\u8bc1\u660e\u8fd9\u4e2a\u5047\u8bf4\u5728\u6570\u5b66\u4e0a\u662f\u7ad9\u5f97\u4f4f\u811a\u7684\u3002</li> </ol> <p>\u4ee3\u5165\u6cd5\u7684\u597d\u5904\u5728\u4e8e\uff0c\u65e0\u8bba\u9012\u5f52\u5f0f\u957f\u4ec0\u4e48\u6837\u5b50\uff0c\u53ea\u8981\u4f60\u80fd\u731c\u5bf9\uff0c\u90a3\u4e48\u539f\u5219\u4e0a\u90fd\u53ef\u4ee5\u7528\u5b83\u6765\u8bc1\u660e\u3002</p> <p>\u4ee3\u5165\u6cd5\u7684\u96be\u70b9\u5728\u4e8e\u731c\u6d4b\uff0c\u4e00\u4e2a\u597d\u7684\u731c\u6d4b\u53ef\u4ee5\u8ba9\u6211\u4eec\u4e8b\u534a\u529f\u500d\u3002\u4e00\u822c\u731c\u6d4b\u7b56\u7565\u4e3b\u8981\u6709\u4e09\u79cd\uff1a</p> <ul> <li>\u7c7b\u6bd4\u6cd5 \uff1a\u770b\u770b\u8fd9\u4e2a\u9012\u5f52\u5f0f\u548c\u4f60\u5df2\u7ecf\u77e5\u9053\u89e3\u7684\u67d0\u4e2a\u7ecf\u5178\u9012\u5f52\u5f0f\uff08\u6bd4\u5982\u5f52\u5e76\u6392\u5e8f\uff09\u50cf\u4e0d\u50cf\u3002\u5982\u679c\u5f88\u50cf\uff0c\u5b83\u4eec\u7684\u89e3\u4e5f\u5f88\u53ef\u80fd\u662f\u4e00\u6837\u7684\u3002</li> <li>\u9012\u5f52\u6811\u6cd5 (\u6700\u5e38\u7528) \uff1a\u753b\u51fa\u9012\u5f52\u6811\uff0c\u89c2\u5bdf\u6bcf\u4e00\u5c42\u6210\u672c\u7684\u5206\u5e03\u548c\u6811\u7684\u603b\u5c42\u6570\uff0c\u901a\u5e38\u80fd\u5f97\u51fa\u4e00\u4e2a\u975e\u5e38\u7cbe\u51c6\u7684\u731c\u6d4b\u3002</li> <li>\u4e0a\u4e0b\u754c\u6cd5 \uff1a\u5148\u786e\u5b9a\u4e00\u4e2a\u5bbd\u677e\u7684\u4e0b\u754c\uff08\u6bd4\u5982 <code>\u03a9(n)</code>\uff09\u548c\u4e00\u4e2a\u5bbd\u677e\u7684\u4e0a\u754c\uff08\u6bd4\u5982 <code>O(n\u00b2)</code>\uff09\uff0c\u7136\u540e\u9010\u6b65\u5411\u4e2d\u95f4\u201c\u6324\u538b\u201d\uff0c\u7f29\u5c0f\u8303\u56f4\u3002</li> </ul> <p>\u731c\u6d4b\u540e\uff0c\u6211\u4eec\u5c31\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u8fdb\u884c\u8bc1\u660e\uff08\u8fd9\u662f\u4ee3\u5165\u6cd5\u64cd\u4f5c\u7684\u6838\u5fc3\uff09\u3002\u5047\u8bbe\u4f60\u5df2\u7ecf\u731c\u51fa\u89e3\u662f \\(O(n \\log n)\\)\uff1a</p> <p>1. \u660e\u786e\u8bc1\u660e\u76ee\u6807\uff1a</p> <ul> <li>\u5c06\u4f60\u7684\u731c\u6d4b \\(O(n \\log n)\\) \u7ffb\u8bd1\u6210\u4e00\u4e2a\u5305\u542b\u5177\u4f53\u5e38\u6570 \\(c\\) \u7684\u4e0d\u7b49\u5f0f\u3002</li> <li>\u76ee\u6807\uff1a\u8bc1\u660e\u5b58\u5728\u5e38\u6570 \\(c &gt; 0\\) \u548c \\(n_0\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709 \\(n \\geq n_0\\)\uff0c\u90fd\u6709 \\(T(n) \\leq c n \\log n\\) \u6210\u7acb\u3002</li> <li>\u5173\u952e\uff01 \u7edd\u4e0d\u80fd\u5728\u5047\u8bbe\u91cc\u4f7f\u7528 \\(O\\) \u7b26\u53f7\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u8bc1\u660e\u3002</li> </ul> <p>2. \u5199\u51fa\u5f52\u7eb3\u5047\u8bbe\uff1a</p> <ul> <li>\u5047\u8bbe\u5bf9\u4e8e\u6240\u6709\u5c0f\u4e8e \\(n\\) \u7684\u503c \\(k\\)\uff0c\u76ee\u6807\u4e0d\u7b49\u5f0f\u90fd\u6210\u7acb\u3002   \u5373\uff1a   $$   T(k) \\leq c k \\log k   $$</li> </ul> <p>3. \u4ee3\u5165\u5e76\u63a8\u5bfc\uff1a</p> <ul> <li>\u5c06\u9012\u5f52\u5f0f\u4e2d\u7684 \\(T(\\dots)\\) \u9879\u7528\u4f60\u7684\u5f52\u7eb3\u5047\u8bbe\u66ff\u6362\u6389\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u5bf9\u4e8e \\(T(n) = 2T(n/2) + n\\)\uff1a</p> \\[ \\begin{aligned} T(n) &amp;= 2T(n/2) + n \\\\[6pt]      &amp;\\leq 2\\bigl(c(n/2)\\log(n/2)\\bigr) + n \\quad (\\text{\u8fdb\u884c\u4ee3\u5165}) \\\\[6pt]      &amp;= cn(\\log n - \\log 2) + n \\\\[6pt]      &amp;= cn \\log n - cn + n \\end{aligned} \\] <p>4. \u9a8c\u8bc1\u7ed3\u8bba\uff1a</p> <ul> <li>\u68c0\u67e5\u63a8\u5bfc\u7ed3\u679c\u662f\u5426 \u5c0f\u4e8e\u7b49\u4e8e \u4f60\u7684\u76ee\u6807 \\(c n \\log n\\)\u3002</li> </ul> <p>\u5373\uff1a</p> \\[ cn \\log n - cn + n \\;\\leq\\; cn \\log n \\] <p>\u5316\u7b80\u5f97\uff1a</p> \\[ -cn + n \\leq 0 \\quad \\Leftrightarrow \\quad n \\leq c n \\quad \\Rightarrow \\quad c \\geq 1 \\] <p>\u8fd9\u544a\u8bc9\u6211\u4eec\uff1a\u53ea\u8981\u5e38\u6570 \\(c \\geq 1\\)\uff0c\u5f52\u7eb3\u8bc1\u660e\u5c31\u80fd\u6210\u529f\u3002</p> <p>5. \u5904\u7406\u57fa\u672c\u60c5\u51b5 (Base Case)\uff1a</p> <ul> <li>\u6700\u540e\uff0c\u786e\u4fdd\u4f60\u7684\u4e0d\u7b49\u5f0f\u5728\u4e00\u4e9b\u5c0f\u7684\u521d\u59cb\u503c (\u6bd4\u5982 \\(n=2,3\\)) \u4e0a\u4e5f\u6210\u7acb\u3002</li> <li>\u901a\u5e38\uff0c\u53ea\u8981\u628a\u5e38\u6570 \\(c\\) \u9009\u5f97\u8db3\u591f\u5927\uff0c\u603b\u80fd\u6ee1\u8db3\u57fa\u672c\u60c5\u51b5\u3002</li> </ul> <p>\u65e2\u7136\u8be5\u65b9\u6cd5\u8d77\u59cb\u4e8e\u731c\u6d4b\uff0c\u90a3\u4e48\u81ea\u7136\u5c31\u6709\u731c\u9519\u7684\u65f6\u5019\uff0c\u4e5f\u5373\u8bc1\u660e\u5931\u8d25\u7684\u65f6\u5019\u3002\u6bd4\u5982\u8bf4\uff0c\u5bf9\u4e8e <code>T(n) = 2T(n/2) + 1</code>\uff0c\u731c\u6d4b <code>T(n) = O(n)</code>\uff1a</p> <ul> <li>\u8bbe\u7f6e\u76ee\u6807 <code>T(n) \u2264 cn</code>\u3002</li> <li>\u4ee3\u5165\u540e\u5f97\u5230 <code>T(n) \u2264 cn + 1</code>\u3002</li> <li>\u4f60\u6c38\u8fdc\u65e0\u6cd5\u8bc1\u660e <code>cn + 1 \u2264 cn</code>\u3002\u8bc1\u660e\u5931\u8d25\u3002</li> </ul> <p>\u8fd9\u4e2a\u5931\u8d25\u901a\u5e38\u610f\u5473\u7740\u4f60\u7684\u5047\u8bbe\u201c\u4e0d\u591f\u5f3a\u201d\uff0c\u65e0\u6cd5\u5728\u9012\u5f52\u4e2d\u4f20\u9012\u4e0b\u53bb\u3002\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u4ece\u731c\u6d4b\u4e2d \u51cf\u53bb\u4e00\u4e2a\u4f4e\u9636\u9879\uff0c\u7136\u540e\u6211\u4eec\u7684\u76ee\u6807\u5c31\u53d8\u6210\u4e86\u8bc1\u660e <code>T(n) \u2264 cn - d</code>\uff0c\u5176\u4e2d <code>d</code> \u662f\u4e00\u4e2a\u5f85\u5b9a\u7684\u6b63\u5e38\u6570\u3002\u90a3\u4e48\u8fd9\u4e2a\u4e3a\u4ec0\u4e48\u6709\u6548\u5462\uff1f</p> \\[ \\begin{aligned} T(n) &amp;= 2T(n/2) + 1 \\\\[6pt]      &amp;\\leq 2\\bigl(c(n/2) - d\\bigr) + 1 \\quad \\text{\uff08\u4ee3\u5165\u65b0\u5047\u8bbe\uff09} \\\\[6pt]      &amp;= cn - 2d + 1 \\end{aligned} \\] <p>\u5373\uff0c\u65b0\u9a8c\u8bc1\u8981\u6c42\u6211\u4eec\u8bc1\u660e <code>cn - 2d + 1 \u2264 cn - d</code>\uff0c\u8fd9\u7b49\u4ef7\u4e8e <code>-2d + 1 \u2264 -d</code>\uff0c\u5373 <code>1 \u2264 d</code>\u3002\u53ea\u8981\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u5e38\u6570 <code>d \u2265 1</code>\uff08\u6bd4\u5982 <code>d=1</code>\uff09\uff0c\u8bc1\u660e\u5c31\u6210\u529f\u4e86\uff01\u5176\u539f\u7406\u5728\u4e8e \uff1a\u6211\u4eec\u51cf\u53bb\u7684 <code>-d</code> \u5728\u9012\u5f52\u4ee3\u5165\u65f6\uff0c\u88ab\u9012\u5f52\u7cfb\u6570 <code>a=2</code> \u653e\u5927\u6210\u4e86 <code>-2d</code>\u3002\u8fd9\u4e2a\u88ab\u653e\u5927\u7684\u201c\u8d1f\u80fd\u91cf\u201d\u8db3\u4ee5\u62b5\u6d88\u6389\u90a3\u4e2a\u5bfc\u81f4\u6211\u4eec\u8bc1\u660e\u5931\u8d25\u7684 <code>+1</code>\u3002</p>"},{"location":"algorithms/2_recurrence/#22","title":"2.2 \u4f8b\u9898","text":"<p>a.</p> \\[ T(n) = T(n-1) + n \\quad \\Rightarrow \\quad T(n) = O(n^2) \\] <p>1. \u660e\u786e\u76ee\u6807\uff1a \u6211\u4eec\u8981\u8bc1\u660e \\(T(n) = O(n^2)\\)\u3002 \u6839\u636e\u5b9a\u4e49\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u5e38\u6570 \\(c &gt; 0\\) \u548c \\(n_0\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e\u6240\u6709 \\(n \\geq n_0\\)\uff0c\u90fd\u6709</p> \\[ T(n) \\leq c n^2 \\] <p>\u6210\u7acb\u3002</p> <p>2. \u5f52\u7eb3\u5047\u8bbe\uff1a \u5047\u8bbe\u5bf9\u4e8e\u6240\u6709\u5c0f\u4e8e \\(n\\) \u7684\u503c \\(k\\)\uff0c\u7ed3\u8bba\u90fd\u6210\u7acb\u3002\u5373\uff1a</p> \\[ T(k) \\leq c k^2 \\] <p>\u7279\u522b\u5730\uff0c\u5bf9\u4e8e \\(k = n-1\\)\uff1a</p> \\[ T(n-1) \\leq c(n-1)^2 \\] <p>3. \u4ee3\u5165\u5e76\u63a8\u5bfc\uff1a \u5c06\u5f52\u7eb3\u5047\u8bbe\u4ee3\u5165\u539f\u9012\u5f52\u5f0f\uff1a</p> \\[ \\begin{aligned} T(n) &amp;= T(n-1) + n \\\\[6pt]      &amp;\\leq c(n-1)^2 + n \\\\[6pt]      &amp;= c(n^2 - 2n + 1) + n \\\\[6pt]      &amp;= c n^2 - 2cn + c + n \\end{aligned} \\] <p>4. \u9a8c\u8bc1\u7ed3\u8bba\uff1a \u6211\u4eec\u7684\u76ee\u6807\u662f\u8bc1\u660e\u4e0a\u5f0f \\(\\leq c n^2\\)\uff1a</p> \\[ c n^2 - 2cn + c + n \\;\\leq\\; c n^2 \\] <p>\u5316\u7b80\u5f97\uff1a</p> \\[ -2cn + c + n \\leq 0 \\quad \\Longleftrightarrow \\quad n(1 - 2c) + c \\leq 0 \\] <p>\u4e3a\u4e86\u8ba9\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u5bf9\u8db3\u591f\u5927\u7684 \\(n\\) \u6052\u6210\u7acb\uff0c\\(n\\) \u7684\u7cfb\u6570 \\((1-2c)\\) \u5fc5\u987b\u4e3a\u8d1f\u3002</p> <ul> <li>\\(1 - 2c &lt; 0 \\;\\;\\Longleftrightarrow\\;\\; c &gt; 1/2\\)</li> </ul> <p>\u56e0\u6b64\uff0c\u53ea\u8981\u6211\u4eec\u9009\u62e9 \\(c &gt; 1/2\\)\uff08\u4f8b\u5982 \\(c=1\\)\uff09\uff0c\u5f53 \\(n\\) \u8db3\u591f\u5927\u65f6\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u6052\u6210\u7acb\u3002</p> <p>5. \u7ed3\u8bba\uff1a \u6211\u4eec\u6210\u529f\u627e\u5230\u4e86\u6ee1\u8db3\u6761\u4ef6\u7684\u5e38\u6570\uff08\u4f8b\u5982 \\(c=1\\)\uff09\uff0c\u56e0\u6b64\u8bc1\u660e\u4e86\uff1a</p> \\[ T(n) = O(n^2) \\] <p>b.</p> \\[ T(n) = T(n/2) + \\Theta(1) \\quad \\Rightarrow \\quad T(n) = O(\\lg n) \\] <p>1. \u660e\u786e\u76ee\u6807\uff1a \u6211\u4eec\u5c06 \\(\\Theta(1)\\) \u5199\u4e3a\u5e38\u6570 \\(d\\)\u3002\u76ee\u6807\u662f\u8bc1\u660e\u5b58\u5728\u5e38\u6570 \\(c &gt; 0\\) \u548c \\(n_0\\)\uff0c\u4f7f\u5f97\u5bf9\u4e8e \\(n \\geq n_0\\)\uff0c\u90fd\u6709</p> \\[ T(n) \\leq c \\lg n. \\] <p>2. \u5f52\u7eb3\u5047\u8bbe\uff1a \u5047\u8bbe\u5bf9\u4e8e\u6240\u6709 \\(k &lt; n\\)\uff0c\u90fd\u6709</p> \\[ T(k) \\leq c \\lg k. \\] <p>3. \u4ee3\u5165\u63a8\u5bfc\uff1a</p> \\[ \\begin{aligned} T(n) &amp;= T(n/2) + d \\\\[6pt]      &amp;\\leq c \\lg (n/2) + d \\\\[6pt]      &amp;= c(\\lg n - 1) + d \\\\[6pt]      &amp;= c \\lg n - c + d \\end{aligned} \\] <p>4. \u9a8c\u8bc1\u7ed3\u8bba\uff1a \u6211\u4eec\u9700\u8981\u8bc1\u660e</p> \\[ c \\lg n - c + d \\leq c \\lg n, \\] <p>\u8fd9\u9700\u8981 \\(-c + d \\leq 0\\)\uff0c\u5373</p> \\[ c \\geq d. \\] <p>\u53ea\u8981\u6211\u4eec\u9009\u62e9\u7684\u8bc1\u660e\u5e38\u6570 \\(c\\) \u5927\u4e8e\u7b49\u4e8e \\(o(1)\\) \u4e2d\u7684\u5e38\u6570 \\(d\\)\uff0c\u5f52\u7eb3\u5c31\u6210\u7acb\u3002</p> <p>c.</p> \\[ T(n) = 2T(n/2) + n \\quad \\Rightarrow \\quad T(n) = \\Theta(n \\lg n) \\] <p>\u6211\u4eec\u9700\u8981\u5206\u522b\u8bc1\u660e \\(O(n \\lg n)\\) \u548c \\(\\Omega(n \\lg n)\\)\u3002</p> <p>\u8bc1\u660e\u4e0a\u754c \\(O(n \\lg n)\\)\uff1a</p> <ol> <li>\u76ee\u6807\uff1a \u8bc1\u660e \\(T(n) \\leq c_2 n \\lg n\\)\u3002</li> <li>\u5047\u8bbe\uff1a \u5bf9 \\(k &lt; n\\)\uff0c\u6709 \\(T(k) \\leq c_2 k \\lg k\\)\u3002</li> <li>\u4ee3\u5165\uff1a    $$    T(n) \\leq 2\\bigl(c_2 (n/2) \\lg (n/2)\\bigr) + n          = c_2 n \\lg n - c_2 n + n    $$</li> <li>\u9a8c\u8bc1\uff1a \u6211\u4eec\u9700\u8981    $$    c_2 n \\lg n - c_2 n + n \\leq c_2 n \\lg n,    $$</li> </ol> <p>\u5373 \\(-c_2 n + n \\leq 0\\)\uff0c\u8fd9\u8981\u6c42 \\(c_2 \\geq 1\\)\u3002</p> <p>\u8bc1\u660e\u4e0b\u754c \\(\\Omega(n \\lg n)\\)\uff1a</p> <ol> <li>\u76ee\u6807\uff1a \u8bc1\u660e \\(T(n) \\geq c_1 n \\lg n\\)\u3002</li> <li>\u5047\u8bbe\uff1a \u5bf9 \\(k &lt; n\\)\uff0c\u6709 \\(T(k) \\geq c_1 k \\lg k\\)\u3002</li> <li>\u4ee3\u5165\uff1a    $$    T(n) \\geq 2\\bigl(c_1 (n/2) \\lg (n/2)\\bigr) + n         = c_1 n \\lg n - c_1 n + n    $$</li> <li>\u9a8c\u8bc1\uff1a \u6211\u4eec\u9700\u8981    $$    c_1 n \\lg n - c_1 n + n \\geq c_1 n \\lg n,    $$</li> </ol> <p>\u5373 \\(-c_1 n + n \\geq 0\\)\uff0c\u8fd9\u8981\u6c42 \\(c_1 \\leq 1\\)\u3002</p> <p>\u7ed3\u8bba\uff1a \u56e0\u4e3a\u6211\u4eec\u65e2\u53ef\u4ee5\u8bc1\u660e\u4e0a\u754c\uff0c\u4e5f\u53ef\u4ee5\u8bc1\u660e\u4e0b\u754c\uff0c\u6240\u4ee5</p> \\[ T(n) = \\Theta(n \\lg n) \\] <p>\u6210\u7acb\u3002</p> <p>d.</p> \\[ T(n) = 2T(n/2 + 17) + n \\quad \\Rightarrow \\quad T(n) = O(n \\lg n) \\] <p>1. \u660e\u786e\u76ee\u6807\uff1a \u8bc1\u660e\u5b58\u5728\u5e38\u6570 \\(c &gt; 0\\) \u548c \\(n_0\\)\uff0c\u4f7f\u5f97</p> \\[ T(n) \\leq c n \\lg n. \\] <p>2. \u5f52\u7eb3\u5047\u8bbe\uff1a \u5047\u8bbe\u5bf9\u6240\u6709 \\(k &lt; n\\)\uff0c\u90fd\u6709</p> \\[ T(k) \\leq c k \\lg k. \\] <p>3. \u4ee3\u5165\u63a8\u5bfc\uff1a</p> \\[ T(n) \\leq 2\\bigl(c(n/2 + 17)\\lg(n/2 + 17)\\bigr) + n \\] <p>\u8fd9\u91cc\u7684 \\(+17\\) \u6bd4\u8f83\u68d8\u624b\uff0c\u4f46\u5bf9\u4e8e\u8db3\u591f\u5927\u7684 \\(n\\)\uff0c\u5b83\u662f\u4e00\u4e2a\u4f4e\u9636\u9879\u3002\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u5230 \\(n/2 + 17\\) \u4e0d\u4f1a\u6bd4 \\(n\\) \u5927\uff0c\u5e76\u4e14 \\(\\lg\\) \u662f\u4e00\u4e2a\u589e\u957f\u5f88\u6162\u7684\u51fd\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u653e\u5fc3\u5730\u8bf4\uff0c\u5bf9\u4e8e\u8db3\u591f\u5927\u7684 \\(n\\)\uff1a</p> \\[ c(n/2 + 17)\\lg(n/2 + 17) \\approx c(n/2)\\lg(n/2) \\] <p>\u56e0\u6b64\uff0c\u4ee3\u6570\u63a8\u5bfc\u8fc7\u7a0b\u4e0e\u4e0a\u4e00\u4e2a\u95ee\u9898 \\(c\\) \u975e\u5e38\u76f8\u4f3c\uff1a</p> \\[ T(n) \\leq c n \\lg n - c n + n + (\\text{\u4e00\u4e9b\u4f4e\u9636\u9879}) \\] <p>4. \u9a8c\u8bc1\u7ed3\u8bba\uff1a \u4e3a\u4e86\u4f7f\u4e0d\u7b49\u5f0f\u6210\u7acb\uff0c\u6211\u4eec\u9700\u8981 \\(-cn\\) \u80fd\u591f\u201c\u538b\u5236\u201d\u4f4f \\(+n\\) \u548c\u5176\u4ed6\u6240\u6709\u56e0 \\(+17\\) \u4ea7\u751f\u7684\u4f4e\u9636\u9879\u3002\u53ea\u8981 \\(n\\) \u8db3\u591f\u5927\uff0c\\(-cn + n\\) \u8fd9\u4e00\u9879\u662f\u4e3b\u5bfc\u7684\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981</p> \\[ -cn + n \\leq 0 \\quad \\Rightarrow \\quad c \\geq 1 \\] <p>\u9009\u62e9\u4e00\u4e2a\u8db3\u591f\u5927\u7684 \\(c\\) \u5373\u53ef\u3002</p> <p>e.</p> \\[ T(n) = 2T(n/3) + \\Theta(n) \\quad \\Rightarrow \\quad T(n) = \\Theta(n) \\] <p>\u6211\u4eec\u5c06 \\(\\Theta(n)\\) \u5199\u4e3a \\(dn\\)\u3002</p> <p>\u8bc1\u660e\u4e0b\u754c \\(\\Omega(n)\\)\uff1a \u8fd9\u4e00\u6b65\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u9012\u5f52\u5f0f\u4e2d\u5305\u542b\u4e86 \\(+dn\\) \u8fd9\u4e00\u9879\uff0c\u6240\u4ee5 \\(T(n)\\) \u81f3\u5c11\u662f \\(dn\\)\uff0c\u56e0\u6b64</p> \\[ T(n) = \\Omega(n) \\] <p>\u5929\u7136\u6210\u7acb\u3002</p> <p>\u8bc1\u660e\u4e0a\u754c \\(O(n)\\)\uff1a</p> <ol> <li>\u76ee\u6807\uff1a \u8bc1\u660e \\(T(n) \\leq cn\\)\u3002</li> <li>\u5047\u8bbe\uff1a \u5bf9 \\(k &lt; n\\)\uff0c\u6709 \\(T(k) \\leq ck\\)\u3002</li> <li>\u4ee3\u5165\uff1a</li> </ol> <p>$$    \\begin{aligned}    T(n) &amp;= 2T(n/3) + dn \\[6pt]         &amp;\\leq 2\\bigl(c(n/3)\\bigr) + dn \\[6pt]         &amp;= (2c/3)n + dn \\[6pt]         &amp;= (2c/3 + d)n    \\end{aligned}    $$ 4. \u9a8c\u8bc1\uff1a \u6211\u4eec\u9700\u8981</p> <p>$$    (2c/3 + d)n \\leq cn,    $$</p> <p>\u5373</p> <p>$$    2c/3 + d \\leq c.    $$</p> <ul> <li>\\(d \\leq c - 2c/3 \\;\\;\\Rightarrow\\;\\; d \\leq c/3 \\;\\;\\Rightarrow\\;\\; c \\geq 3d\\)\u3002</li> <li>\u53ea\u8981\u6211\u4eec\u9009\u62e9\u7684 \\(c\\) \u81f3\u5c11\u662f \\(d\\) \u7684 3 \u500d\uff0c\u8bc1\u660e\u5c31\u6210\u7acb\u3002</li> </ul> <p>\u7ed3\u8bba\uff1a \u56e0\u4e3a\u4e0a\u4e0b\u754c\u90fd\u6210\u7acb\uff0c\u6240\u4ee5</p> \\[ T(n) = \\Theta(n). \\] <p>f.</p> \\[ T(n) = 4T(n/2) + \\Theta(n) \\quad \\Rightarrow \\quad T(n) = \\Theta(n^2) \\] <p>\u6211\u4eec\u5c06 \\(\\Theta(n)\\) \u5199\u4e3a \\(dn\\)\u3002</p> <p>\u8bc1\u660e\u4e0b\u754c \\(\\Omega(n^2)\\)\uff1a</p> <ol> <li>\u76ee\u6807\uff1a \u8bc1\u660e \\(T(n) \\geq c_1 n^2\\)\u3002</li> <li>\u5047\u8bbe\uff1a \u5bf9 \\(k &lt; n\\)\uff0c\u6709 \\(T(k) \\geq c_1 k^2\\)\u3002</li> <li>\u4ee3\u5165\uff1a    $$    T(n) \\geq 4\\bigl(c_1 (n/2)^2\\bigr) + dn = c_1 n^2 + dn    $$</li> <li>\u9a8c\u8bc1\uff1a \u6211\u4eec\u9700\u8981 \\(c_1 n^2 + dn \\geq c_1 n^2\\)\u3002\u56e0\u4e3a \\(dn\\) \u662f\u6b63\u6570\uff0c\u8fd9\u4e2a\u4e0d\u7b49\u5f0f\u663e\u7136\u6210\u7acb\u3002</li> </ol> <p>\u8bc1\u660e\u4e0a\u754c \\(O(n^2)\\)\uff1a</p> <ol> <li>\u76ee\u6807\uff1a \u8bc1\u660e \\(T(n) \\leq c_2 n^2\\)\u3002</li> <li>\u5047\u8bbe\uff1a \u5bf9 \\(k &lt; n\\)\uff0c\u6709 \\(T(k) \\leq c_2 k^2\\)\u3002</li> <li>\u4ee3\u5165\uff1a</li> </ol> <p>$$    T(n) \\leq 4\\bigl(c_2 (n/2)^2\\bigr) + dn = c_2 n^2 + dn    $$ 4. \u9a8c\u8bc1\uff1a \u6211\u4eec\u9700\u8981 \\(c_2 n^2 + dn \\leq c_2 n^2\\)\uff0c\u5373 \\(dn \\leq 0\\)\uff0c\u8fd9\u4e0d\u53ef\u80fd\u6210\u7acb\u3002\u8bc1\u660e\u5931\u8d25\u3002 5. \u5f3a\u5316\u5047\u8bbe\uff1a \u6211\u4eec\u5c1d\u8bd5\u8bc1\u660e</p> <p>$$    T(n) \\leq c_2 n^2 - c_3 n.    $$ 6. \u65b0\u5047\u8bbe\uff1a \u5bf9 \\(k &lt; n\\)\uff0c\u6709 \\(T(k) \\leq c_2 k^2 - c_3 k\\)\u3002 7. \u65b0\u4ee3\u5165\uff1a</p> <p>$$    \\begin{aligned}    T(n) &amp;\\leq 4\\bigl(c_2 (n/2)^2 - c_3 (n/2)\\bigr) + dn \\[6pt]         &amp;= c_2 n^2 - 2c_3 n + dn    \\end{aligned}    $$ 8. \u65b0\u9a8c\u8bc1\uff1a \u6211\u4eec\u9700\u8981</p> <p>$$    c_2 n^2 - 2c_3 n + dn \\leq c_2 n^2 - c_3 n,    $$</p> <p>\u5373</p> <p>$$    -2c_3 n + dn \\leq -c_3 n \\quad \\Rightarrow \\quad dn \\leq c_3 n \\quad \\Rightarrow \\quad c_3 \\geq d.    $$</p> <p>\u53ea\u8981\u6211\u4eec\u9009\u62e9\u7684\u5e38\u6570 \\(c_3\\) \u5927\u4e8e\u7b49\u4e8e \\(d\\)\uff0c\u8bc1\u660e\u5c31\u6210\u7acb\u3002</p> <p>\u7ed3\u8bba\uff1a \u56e0\u4e3a\u4e0a\u4e0b\u754c\u90fd\u6210\u7acb\uff0c\u6240\u4ee5</p> \\[ T(n) = \\Theta(n^2). \\]"},{"location":"algorithms/2_recurrence/#3-recursion-tree-method","title":"3. Recursion-tree Method \u9012\u5f52\u6811\u6cd5","text":"<p>(\u8fd9\u4e2a\u90e8\u5206\u6709\u7a7a\u7a0d\u5fae\u6574\u7406\u4e00\u4e0b\uff0c\u7b14\u8bb0\u6709\u70b9\u4e71)</p> <p>\u9012\u5f52\u6811\u6cd5\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u76f4\u89c2\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u4e8e\u4e3a\u4ee3\u5165\u6cd5\u751f\u6210\u4e00\u4e2a\u597d\u7684\u731c\u6d4b \ud83d\udca1\u3002</p> <p>\u6838\u5fc3\u601d\u60f3 (Core Idea) \ud83c\udf33</p> <p>\u9012\u5f52\u6811\u5c06\u4e00\u4e2a\u9012\u5f52\u5f0f\u53ef\u89c6\u5316\u3002\u5728\u6811\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868\u9012\u5f52\u8c03\u7528\u4e2d\u4ea7\u751f\u7684\u5355\u4e2a\u5b50\u95ee\u9898\u7684\u6210\u672c\u3002</p> <p>\u6c42\u89e3\u8fc7\u7a0b:</p> <ol> <li>\u5c55\u5f00\u6811\u7ed3\u6784\uff1a \u5c06\u9012\u5f52\u5f0f\u5c55\u5f00\u6210\u4e00\u68f5\u6811\uff0c\u76f4\u5230\u53f6\u5b50\u8282\u70b9\u3002</li> <li>\u8ba1\u7b97\u6bcf\u5c42\u6210\u672c\uff1a \u5c06\u6811\u7684\u6bcf\u4e00\u5c42\u7684\u6240\u6709\u8282\u70b9\u7684\u6210\u672c\u76f8\u52a0\uff0c\u5f97\u5230\u8be5\u5c42\u7684\u603b\u6210\u672c\u3002</li> <li>\u7d2f\u52a0\u6240\u6709\u5c42\uff1a \u5c06\u6240\u6709\u5c42\u7684\u6210\u672c\uff08\u5305\u62ec\u53f6\u5b50\u8282\u70b9\uff09\u5168\u90e8\u52a0\u8d77\u6765\uff0c\u5f97\u5230\u6574\u4e2a\u9012\u5f52\u5f0f\u7684\u603b\u6210\u672c\u3002</li> </ol> <p>\u793a\u4f8b\uff1a\u6c42\u89e3 T(n) = 3T(n/4) + cn\u00b2</p> <p>1. \u7528\u9012\u5f52\u6811\u6cd5\u5f97\u51fa\u731c\u6d4b (Making a Guess with the Recursion Tree)</p> <p>\u6811\u7684\u7ed3\u6784\u5206\u6790:</p> <ul> <li>\u7b2c 0 \u5c42 (\u6839\u8282\u70b9): \u6210\u672c\u662f <code>cn\u00b2</code>\u3002</li> <li>\u7b2c 1 \u5c42: \u6709 3 \u4e2a\u5b50\u8282\u70b9\uff0c\u8be5\u5c42\u603b\u6210\u672c\u4e3a <code>3 * c(n/4)\u00b2 = (3/16)cn\u00b2</code>\u3002</li> <li>\u7b2c i \u5c42 (\u4e00\u822c\u60c5\u51b5): \u6709 <code>3^i</code> \u4e2a\u8282\u70b9\uff0c\u8be5\u5c42\u603b\u6210\u672c\u4e3a <code>(3/16)^i * cn\u00b2</code>\u3002</li> <li>\u6811\u7684\u9ad8\u5ea6: \u6811\u9ad8 <code>h = log\u2084n</code>\u3002</li> <li>\u53f6\u5b50\u8282\u70b9: \u5171\u6709 <code>n^(log\u20843)</code> \u4e2a\u53f6\u5b50\uff0c\u53f6\u5b50\u5c42\u7684\u603b\u6210\u672c\u4e3a <code>\u0398(n^(log\u20843))</code>\u3002</li> </ul> <p></p> <p>\u8ba1\u7b97\u603b\u4ee3\u4ef7: \u6211\u4eec\u5c06\u6240\u6709\u5c42\u7684\u6210\u672c\u52a0\u8d77\u6765\uff0c\u5f97\u5230\u4e00\u4e2a\u51e0\u4f55\u7ea7\u6570\uff1a</p> \\[ T(n) = \\sum_{i=0}^{\\log_4n-1} \\left(\\frac{3}{16}\\right)^i cn^2 + \\Theta(n^{\\log_43}) \\] <p>\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u65e0\u9650\u9012\u51cf\u51e0\u4f55\u7ea7\u6570\u7684\u548c\u6765\u4e3a\u8fd9\u4e2a\u6c42\u548c\u63d0\u4f9b\u4e00\u4e2a\u4e0a\u754c\uff1a</p> \\[ \\begin{aligned} T(n) &amp;&lt; \\left(\\sum_{i=0}^{\\infty} \\left(\\frac{3}{16}\\right)^i \\right) cn^2 + \\Theta(n^{\\log_43}) \\\\ &amp;= \\frac{1}{1 - 3/16} cn^2 + \\Theta(n^{\\log_43}) \\\\ &amp;= \\frac{16}{13} cn^2 + \\Theta(n^{\\log_43}) \\end{aligned} \\] <p>\u56e0\u4e3a <code>log\u20843 \u2248 0.79</code>\uff0c\u6240\u4ee5 <code>n^(log\u20843)</code> \u662f\u4e00\u4e2a\u6bd4 <code>n\u00b2</code> \u4f4e\u9636\u7684\u9879\u3002</p> <p>\u5f97\u51fa\u731c\u6d4b: \u6811\u7684\u603b\u6210\u672c\u7531\u6839\u8282\u70b9\u7684\u6210\u672c <code>cn\u00b2</code> \u4e3b\u5bfc\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u51fa\u4e00\u4e2a\u5408\u7406\u7684\u731c\u6d4b\uff1a<code>T(n) = O(n\u00b2)</code>\u3002</p> <p>2. \u7528\u4ee3\u5165\u6cd5\u9a8c\u8bc1\u731c\u6d4b (Verifying the Guess with the Substitution Method) \u2705</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u7528\u4ee3\u5165\u6cd5\u6765\u4e25\u683c\u8bc1\u660e\u6211\u4eec\u4ece\u9012\u5f52\u6811\u5f97\u5230\u7684\u731c\u6d4b <code>T(n) = O(n\u00b2)</code> \u662f\u6b63\u786e\u7684\u3002</p> <p>\u8fd9\u4e2a\u754c\u662f\u7d27\u786e\u7684\u5417\uff1f \u662f\u7684\u3002\u56e0\u4e3a\u539f\u9012\u5f52\u5f0f <code>T(n) = 3T(n/4) + \u0398(n\u00b2)</code> \u4e2d\u5305\u542b <code>\u0398(n\u00b2)</code> \u8fd9\u4e00\u9879\uff0c\u6240\u4ee5\u89e3\u7684\u4e0b\u754c\u5fc5\u7136\u662f <code>\u03a9(n\u00b2)</code>\u3002\u5982\u679c\u4e00\u4e2a\u89e3\u65e2\u662f <code>O(n\u00b2)</code> \u53c8\u662f <code>\u03a9(n\u00b2)</code>\uff0c\u90a3\u4e48\u5b83\u5c31\u662f <code>\u0398(n\u00b2)</code>\u3002</p> <p>\u5f52\u7eb3\u8bc1\u660e: \u6211\u4eec\u8981\u8bc1\u660e <code>T(n) = O(n\u00b2)</code>\u3002</p> <p>\u5f52\u7eb3\u5047\u8bbe: <code>T(n) \u2264 dn\u00b2</code>\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u6211\u4eec\u5f85\u9009\u62e9\u7684\u5e38\u6570 <code>d &gt; 0</code> \u6210\u7acb\u3002\uff08\u8fd9\u91cc\u7528 <code>d</code> \u662f\u4e3a\u4e86\u548c\u9012\u5f52\u5f0f\u4e2d\u5df2\u6709\u7684 <code>c</code> \u533a\u5206\u5f00\uff09\u3002</p> <p>\u5f52\u7eb3\u6b65\u9aa4: \u5c06\u5047\u8bbe\u4ee3\u5165\u9012\u5f52\u5f0f <code>T(n) \u2264 3T(n/4) + cn\u00b2</code>\uff1a</p> \\[ \\begin{aligned} T(n) &amp;\\le 3(d(n/4)^2) + cn^2 \\\\ &amp;= 3d\\frac{n^2}{16} + cn^2 \\\\ &amp;= \\frac{3}{16}dn^2 + cn^2 \\\\ &amp;= \\left(\\frac{3}{16}d + c\\right) n^2 \\end{aligned} \\] <p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u8bc1\u660e\u4e0a\u5f0f <code>\u2264 dn\u00b2</code>\u3002\u8fd9\u4e2a\u6761\u4ef6\u6210\u7acb\uff0c\u5f53\u4e14\u4ec5\u5f53\uff1a</p> \\[ \\frac{3}{16}d + c \\le d \\] <p>\u89e3\u8fd9\u4e2a\u5173\u4e8e <code>d</code> \u7684\u4e0d\u7b49\u5f0f\uff1a</p> \\[ \\begin{aligned} c &amp;\\le d - \\frac{3}{16}d \\\\ c &amp;\\le \\frac{13}{16}d \\\\ d &amp;\\ge \\frac{16}{13}c \\end{aligned} \\] <p>\u7ed3\u8bba: \u56e0\u4e3a <code>c</code> \u662f\u9012\u5f52\u5f0f\u7ed9\u5b9a\u7684\u4e00\u4e2a\u5e38\u6570\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u81ea\u7531\u9009\u62e9\u4e00\u4e2a\u5e38\u6570 <code>d</code> \u53ea\u8981\u5b83\u6ee1\u8db3 <code>d \u2265 (16/13)c</code>\u3002\u540c\u65f6\u6211\u4eec\u4e5f\u53ef\u4ee5\u9009\u62e9\u4e00\u4e2a\u8db3\u591f\u5927\u7684 <code>d</code> \u6765\u8986\u76d6\u57fa\u672c\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u5f52\u7eb3\u5047\u8bbe\u6210\u7acb\u3002</p> <p>\u6211\u4eec\u6210\u529f\u5730\u8bc1\u660e\u4e86 <code>T(n) = O(n\u00b2)</code>\u3002</p> <p>3.2 \u4e0d\u89c4\u5219\u4f8b\u5b50</p> <p>\u8ba9\u6211\u4eec\u6765\u5206\u6790\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u3001\u4e0d\u5e73\u8861\u7684\u9012\u5f52\u5f0f(An Irregular Example)\u3002</p> <p>\u9012\u5f52\u5f0f:</p> \\[ T(n) = T(n/3) + T(2n/3) + \\Theta(n) \\] <p>\u7531\u4e8e <code>1/3 + 2/3 = 1</code>\uff0c\u8fd9\u4e2a\u9012\u5f52\u5f0f\u770b\u8d77\u6765\u5f88\u7279\u522b\u3002\u5b83\u7684\u9012\u5f52\u6811\u5de6\u53f3\u5b50\u6811\u7684\u6df1\u5ea6\u4e0d\u540c\uff0c\u4e0d\u662f\u4e00\u68f5\u201c\u5b8c\u7f8e\u201d\u7684\u6811\u3002</p> <p></p> <p>1. \u5206\u6790\u5185\u90e8\u8282\u70b9\u6210\u672c (Analyzing Internal Node Cost) \ud83d\udcbb</p> <p>\u6811\u7684\u9ad8\u5ea6 (Height): \u6811\u7684\u9ad8\u5ea6\u7531\u6700\u957f\u7684\u8def\u5f84\u51b3\u5b9a\uff0c\u4e5f\u5c31\u662f\u6bcf\u6b21\u90fd\u9009\u62e9\u8f83\u5927\u5b50\u95ee\u9898\uff08<code>2n/3</code>\uff09\u7684\u8def\u5f84\u3002\u8fd9\u6761\u6700\u53f3\u4fa7\u8def\u5f84\u7684\u957f\u5ea6 <code>h</code> \u6ee1\u8db3 <code>(2/3)^h * n \u2248 1</code>\uff0c\u89e3\u5f97 <code>h = log_{3/2}n</code>\u3002\u56e0\u6b64\uff0c\u6811\u7684\u9ad8\u5ea6\u662f <code>\u0398(lg n)</code>\u3002</p> <p>\u6bcf\u5c42\u6210\u672c (Cost Per Level): \u4e00\u4e2a\u6709\u8da3\u7684\u73b0\u8c61\u662f\uff0c\u8fd9\u68f5\u6811\u7684\u6bcf\u4e00\u5c42\u7684\u6210\u672c\u4e4b\u548c\u90fd\u662f <code>cn</code>\u3002</p> <ul> <li>\u7b2c 0 \u5c42: <code>cn</code></li> <li>\u7b2c 1 \u5c42: <code>c(n/3) + c(2n/3) = cn</code></li> <li>\u7b2c 2 \u5c42: <code>c(n/9) + c(2n/9) + c(2n/9) + c(4n/9) = cn</code></li> <li>...\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6700\u6df1\u7684\u53f6\u5b50\u51fa\u73b0\u524d\uff0c\u6bcf\u5c42\u6210\u672c\u90fd\u6070\u597d\u662f <code>cn</code>\u3002</li> </ul> <p>\u5185\u90e8\u8282\u70b9\u603b\u6210\u672c (Total Internal Cost): \u6211\u4eec\u5c06\u6bcf\u5c42\u7684\u6210\u672c <code>cn</code> \u4e58\u4ee5\u6811\u7684\u9ad8\u5ea6 <code>\u0398(lg n)</code>\uff0c\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u4e0a\u754c\uff1a</p> \\[ \\text{\u5185\u90e8\u8282\u70b9\u603b\u6210\u672c} = O(n \\lg n) \\] <p>2. \u5206\u6790\u53f6\u5b50\u8282\u70b9\u6210\u672c (Analyzing Leaf Node Cost) \ud83c\udf3f</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u603b\u6210\u672c\uff0c\u8fd9\u9700\u8981\u6211\u4eec\u5148\u77e5\u9053\u53f6\u5b50\u7684\u6570\u91cf\u3002</p> <p>\u53f6\u5b50\u6570\u91cf\u7684\u9012\u5f52\u5f0f (Recurrence for Number of Leaves): \u6211\u4eec\u53ef\u4ee5\u4e3a\u53f6\u5b50\u7684\u6570\u91cf <code>L(n)</code> \u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u3001\u66f4\u7b80\u5355\u7684\u9012\u5f52\u5f0f\u3002\u5f53\u95ee\u9898\u8db3\u591f\u5c0f\u65f6\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u53f6\u5b50\uff08\u6210\u672c\u4e3a1\uff09\u3002\u5426\u5219\uff0c\u53f6\u5b50\u7684\u603b\u6570\u5c31\u662f\u5176\u5de6\u53f3\u5b50\u6811\u7684\u53f6\u5b50\u6570\u4e4b\u548c\u3002</p> \\[ L(n) = L(n/3) + L(2n/3) \\quad (\\text{\u5f53 } n \\text{ \u8db3\u591f\u5c0f\u65f6\uff0c} L(n)=1) \\] <p>\u6c42\u89e3 L(n): \u4f7f\u7528\u4ee3\u5165\u6cd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u8bc1\u660e <code>L(n) = O(n)</code>\u3002\uff08\u5047\u8bbe <code>L(k) \u2264 dk</code>\uff0c\u5219 <code>L(n) \u2264 d(n/3) + d(2n/3) = dn</code>\uff09\u3002</p> <p>\u53f6\u5b50\u8282\u70b9\u603b\u6210\u672c (Total Leaf Cost): \u53f6\u5b50\u8282\u70b9\u7684\u603b\u6210\u672c\u662f\u53f6\u5b50\u6570\u91cf\u4e58\u4ee5\u6bcf\u4e2a\u53f6\u5b50\u7684\u6210\u672c\uff08<code>\u0398(1)</code>\uff09\u3002</p> \\[ \\text{\u53f6\u5b50\u8282\u70b9\u603b\u6210\u672c} = O(n) \\cdot \\Theta(1) = O(n) \\] <p>3. \u5f97\u51fa\u6700\u7ec8\u731c\u6d4b (Reaching the Final Guess) \u2728</p> <p>\u603b\u6210\u672c (Total Cost): \u5c06\u5185\u90e8\u8282\u70b9\u548c\u53f6\u5b50\u8282\u70b9\u7684\u6210\u672c\u76f8\u52a0\uff1a</p> \\[ \\begin{aligned} T(n) &amp;= (\\text{\u5185\u90e8\u8282\u70b9\u6210\u672c}) + (\\text{\u53f6\u5b50\u8282\u70b9\u6210\u672c}) \\\\ &amp;= O(n \\lg n) + O(n) \\end{aligned} \\] <p><code>O(n lg n)</code> \u8fd9\u4e00\u9879\u662f\u4e3b\u5bfc\u9879\u3002</p> <p>\u6700\u7ec8\u731c\u6d4b:</p> \\[ T(n) = \\Theta(n \\lg n) \\] <p>\u91cd\u8981\u63d0\u793a: \u9012\u5f52\u6811\u6cd5\u5f97\u51fa\u7684\u731c\u6d4b\u975e\u5e38\u53ef\u9760\uff0c\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u6570\u5b66\u4e0a\u7684\u4e25\u8c28\u6027\uff0c\u6700\u540e\u603b\u5e94\u8be5\u7528\u4ee3\u5165\u6cd5\u6765\u6b63\u5f0f\u9a8c\u8bc1\u5b83\u3002</p>"},{"location":"algorithms/2_recurrence/#4-master-method","title":"4. Master Method","text":""},{"location":"algorithms/2_recurrence/#41","title":"4.1 \u4e3b\u65b9\u6cd5","text":"<p>Master Method\uff08\u4e3b\u65b9\u6cd5\uff09\u4e5f\u53ef\u4ee5\u7528\u6765\u6c42\u89e3\u7279\u5b9a\u5f62\u5f0f\u7684\u9012\u5f52\u5173\u7cfb\u5f0f\u3002</p> <p>\u5728\u4e0a\u9762\u7684\u8bb2\u89e3\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86\u4ee3\u5165\u6cd5\uff08\u5f52\u7eb3\u6cd5\uff09\u6765\u6c42\u89e3\u9012\u5f52\u5f0f\uff0c\u8be5\u65b9\u6cd5\u66f4\u4e3a\u901a\u7528\uff0c\u4f46\u662f\u9700\u8981\u5148\u731c\u6d4b\u89e3\u7684\u5f62\u5f0f\uff0c\u4e14\u8fc7\u7a0b\u76f8\u5bf9\u7e41\u7410\u3002\u800c\u672c\u8282\u6211\u4eec\u6765\u4ecb\u7ecd\u4e00\u4e2a\u66f4\u4e3a\u5f3a\u5927\u7684\u201c\u516c\u5f0f\u201d\uff0c\u5373Master Method\u3002\u4f46\u662f \u8fd9\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u6240\u6709\u60c5\u51b5\u3002</p> <p>\u4e3b\u65b9\u6cd5 (Master Method) \u63d0\u4f9b\u4e86\u4e00\u4e2a\u201c\u98df\u8c31\u201d\u5f0f\u7684\u5f3a\u5927\u5de5\u5177\uff0c\u7528\u4e8e\u5feb\u901f\u6c42\u89e3\u7279\u5b9a\u5f62\u5f0f\u7684\u7b97\u6cd5\u9012\u5f52\u5f0f\u3002\u8fd9\u4e2a\u6807\u51c6\u5f62\u5f0f\u662f\uff1a</p> \\[ T(n) = aT\\!\\left(\\tfrac{n}{b}\\right) + f(n) \\] <p>\u5176\u4e2d\uff0c<code>a \u2265 1</code> \u662f\u5b50\u95ee\u9898\u7684\u6570\u91cf\uff0c<code>b &gt; 1</code> \u662f\u5b50\u95ee\u9898\u89c4\u6a21\u7684\u7f29\u51cf\u56e0\u5b50\uff0c<code>f(n)</code> \u662f\u5728\u6bcf\u4e00\u6b65\u4e2d\u5206\u89e3\u95ee\u9898\u548c\u5408\u5e76\u7ed3\u679c\u7684\u6210\u672c\u3002</p> <p>\u4e3b\u65b9\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\u6bd4\u8f83\u4e24\u80a1\u201c\u529b\u91cf\u201d\u7684\u589e\u957f\u901f\u5ea6\uff0c\u770b\u54ea\u4e00\u65b9\u6700\u7ec8\u4e3b\u5bfc\u4e86\u7b97\u6cd5\u7684\u603b\u6210\u672c\u3002\u8fd9\u4e24\u80a1\u529b\u91cf\u662f\uff1a</p> <ol> <li>\u201c\u5206\u679d\u6210\u672c\u201d (Watershed Function - \u5206\u6c34\u5cad\u51fd\u6570) : \u7531\u9012\u5f52\u7684\u5206\u679d\u6570\u91cf\u548c\u6df1\u5ea6\u51b3\u5b9a\uff0c\u5176\u51fd\u6570\u5f62\u5f0f\u4e3a\\(n^{log_b{a}}\\)\u3002\u8fd9\u4ee3\u8868\u4e86\u6240\u6709\u9012\u5f52\u8c03\u7528\u7d2f\u79ef\u8d77\u6765\u7684\u6210\u672c\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u9012\u5f52\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u7684\u603b\u5de5\u4f5c\u91cf\u3002</li> <li>\u201c\u5355\u6b65\u6210\u672c\u201d (Driving Function - \u9a71\u52a8\u51fd\u6570) : \u5373\\(f(n\\)) \u3002\u8fd9\u4ee3\u8868\u4e86\u5355\u6b21\u8c03\u7528\u4e2d\u7528\u4e8e\u5206\u89e3\u548c\u5408\u5e76\u7684\u6210\u672c\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u9012\u5f52\u6811\u4e2d\u6839\u8282\u70b9\u7684\u5de5\u4f5c\u91cf\u3002</li> </ol> <p>\u7b97\u6cd5\u7684\u6700\u7ec8\u590d\u6742\u5ea6\uff0c\u5c31\u53d6\u51b3\u4e8e\u8fd9\u573a\u62d4\u6cb3\u6bd4\u8d5b\u7684\u7ed3\u679c\u3002\u663e\u7136\uff0c\u7ed3\u679c\u6709\u4e09\u79cd\uff1a</p> <ul> <li>Watershed Function\u83b7\u80dc</li> <li>\u5e73\u5c40</li> <li>Driving Function\u83b7\u80dc</li> </ul> <p>\u603b\u7ed3\u5982\u4e0b\uff1a</p> \u60c5\u51b5\uff08Case\uff09 \u60c5\u51b5\u4e00\uff08Case 1\uff09 \u60c5\u51b5\u4e8c\uff08Case 2\uff09 \u60c5\u51b5\u4e09\uff08Case 3\uff09 \u6838\u5fc3\u5bf9\u6bd4 \\(f(n)\\) \u8fdc\u6162\u4e8e \\(n^{\\log_b a}\\) \\(f(n)\\) \u7ea6\u7b49\u4e8e \\(n^{\\log_b a}\\) \\(f(n)\\) \u8fdc\u5feb\u4e8e \\(n^{\\log_b a}\\) \u201c\u62d4\u6cb3\u201d\u7ed3\u679c \u9012\u5f52\u5206\u679d\u6210\u672c\u83b7\u80dc \u52bf\u5747\u529b\u654c \u5355\u6b65\u5206\u89e3/\u5408\u5e76\u6210\u672c\u83b7\u80dc \u6700\u7ec8\u7ed3\u679c \\(\\Theta \\bigl(n^{\\log_b a}\\bigr)\\) \\(\\Theta \\bigl(n^{\\log_b a} \\log n\\bigr)\\) \uff08\u901a\u7528\u7248 \\(\\log^{k+1} n\\)\uff09 \\(\\Theta \\bigl(f(n)\\bigr)\\) \uff08\u9700\u6ee1\u8db3\u6b63\u5219\u6761\u4ef6\uff09"},{"location":"algorithms/2_recurrence/#42","title":"4.2 \u4f8b\u89e3","text":"<p>\u4e3e\u4f8b\u51e0\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4ee5\u4e0b\u4e3b\u65b9\u6cd5\u5982\u4f55\u4f7f\u7528\uff1a</p> <p>a.</p> \\[ T(n) = 2T\\!\\left(\\tfrac{n}{4}\\right) + 1 \\] <ol> <li> <p>\u5206\u6790\uff1a</p> </li> <li> <p>\\(f(n) = 1\\)</p> </li> <li>\u6bd4\u8f83 \\(f(n) = 1\\) \u548c \\(n^{\\log_b a} = \\sqrt{n}\\)\u3002</li> <li>\u5f88\u660e\u663e\uff0c\\(f(n)\\) \u7684\u589e\u957f\u901f\u5ea6\u8fdc\u6162\u4e8e \\(\\sqrt{n}\\)\u3002\u4e25\u683c\u6765\u8bf4\uff0c\\(f(n) = 1 = O(n^{0.5 - \\varepsilon})\\)\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u53d6 \\(\\varepsilon = 0.5\\)\u3002</li> <li>\u8fd9\u7b26\u5408\u4e3b\u65b9\u6cd5\u7684 \u60c5\u51b5\u4e00 (Case 1)\u3002</li> <li> <p>\u7ed3\u8bba\uff1a</p> </li> <li> <p>\u603b\u6210\u672c\u7531 \\(n^{\\log_b a}\\) \u51b3\u5b9a\u3002</p> </li> <li> \\[      T(n) = \\Theta\\!\\bigl(n^{\\log_b a}\\bigr) = \\Theta(\\sqrt{n})      \\] </li> </ol> <p>b.</p> \\[ T(n) = 2T\\!\\left(\\tfrac{n}{4}\\right) + \\sqrt{n} \\] <ol> <li> <p>\u5206\u6790\uff1a</p> </li> <li> <p>\\(f(n) = \\sqrt{n}\\)</p> </li> <li>\u6bd4\u8f83 \\(f(n) = \\sqrt{n}\\) \u548c \\(n^{\\log_b a} = \\sqrt{n}\\)\u3002</li> <li>\u4e24\u8005\u6e10\u8fd1\u76f8\u7b49\u3002\u4e25\u683c\u6765\u8bf4\uff0c\\(f(n) = \\Theta\\!\\bigl(n^{1/2}\\log^0 n\\bigr)\\)\uff0c\u5373 \\(k = 0\\)\u3002</li> <li>\u8fd9\u7b26\u5408\u4e3b\u65b9\u6cd5\u7684 \u60c5\u51b5\u4e8c (Case 2)\u3002</li> <li> <p>\u7ed3\u8bba\uff1a</p> </li> <li> <p>\u603b\u6210\u672c\u9700\u8981\u5728\u539f\u6709\u57fa\u7840\u4e0a\u8ffd\u52a0\u4e00\u4e2a\u5bf9\u6570\u56e0\u5b50\u3002</p> </li> <li> \\[      T(n) = \\Theta\\!\\bigl(n^{\\log_b a}\\log^{k+1} n\\bigr)           = \\Theta\\!\\bigl(\\sqrt{n}\\log^{0+1} n\\bigr)           = \\Theta\\!\\bigl(\\sqrt{n}\\lg n\\bigr)      \\] </li> </ol> <p>c.</p> \\[ T(n) = 2T\\!\\left(\\tfrac{n}{4}\\right) + \\sqrt{n}\\,\\lg^{2}n \\] <ol> <li> <p>\u5206\u6790\uff1a</p> </li> <li> <p>\\(f(n) = \\sqrt{n}\\,\\lg^2 n\\)</p> </li> <li>\u6bd4\u8f83 \\(f(n) = \\sqrt{n}\\,\\lg^2 n\\) \u548c \\(n^{\\log_b a} = \\sqrt{n}\\)\u3002</li> <li>\\(f(n)\\) \u7684\u589e\u957f\u901f\u5ea6\u6bd4 \\(n^{\\log_b a}\\) \u8981\u5feb\uff0c\u4f46\u5b83\u53ea\u662f\u5feb\u4e86\u4e00\u4e2a\u5bf9\u6570\u56e0\u5b50\uff08\\(\\lg^2 n\\)\uff09\uff0c\u5e76\u4e0d\u662f\u591a\u9879\u5f0f\u7ea7\u522b\u7684\u5feb\u3002\u56e0\u6b64\uff0c\u5b83\u4e0d\u6ee1\u8db3\u60c5\u51b5\u4e09\u7684\u6761\u4ef6\u3002</li> <li>\u6211\u4eec\u518d\u6765\u770b\u60c5\u51b5\u4e8c\u7684\u901a\u7528\u5f62\u5f0f\uff1a\\(f(n) = \\Theta\\!\\bigl(n^{\\log_b a}\\log^k n\\bigr)\\)\u3002</li> <li>\u8fd9\u91cc\uff0c\\(f(n) = \\Theta\\!\\bigl(\\sqrt{n}\\log^2 n\\bigr)\\)\uff0c\u5373 \\(k = 2\\)\u3002</li> <li>\u8fd9\u4f9d\u7136\u7b26\u5408\u4e3b\u65b9\u6cd5\u7684 \u60c5\u51b5\u4e8c (Case 2)\u3002</li> <li> <p>\u7ed3\u8bba\uff1a</p> </li> <li> <p>\u603b\u6210\u672c\u9700\u8981\u5728\u539f\u6709\u57fa\u7840\u4e0a\u8ffd\u52a0\u4e00\u4e2a\u5bf9\u6570\u56e0\u5b50\u3002</p> </li> <li> \\[      T(n) = \\Theta\\!\\bigl(n^{\\log_b a}\\log^{k+1} n\\bigr)           = \\Theta\\!\\bigl(\\sqrt{n}\\log^{2+1} n\\bigr)           = \\Theta\\!\\bigl(\\sqrt{n}\\lg^3 n\\bigr)      \\] </li> </ol> <p>d.</p> \\[ T(n) = 2T\\!\\left(\\tfrac{n}{4}\\right) + n \\] <ol> <li> <p>\u5206\u6790\uff1a</p> </li> <li> <p>\\(f(n) = n\\)</p> </li> <li>\u6bd4\u8f83 \\(f(n) = n\\) \u548c \\(n^{\\log_b a} = \\sqrt{n}\\)\u3002</li> <li>\\(f(n)\\) \u7684\u589e\u957f\u901f\u5ea6\u8fdc\u5feb\u4e8e \\(\\sqrt{n}\\)\u3002\u4e25\u683c\u6765\u8bf4\uff0c\\(f(n) = n^1 = \\Omega(n^{0.5+\\varepsilon})\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6 \\(\\varepsilon = 0.5\\)\u3002</li> <li>\u8fd9\u6ee1\u8db3\u4e86\u4e3b\u65b9\u6cd5\u7684 \u60c5\u51b5\u4e09 (Case 3) \u7684\u7b2c\u4e00\u4e2a\u6761\u4ef6\u3002</li> <li>\u6211\u4eec\u8fd8\u9700\u8981\u68c0\u67e5\u6b63\u5219\u6761\u4ef6\uff1a\\(a f(n/b) \\leq c f(n)\\) \u662f\u5426\u5bf9\u67d0\u4e2a \\(c &lt; 1\\) \u6210\u7acb\u3002<ul> <li>\\(2 \\cdot f(n/4) \\leq c \\cdot n\\)</li> <li>\\(2 \\cdot (n/4) \\leq c \\cdot n\\)</li> <li>\\(n/2 \\leq c \\cdot n\\)</li> <li>\\(1/2 \\leq c\\)</li> </ul> </li> <li>\u6211\u4eec\u53ef\u4ee5\u9009\u62e9 \\(c = 1/2\\)\uff08\u6216 \\(0.6, 0.9\\) \u7b49\uff09\uff0c\u8fd9\u6ee1\u8db3 \\(1/2 \\leq c &lt; 1\\)\u3002\u6240\u4ee5\u6b63\u5219\u6761\u4ef6\u6210\u7acb\u3002</li> <li> <p>\u7ed3\u8bba\uff1a</p> </li> <li> <p>\u603b\u6210\u672c\u7531 \\(f(n)\\) \u51b3\u5b9a\u3002</p> </li> <li> \\[      T(n) = \\Theta(f(n)) = \\Theta(n)      \\] </li> </ol> <p>e.</p> \\[ T(n) = 2T\\!\\left(\\tfrac{n}{4}\\right) + n^2 \\] <ol> <li> <p>\u5206\u6790\uff1a</p> </li> <li> <p>\\(f(n) = n^2\\)</p> </li> <li>\u6bd4\u8f83 \\(f(n) = n^2\\) \u548c \\(n^{\\log_b a} = \\sqrt{n}\\)\u3002</li> <li>\\(f(n)\\) \u7684\u589e\u957f\u901f\u5ea6\u8fdc\u5feb\u4e8e \\(\\sqrt{n}\\)\u3002\u4e25\u683c\u6765\u8bf4\uff0c\\(f(n) = n^2 = \\Omega(n^{0.5+\\varepsilon})\\)\uff0c\u6211\u4eec\u53ef\u4ee5\u53d6 \\(\\varepsilon = 1.5\\)\u3002</li> <li>\u8fd9\u540c\u6837\u6ee1\u8db3\u4e3b\u65b9\u6cd5\u7684 \u60c5\u51b5\u4e09 (Case 3) \u7684\u7b2c\u4e00\u4e2a\u6761\u4ef6\u3002</li> <li>\u6211\u4eec\u518d\u68c0\u67e5\u6b63\u5219\u6761\u4ef6\uff1a\\(a f(n/b) \\leq c f(n)\\) \u662f\u5426\u5bf9\u67d0\u4e2a \\(c &lt; 1\\) \u6210\u7acb\u3002<ul> <li>\\(2 \\cdot f(n/4) \\leq c \\cdot n^2\\)</li> <li>\\(2 \\cdot (n/4)^2 \\leq c \\cdot n^2\\)</li> <li>\\(2 \\cdot (n^2/16) \\leq c \\cdot n^2\\)</li> <li>\\(n^2/8 \\leq c \\cdot n^2\\)</li> <li>\\(1/8 \\leq c\\)</li> </ul> </li> <li>\u6211\u4eec\u53ef\u4ee5\u9009\u62e9 \\(c = 1/8\\)\uff08\u6216 \\(0.5, 0.9\\) \u7b49\uff09\uff0c\u8fd9\u6ee1\u8db3 \\(1/8 \\leq c &lt; 1\\)\u3002\u6240\u4ee5\u6b63\u5219\u6761\u4ef6\u4e5f\u6210\u7acb\u3002</li> <li> <p>\u7ed3\u8bba\uff1a</p> </li> <li> <p>\u603b\u6210\u672c\u7531 \\(f(n)\\) \u51b3\u5b9a\u3002</p> </li> <li> \\[      T(n) = \\Theta(f(n)) = \\Theta(n^2)      \\] </li> </ol> <p>.</p>"},{"location":"algorithms/2_recurrence/#5-akra-bazzi-method","title":"5. Akra-Bazzi Method","text":"<p>\u4e3b\u65b9\u6cd5\u7684\u4e3b\u8981\u9650\u5236\u662f\uff0c\u5b83\u8981\u6c42\u6240\u6709\u5b50\u95ee\u9898\u7684\u89c4\u6a21\u90fd\u662f\u76f8\u7b49\u7684\uff0c\u5373\u90fd\u662f <code>n/b</code>\u3002Akra-Bazzi \u65b9\u6cd5\u653e\u5bbd\u4e86\u8fd9\u4e00\u9650\u5236\uff0c\u5b83\u53ef\u4ee5\u5904\u7406\u591a\u4e2a\u89c4\u6a21\u4e0d\u540c\u7684\u5b50\u95ee\u9898\u3002\u6bd4\u5982\u4e0b\u9762\u8fd9\u79cd\u5f62\u5f0f\uff1a</p> \\[ T(n) = \\sum_{i=1}^{k} a_i \\, T\\!\\left(\\tfrac{n}{b_i}\\right) + f(n) \\] <p>\u8be5\u65b9\u6cd5\u4e5f\u79f0\u4e3a\u5e7f\u4e49\u9012\u5f52\u5f0f\uff0c\u5373Master Theorem\u7684\u6269\u5c55\u5f62\u5f0f\u3002\u611f\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u9605\u8bfb\u4e66\u4e0a\u76f8\u5173\u90e8\u5206\uff0c\u6211\u7684\u7b14\u8bb0\u53ea\u8bb0\u5f55\u6700\u91cd\u8981\u548c\u6838\u5fc3\u7684\u5185\u5bb9\uff0c\u5bf9\u4e8e\u9ad8\u7ea7\u7528\u6cd5\uff0c\u53ea\u4f5c\u63d0\u53ca\uff0c\u5c31\u4e0d\u5c55\u5f00\u8bb2\u4e86\u3002</p>"},{"location":"algorithms/3_ranndomized_algorithms/","title":"Randomized Algorithms","text":"<p>\u8fd9\u90e8\u5206\u5185\u5bb9\u4e0d\u5728\u8bfe\u7a0b\u8303\u56f4\u5185\uff0c\u5148mark\u4e00\u4e0b\u3002\u968f\u673a\u5316\u601d\u60f3\u5f88\u6709\u610f\u601d\uff0c\u5728\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7b49\u5185\u5bb9\u4e2d\u4e5f\u6709\u6d89\u53ca\uff0c\u6709\u7a7a\u7684\u8bdd\u8fd9\u91cc\u4e5f\u770b\u770b\u3002</p>"},{"location":"algorithms/4_sort/","title":"\u6392\u5e8f\u7b97\u6cd5","text":""},{"location":"algorithms/4_sort/#insertion-sort","title":"Insertion sort","text":"<p>\u8fd9\u4e2a\u90e8\u5206\u662fCLRS2.1\uff0c\u5f15\u8a00\u90e8\u5206\u5f15\u5165\u7684\uff0c\u8fd9\u91cc\u91cd\u65b0\u56de\u987e\u4e00\u4e0b</p>"},{"location":"algorithms/4_sort/#heapsort","title":"Heapsort","text":"<p>CLRS 6.1 - 6.5</p>"},{"location":"algorithms/4_sort/#heaps","title":"Heaps","text":"<p>CLRS 6.1 - 6.2</p>"},{"location":"algorithms/4_sort/#build-a-heap","title":"Build a heap","text":"<p>...CLRS 6.3</p>"},{"location":"algorithms/4_sort/#heapsort_1","title":"Heapsort","text":"<p>...CLRS 6.4</p>"},{"location":"algorithms/4_sort/#priority-queues","title":"Priority queues","text":"<p>... CLRS 6.5</p>"},{"location":"algorithms/4_sort/#quicksort","title":"Quicksort","text":""},{"location":"algorithms/4_sort/#quicksort_1","title":"Quicksort","text":"<p>...CLRS 7.1</p>"},{"location":"algorithms/4_sort/#performance","title":"Performance","text":"<p>...CLRS 7.2</p>"},{"location":"algorithms/4_sort/#improvement","title":"Improvement","text":"<p>CLRS 7.3-7.4 \u8fd9\u90e8\u5206midterm\u540e\u8bb2\uff0c\u5148\u7559\u7a7a</p>"},{"location":"algorithms/4_sort/#sorting-in-linear-time","title":"Sorting in Linear Time","text":""},{"location":"algorithms/4_sort/#lower-bounds-for-sorting","title":"Lower bounds for sorting","text":"<p>CLRS 8.1</p>"},{"location":"algorithms/4_sort/#couting-sort","title":"Couting sort","text":"<p>CLRS 8.2</p>"},{"location":"algorithms/4_sort/#radix-sort","title":"Radix sort","text":"<p>CLRS 8.3</p>"},{"location":"algorithms/4_sort/#bucket-sort","title":"Bucket sort","text":"<p>CLRS 8.4</p>"},{"location":"algorithms/5_order_statistics/","title":"\u987a\u5e8f\u7edf\u8ba1\u91cf","text":"<p>CLRS 9.1 - 9.3</p>"},{"location":"algorithms/CS160%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3/","title":"CS160\u8bfe\u7a0b\u76f8\u5173","text":""},{"location":"algorithms/CS160%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3/#cs160","title":"CS160\u8bfe\u7a0b\u7279\u522b\u680f\u76ee\uff08\u4e34\u65f6\uff09","text":""},{"location":"algorithms/CS160%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3/#_1","title":"\u5f97\u5206\u4e0e\u8003\u8bd5","text":"<p>Final Grade:</p> <ul> <li><code>25% Homework + 5% Participation + 20% Midterm1 + 20% Midterm2 + 30% Final</code></li> <li><code>25% Homework + 5% Participation + 15% Midterm1 + 15% Midterm2 + 40% Final</code></li> </ul> <p>Exams:</p> <ul> <li>Midterm1</li> <li>Midterm2</li> <li>Final</li> </ul> <p>\u540c\u6837\u7684\uff0c\u7981\u6b62\u4f7f\u7528AI\u5de5\u5177\uff0c\u4f1a\u88ab\u89c6\u4e3a\u4f5c\u5f0a\u3002</p>"},{"location":"algorithms/CS160%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3/#_2","title":"\u4f5c\u4e1a\u8981\u6c42","text":"<p>\u5305\u542b\uff1a</p> <ul> <li>Description</li> <li>Justification</li> <li>Time analysis</li> <li>Space analysis</li> </ul> <p>\u5e73\u65f6\u6574\u7406\u7b14\u8bb0\u7684\u65f6\u5019\u53ef\u4ee5\u5199pseudocode\uff0c\u4f46\u662f\u8fd9\u95e8\u8bfe\u7684\u4f5c\u4e1a\u4e2d\u4e0d\u9700\u8981\u7ed9\u51fapseudocode</p>"},{"location":"algorithms/CS160%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3/#_3","title":"\u672c\u95e8\u8bfe\u7a0b\u7684\u8bc1\u660e\u8981\u6c42","text":"<p>\u53c2\u89c1\u6587\u4ef6 How to write proofs\uff0c\u6709\u65f6\u95f4\u6574\u7406\u4e00\u4e0b\uff0c\u5199\u5728\u8fd9\u91cc\uff0c\u7528\u4e8e\u63d0\u4ea4\u4f5c\u4e1a\u548c\u8003\u8bd5\u3002</p>"},{"location":"algorithms/CS160%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3/#_4","title":"\u5173\u4e8e\u672c\u7b14\u8bb0","text":"<p>\u672c\u7b14\u8bb0\u5728\u8fd9\u5b66\u671f\u6682\u65f6\u7528\u4e8e\u8bfe\u7a0b\u5b66\u4e60\uff0c\u8bfe\u7a0b\u7ed3\u675f\u540e\u5c06\u5220\u9664\u5173\u4e8e\u8bfe\u7a0b\u7684\u5185\u5bb9\uff0c\u800c\u4ec5\u4fdd\u7559\u7b97\u6cd5\u77e5\u8bc6\u3002</p> <p>\u672c\u7b14\u8bb0\u7684\u76ee\u7684\u4e0d\u4ec5\u4ec5\u662f\u5b8c\u6210\u4e0a\u9762\u8fd9\u95e8\u8bfe\uff0c\u800c\u662f\u8981\u501f\u6b64\u673a\u4f1a\u6574\u7406\u5173\u4e8e\u7b97\u6cd5\u7684\u601d\u60f3\u548c\u7b14\u8bb0\u3002</p> <p>\u4ee5\u4e0b\u662f\u5206\u5272\u7ebf\uff0c\u5206\u5272\u7ebf\u4e0b\u65b9\u662f\u4e00\u822c\u6027\u5185\u5bb9\uff0c\u5206\u5272\u7ebf\u4e0a\u65b9\u7684\u90e8\u5206\u662f\u5173\u4e8e\u8fd9\u95e8\u8bfe\u7684\u7279\u522b\u90e8\u5206\u3002</p>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/homework1/","title":"Homework1","text":"<p>\u7b2c\u4e00\u6b21\u4f5c\u4e1a\u7684\u76f8\u5173\u5185\u5bb9\u6574\u7406\u5728\u8fd9\u91cc\uff0c\u4ee5\u4f9b\u540e\u7eed\u590d\u4e60\u4f7f\u7528\u3002</p>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/homework1/#problem-0","title":"Problem 0","text":"<p>The resources I use when I solve the homework problems:</p> <ul> <li>CS160's slides and recitation resources</li> <li>geeksforgeeks.org: Properties of Asymptotic Notations</li> <li>L'H\u00f4pital's rule (Wikipedia)</li> </ul>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/homework1/#problem-1","title":"Problem 1","text":"<p>(a) Abstract Proofs</p> <p>i. If f = O(g) then g = O(f)</p> <p>The statement is false.</p> <p>Proof:</p> <p>For this  statement, we can find a counterexample, and if f = O(g) is true but g = O(f) is false, then the statement can be proved false.</p> <p>Let f  = n, g = n^2</p> <p>By the definition of Big O, choose c = 1, n0 = 1, then:</p> <p>n &lt; n^2, for all n &gt;= 1.</p> <p>So f = O(g) is true.</p> <p>By the definition of Big O, if g = O(f) is true, then there must has c and n0 fits:</p> <p>n^2 &lt; c * n,  for n &gt;= n0</p> <p>since we are analyzing growth, n0 is at least 1, and n should be a positive number. so we can multiply by n, for  each side, and get:</p> <p>n &lt; c, for n &gt;= n0</p> <p>since c is a constant, and n is growing to infinite, no matter how large is the constant c, the n will sometime greater than c. therefore, g = O(f) is false.</p> <p>In conclusion, we have found a counterexample where <code>f = n</code> and <code>g = n\u00b2</code>. This counterexample satisfies the premise <code>f = O(g)</code> but fails to satisfy the conclusion <code>g = O(f)</code>. Therefore, the original statement is false.</p>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/proof_of_bigO/","title":"proof of bigO","text":"<p>\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u6587\u4ef6\uff0c\u6211\u89c9\u5f97\u9700\u8981\u638c\u63e1\u4e00\u4e0b\u3002\u6574\u7406\u5728\u8fd9\u91cc\u3002mid1\u4e4b\u524d\u6574\u7406\u597d\u5c31\u884c\u4e86\uff0c\u5148\u4e0d\u7740\u6025\u3002</p>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/recitation1/","title":"Recitation1","text":""},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/","title":"CS160 \u8bc1\u660e\u5199\u4f5c\u901f\u8bb0\uff08Algorithms\uff09","text":""},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#_1","title":"\u4e00\u3001\u4ec0\u4e48\u662f\u201c\u597d\u8bc1\u660e\u201d","text":"<ul> <li>\u6b63\u786e\uff08\u903b\u8f91\u4e0e\u7ed3\u8bba\u65e0\u8bef\uff09</li> <li>\u6b65\u6b65\u76f8\u627f\uff08\u6bcf\u53e5\u90fd\u6e05\u695a\u5730\u7531\u4e0a\u4e00\u6b65\u63a8\u51fa\uff09</li> <li>\u6613\u8bfb\uff08\u7ed3\u6784\u6e05\u6670\u3001\u8bed\u8a00\u7b80\u6d01\uff09</li> <li>\u4e0a\u8ff0\u662f\u5fc5\u8981\u4f46\u975e\u5145\u5206\u6761\u4ef6\uff1a\u5386\u53f2\u4e0a\u4e5f\u6709\u88ab\u591a\u4eba\u8ba4\u53ef\u5374\u540e\u6765\u88ab\u63a8\u7ffb\u7684\u201c\u8bc1\u660e\u201d\uff08\u5982\u56db\u8272\u5b9a\u7406\u65e9\u671f\u8bc1\u660e\uff09\u3002\u56e0\u6b64\u8981\u4fdd\u6301\u4e25\u8c28\u4e0e\u8c26\u900a\u3002</li> </ul>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#_2","title":"\u4e8c\u3001\u901a\u7528\u5199\u4f5c\u539f\u5219","text":"<ol> <li>\u5148\u8bf4\u6e05\u8981\u8bc1\u4ec0\u4e48</li> <li>\u9898\u76ee\u82e5\u8bf4\u201c\u8bc1\u660e X\u201d\uff0c\u53ef\u5199\uff1aClaim: X\u3002</li> <li>\u957f\u547d\u9898\u53ef\u5148\u6458\u8981/\u6539\u5199\u3002</li> <li>\u5f00\u653e\u9898\u5148\u7ed9\u7ed3\u8bba/\u601d\u8def\u603b\u89c8\uff08punchline\uff09\u3002</li> <li>\u518d\u8bf4\u6e05\u600e\u4e48\u8bc1</li> <li>\u5148\u4ea4\u4ee3\u65b9\u6cd5\uff1a\u5982\u201c\u5bf9 \\(k\\) \u5f52\u7eb3\u201d\u201c\u7528\u5bf9\u6570\u6027\u8d28\u201d\u201c\u671f\u671b\u7ebf\u6027\u6027\u201d\u7b49\uff0c\u518d\u8fdb\u5165\u63a8\u5bfc\u3002</li> <li>\u660e\u786e\u8bfb\u8005\u753b\u50cf</li> <li>\u9762\u5411\u6301\u6000\u7591\u6001\u5ea6\u7684\u540c\u5b66\uff0c\u800c\u975e\u5df2\u7ecf\u77e5\u9053\u7b54\u6848\u7684\u52a9\u6559/\u8001\u5e08\u3002</li> <li>\u9010\u884c\u5f15\u5bfc</li> <li>\u8bf4\u660e\u6bcf\u4e00\u6b65\u7528\u5230\u7684\u5b9a\u7406/\u6027\u8d28\uff1b\u53ea\u6709\u975e\u5e38\u663e\u7136\u7684\u79fb\u9879\u53ef\u7701\u7565\u3002</li> <li>\u907f\u514d\u5927\u6bb5\u6587\u5b57\u5899</li> <li>\u7528\u5c0f\u6bb5\u843d\u3001\u7f16\u53f7\u3001\u5217\u8868\uff0c\u907f\u514d\u91cd\u590d\u8868\u8ff0\uff1b\u6210\u7a3f\u540e\u901a\u8bfb\u538b\u7f29\u3002</li> <li>\u4ece\u5934\u5f80\u524d\u63a8</li> <li>\u8bc1\u660e\u4ee5\u76ee\u6807\u4f5c\u4e3a\u7ec8\u70b9\uff0c\u4e0d\u8981\u4ece\u7ed3\u8bba\u5012\u63a8\uff08\u53ef\u5148\u58f0\u660e\u76ee\u6807\uff0c\u4f46\u63a8\u5bfc\u6309\u6b63\u5411\u5c55\u5f00\uff09\u3002</li> <li>\u5199\u5b8c\u540e\u590d\u5ba1</li> <li>\u9694\u4e00\u6bb5\u65f6\u95f4\u518d\u770b\uff1a\u662f\u5426\u5fc5\u8981\u3001\u662f\u5426\u9700\u8865\u6765\u6e90\u3001\u662f\u5426\u53ef\u66f4\u7b80\u6d01\u3002</li> </ol>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#_3","title":"\u4e09\u3001\u4f8b\u5b50\uff1a\u597d\u4e0e\u4e0d\u597d\u7684\u5bf9\u6bd4\uff08\u8981\u70b9\uff09","text":"<ul> <li>\u5dee\uff1a\u53ea\u6709\u7b97\u5f0f\u3001\u6ca1\u53e5\u5b50\uff1b\u4e0d\u4ea4\u4ee3\u9898\u76ee/\u5047\u8bbe/\u7ed3\u8bba\uff1b\u903b\u8f91\u65ad\u88c2\u3002</li> <li>\u597d\uff1a\u5148\u7ed9\u7b54\u6848\u4e0e\u7b56\u7565\uff1b\u7b49\u5f0f\u5d4c\u5165\u5b8c\u6574\u53e5\u5b50\uff1b\u7a81\u51fa\u5173\u952e\u5f0f\uff1b\u7701\u7565\u5fae\u4e0d\u8db3\u9053\u7684\u4ee3\u6570\u6b65\u9aa4\u3002</li> </ul>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#cs160","title":"\u56db\u3001CS160 \u5e38\u89c1\u8bc1\u660e/\u5199\u4f5c\u573a\u666f","text":""},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#1-o","title":"1\uff09\u201c\u6309\u6469\u7b49\u5f0f/\u4e0d\u7b49\u5f0f\u201d\uff08\u5982\u5927 O \u8bc1\u660e\uff09","text":"<ul> <li>\u76ee\u6807\uff1a\u628a\u539f\u5f0f\u7b49\u4ef7\u53d8\u5f62\u6216\u4e0a\u754c\u5316\u5230\u76ee\u6807\u8868\u8fbe\u5f0f\u3002</li> <li>\u9010\u6b65\u3001\u9010\u884c\u7ed9\u7406\u7531\uff08\u5982\u201c\u56e0 \\(n&gt;0\\)\uff0c\u6709 \\(7n^3 \\le 7n^4\\)\u201d\uff09\u3002</li> <li>\u7ed3\u5c3e\u56de\u6263\u5b9a\u4e49\uff08\u5982\uff1a\u5b58\u5728 \\(c,n_0\\) \u4f7f\u2026\uff0c\u6545\u4e3a \\(O(n^4)\\)\uff09\uff0c\u5e76\u53ef\u7528\u201c\u25a0/\u25a1 (QED)\u201d\u6807\u8bb0\u6536\u675f\u3002</li> </ul> <p>\u8ff7\u4f60\u6a21\u677f\uff08Big-O\uff09</p> <pre><code>Claim. f(n) = \u2026 = O(g(n)).\nProof. \u53d6\u5e38\u6570 c, n0\u3002\u5f53 n \u2265 n0 \u65f6\uff0c\n    f(n) \u2264 \u2026 \u2264 c \u00b7 g(n).\n\u6545\u6309\u5927 O \u5b9a\u4e49\uff0c\u7ed3\u8bba\u6210\u7acb\u3002\u25a1\n</code></pre>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#2","title":"2\uff09\u201c\u8bbe\u8ba1\u7b97\u6cd5\u7c7b\u201d\u9898","text":"<p>\u63a8\u8350\u4e09\u6bb5\u5f0f\u7ed3\u6784</p> <ul> <li>Algorithm\uff08\u7b97\u6cd5\uff09\uff1a\u7528\u81ea\u7136\u8bed\u8a00\u7ed9\u53ef\u6267\u884c\u6b65\u9aa4\uff08\u80fd\u4f5c\u7528\u4e8e\u4efb\u610f\u8f93\u5165\uff09\uff1b\u5faa\u73af\u8981\u5199\u4e00\u822c\u4e00\u6b65\u600e\u4e48\u505a\uff1b\u5982\u57fa\u4e8e\u8bfe\u5802\u7b97\u6cd5\uff0c\u53ea\u5199\u4fee\u6539\u70b9\u3002</li> <li>Justification\uff08\u6b63\u786e\u6027\uff09\uff1a\u8bf4\u660e\u4e3a\u4f55\u5bf9\u6240\u6709\u8f93\u5165\u90fd\u6210\u7acb\uff1b\u5fc5\u8981\u65f6\u7ed9\u4e0d\u53d8\u5f0f/\u5f52\u7eb3\u7b49\u3002</li> <li>Time &amp; Space\uff08\u590d\u6742\u5ea6\uff09\uff1a\u7ed9\u51fa\u5c3d\u91cf\u7d27\u7684\u754c\u5e76\u7b80\u8bc1\u3002</li> </ul> <p>\u793a\u4f8b\uff08\u5582\u9f99\u4e0e\u4e09\u660e\u6cbb\uff09</p> <ul> <li>\u7b97\u6cd5\uff1a\u9f99\u6309\u4f53\u578b\u964d\u5e8f\u3001\u4e09\u660e\u6cbb\u6309\u5927\u5c0f\u964d\u5e8f\uff0c\u5404\u81ea\u6392\u5e8f\u540e\u914d\u5bf9\u540c\u4f4d\u6b21\u3002</li> <li>\u6b63\u786e\u6027\uff1a\u82e5 \\(d_i&gt;d_j\\) \u5219 \\(s_i\\ge s_j\\)\uff0c\u65e0\u5ac9\u5992\u3002</li> <li>\u590d\u6742\u5ea6\uff1a\u6392\u5e8f \\(\\Theta(k\\log k)\\)\uff0c\u914d\u5bf9 \\(\\Theta(k)\\)\uff0c\u603b \\(\\Theta(k\\log k)\\)\uff1b\u7a7a\u95f4 \\(\\Theta(k)\\)\u3002</li> </ul> <p>\u4e09\u6bb5\u5f0f\u8ff7\u4f60\u6a21\u677f</p> <pre><code>Algorithm. \u2026\u2026\nJustification. \u8bbe\u4e0d\u53d8\u5f0f/\u6392\u5e8f\u5173\u7cfb/\u5f52\u7eb3\u6b65\uff1a\u2026\u2026\u56e0\u6b64\u5bf9\u4efb\u610f\u8f93\u5165\u6210\u7acb\u3002\nTime &amp; Space. \u6392\u5e8f/\u6570\u636e\u7ed3\u6784/\u626b\u63cf\u5206\u522b\u8017\u65f6\u2026\u2026\uff0c\u603b\u4e3a\u2026\u2026\uff1b\u7a7a\u95f4\u4e3a\u2026\u2026\u3002\u25a1\n</code></pre>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#3auxiliary-lemma","title":"3\uff09\u201c\u8f85\u52a9\u5f15\u7406\u201d\uff08Auxiliary Lemma\uff09","text":"<ul> <li>\u628a\u5927\u95ee\u9898\u62c6\u6210\u5173\u952e\u5b50\u7ed3\u8bba\uff08\u5f15\u7406\uff09\uff0c\u5148\u8bc1\u660e\u518d\u56de\u4ee3\u4e3b\u547d\u9898\u3002</li> <li>\u4f8b\uff1a\u4e8c\u5206\u67e5\u627e\u7684\u5f15\u7406\u2014\u2014\u201c\u6bcf\u4e00\u6b65\u81f3\u5c11\u6392\u9664\u4e00\u534a\u5143\u7d20\u201d\u3002   \u7528\u6b64\u5f15\u7406\u5373\u53ef\u5728\u4e3b\u8bc1\u660e\u4e2d\u63a8\u51fa\u5bf9\u6570\u7ea7\u6b65\u6570\u4e0e\u65f6\u95f4\u3002</li> </ul> <p>\u5f15\u7406\u6a21\u677f</p> <pre><code>Lemma. \u2026\u2026\nProof. \u5206\u60c5\u51b5/\u6784\u9020/\u4e0d\u53d8\u5f0f/\u5f52\u7eb3\uff1a\u2026\u2026 \u25a1\nUse of Lemma. \u7531\u5f15\u7406\u5f97\u6bcf\u6b65\u89c4\u6a21\u51cf\u534a\uff0c\u6545\u603b\u6b65\u6570 \u2264 \u2308log\u2082 n\u2309\uff0c\u65f6\u95f4 O(log n)\u3002\u25a1\n</code></pre>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#_4","title":"\u4e94\u3001\u5e38\u89c1\u9519\u8bef\u4e0e\u6539\u8fdb","text":"<p>1) \u4ec5\u5f15\u7528\u8bfe\u5916\u795e\u5668</p> <ul> <li>\u4f8b\uff1a\u53ea\u8bf4\u201c\u7528 BFPRT\uff08\u7ebf\u6027\u65f6\u95f4\u9009\u62e9\uff09\u201d\uff0c\u4e0d\u7ed9\u6539\u52a8\u70b9\u4e0e\u6b63\u786e\u6027/\u590d\u6742\u5ea6\u8bf4\u660e\u3002</li> <li>\u6539\uff1a\u4f18\u5148\u7528\u8bfe\u5185\u5de5\u5177\uff1b\u82e5\u7528\u8bfe\u5916\u6cd5\uff0c\u9700\u8bb2\u9002\u7528\u6761\u4ef6\u3001\u5982\u4f55\u8d34\u5408\u9898\u610f\u3001\u4e3a\u4f55\u6b63\u786e\u3002</li> </ul> <p>2) \u8fc7\u5ea6\u4f2a\u4ee3\u7801</p> <ul> <li>\u8fd9\u95e8\u8bfe\u91cd\u7b97\u6cd5\u7406\u89e3\u4e0e\u8868\u8fbe\uff0c\u4f2a\u4ee3\u7801\u53ea\u80fd\u8f85\u52a9\uff1b\u4e0d\u8981\u8ba9\u8bfb\u8005\u53bb\u8c03\u8bd5\u8d8a\u754c/\u91cd\u590d\u503c\u7b49\u7ec6\u8282\u3002</li> </ul> <p>3) \u8bf4\u4e86\u592a\u591a\u65e0\u5173\u7ec6\u8282</p> <ul> <li>\u53ea\u5199\u76f8\u5bf9\u8bfe\u5802\u7b97\u6cd5\u7684\u6539\u52a8\u4e0e\u5173\u952e\u8bba\u8bc1\uff0c\u628a\u6ce8\u610f\u529b\u653e\u5728\u201c\u4e3a\u4f55\u80fd\u89e3\u9898\u201d\u3002</li> </ul> <p>4) \u6392\u5e8f\u89e3\u7b2c k \u5927\uff08\u826f\u597d\u8303\u4f8b\uff09</p> <ul> <li>\u7b97\u6cd5\uff1a\u5bf9\u6570\u7ec4\u505a MergeSort\uff0c\u8fd4\u56de\u7b2c \\(n-k+1\\) \u4e2a\uff081-index\uff09\u3002</li> <li>\u6b63\u786e\u6027\uff1a\u6392\u5e8f\u540e\u7b2c \\(i\\) \u4f4d\u5373\u7b2c \\(i\\) \u5c0f\uff1b\u7b2c \\(n-k+1\\) \u5c0f\u5373\u7b2c \\(k\\) \u5927\u3002</li> <li>\u590d\u6742\u5ea6\uff1a\u65f6\u95f4 \\(O(n\\log n))\\)\uff0c\u7a7a\u95f4 \\(O(n))\\)\u3002</li> </ul>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#_5","title":"\u516d\u3001\u8bfe\u7a0b\u5e38\u7528\u89c4\u5219\uff08\u7b54\u9898\u4e60\u60ef\uff09","text":"<ul> <li>\u5fc5\u987b\u7ed9\u51fa\u7406\u7531\uff08\u5373\u4f7f\u7ed3\u8bba\u9519\uff0c\u6709\u7406\u6709\u636e\u4e5f\u6bd4\u65e0\u7406\u7531\u597d\uff09\u3002</li> <li>\u5173\u5fc3\u6e10\u8fdb\u91cf\u7ea7\uff1a\\(42n+15\\) \u4e0e \\(\\Theta(n)\\) \u5728\u672c\u8bfe\u540c\u6837\u53ef\u63a5\u53d7\uff08\u540c\u7b49\u8bba\u8bc1\u4e0b\uff09\u3002</li> <li>\u591a\u89e3\u62e9\u4f18\uff1a\u590d\u6742\u5ea6\u66f4\u4f18\u8005\u66f4\u53d7\u6b22\u8fce\uff08\u9700\u7ed9\u51fa\u5e76\u8bc1\u660e\u590d\u6742\u5ea6\uff09\u3002</li> <li>\u7ed9\u51fa\u901a\u7528\u7b97\u6cd5\uff1a\u5373\u4fbf\u9898\u76ee\u7528\u5177\u4f53\u4f8b\u5b50\u63cf\u8ff0\u3002</li> <li>\u8868\u8fbe\u5c42\u6b21\u504f\u597d\uff1a\u7ed3\u6784\u5316\u8bc1\u660e &gt; \u8981\u70b9\u5217\u8868 &gt; \u4f2a\u4ee3\u7801 &gt; \u6587\u5b57\u5899\u3002</li> <li>\u7528\u8bfe\u5185\u5de5\u5177\u53ef\u89e3\uff1a\u82e5\u7528\u8bfe\u5916\u5de5\u5177\uff0c\u6b65\u9aa4\uff08\u6b63\u786e\u6027\u3001\u590d\u6742\u5ea6\u7b49\uff09\u4e0d\u53ef\u7701\u3002</li> </ul>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#_6","title":"\u4e03\u3001\u53ef\u76f4\u63a5\u5957\u7528\u7684\u53e5\u5f0f","text":"<ul> <li>\u5f00\u9898\uff1aClaim. / We aim to show that \u2026</li> <li>\u65b9\u6cd5\u4ea4\u4ee3\uff1aWe prove this by induction on \u2026 / by contradiction / by constructing \u2026</li> <li>\u9010\u6b65\u7406\u7531\uff1aBy monotonicity \u2026 / Using linearity of expectation \u2026 / Since \\(n\\ge n_0\\) \u2026</li> <li>\u5f15\u7406\uff1aWe first establish the following lemma \u2026</li> <li>\u6536\u675f\uff1aTherefore, by definition of Big-O / by the invariant, the algorithm is correct. \u25a1</li> </ul>"},{"location":"algorithms/%E8%AF%BE%E7%A8%8B%E4%B9%A0%E9%A2%98%E9%9B%86%E9%94%A6/%E5%A6%82%E4%BD%95%E5%86%99%E8%AF%81%E6%98%8E%EF%BC%88%E8%AF%BE%E7%A8%8B%E8%A6%81%E6%B1%82%EF%BC%89/#quick-check","title":"\u516b\u3001\u63d0\u4ea4\u524d\u81ea\u68c0\u6e05\u5355\uff08Quick Check\uff09","text":"<ul> <li>[ ] \u5148\u8bb2\u6e05\u8981\u8bc1\u4ec0\u4e48\u4e0e\u600e\u4e48\u8bc1</li> <li>[ ] \u6bcf\u6b65\u90fd\u6709\u4f9d\u636e/\u7406\u7531</li> <li>[ ] \u7ed3\u6784\u6e05\u6670\uff1a\u5c0f\u8282/\u7f16\u53f7/\u5217\u8868</li> <li>[ ] \u4e0d\u5fc5\u8981\u7684\u4ee3\u6570\u7ec6\u8282\u5df2\u7701\u7565</li> <li>[ ] \u7b97\u6cd5\u9898\u6309\u7b97\u6cd5/\u6b63\u786e\u6027/\u590d\u6742\u5ea6\u4e09\u6bb5\u5199\u6e05</li> <li>[ ] \u5f15\u7406\u662f\u5426\u80fd\u660e\u663e\u51cf\u8d1f\u4e14\u5df2\u88ab\u8c03\u7528</li> <li>[ ] \u7ed3\u5c3e\u56de\u6263\u5b9a\u4e49/\u547d\u9898\u5e76\u6807\u8bb0\u6536\u675f\uff08\u25a1\uff09</li> </ul>"},{"location":"computational_theory/ch0_intro/","title":"\u8ba1\u7b97\u7406\u8bba\u7eea\u8bba","text":""},{"location":"computational_theory/ch0_intro/#_2","title":"\u4e3b\u9898\u4ecb\u7ecd","text":"<p>\u8ba1\u7b97\u7406\u8bba\u7684\u91cd\u70b9\u6709\u4e09\u4e2a\uff1a</p> <ul> <li>Automata \u81ea\u52a8\u673a</li> <li>Computability \u53ef\u8ba1\u7b97\u6027</li> <li>Complexity \u590d\u6742\u6027</li> </ul> <p>\u672c\u4e66\u7684\u5185\u5bb9\u5c06\u5e26\u9886\u6211\u4eec\u4e86\u89e3\u8fd9\u4e48\u4e00\u4e2a\u6839\u672c\u6027\u7684\u95ee\u9898\uff1a\u8ba1\u7b97\u673a\u7684\u57fa\u672c\u80fd\u529b\u548c\u5c40\u9650\u6027\u662f\u4ec0\u4e48\uff1fWhat are the fundamental capabilities and limitations of computers?</p> <p>\u81ea\u52a8\u673a\u7406\u8bba\uff1a\u9610\u8ff0\u4e86\u8ba1\u7b97\u7684\u6570\u5b66\u6a21\u578b\u7684\u5b9a\u4e49\u548c\u6027\u8d28\u3002\u4e00\u4e2a\u6a21\u578b\u662f\u6709\u7a77\u81ea\u52a8\u673a Finite Automaton\uff0c\u7528\u4e8e\u6587\u672c\u5904\u7406\u3001\u7f16\u8bd1\u7a0b\u5e8f\u4ee5\u53ca\u786c\u4ef6\u8bbe\u8ba1\uff1b\u53e6\u4e00\u4e2a\u6a21\u578b\u662f\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u6a21\u578b Context-Free Grammar\uff0c\u7528\u5728\u4eba\u5de5\u667a\u80fd\u548c\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\u3002</p> <p>\u53ef\u8ba1\u7b97\u6027\u7406\u8bba\uff1a\u5c06\u4e00\u4e2a\u95ee\u9898\u62c6\u5206\u6210\u53ef\u4ee5\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u7684\uff0c\u548c\u4e0d\u53ef\u4ee5\u7528\u8ba1\u7b97\u673a\u89e3\u51b3\u7684\u3002</p> <p>\u8ba1\u7b97\u590d\u6742\u6027\u7406\u8bba\u7684\u6838\u5fc3\u95ee\u9898\uff1a\u662f\u4ec0\u4e48\u4f7f\u5f97\u67d0\u4e9b\u95ee\u9898\u5f88\u96be\u8ba1\u7b97\uff0c\u800c\u53e6\u4e00\u4e9b\u95ee\u9898\u53c8\u5f88\u5bb9\u6613\u8ba1\u7b97\uff1fComplexity\u6700\u91cd\u8981\u7684\u5e94\u7528\u662f\u5bc6\u7801\u5b66Cryptography\uff0c\u5b83\u7684\u6838\u5fc3\u76ee\u7684\u662f\u5bfb\u627e\u96be\u8ba1\u7b97\u7684\u95ee\u9898\u3002</p>"},{"location":"computational_theory/ch0_intro/#_3","title":"\u6570\u5b66\u5de5\u5177","text":"<p>\u8ba1\u7b97\u7406\u8bba\u4e2d\u6700\u5e38\u7528\u7684\u6570\u5b66\u5de5\u5177\u5305\u62ec\uff1a</p> <ul> <li>Set \u96c6\u5408</li> <li>Union, Intersection, Complement\uff08\u5e76\u3001\u4ea4\u3001\u8865\uff09</li> <li>Sequence \u5e8f\u5217</li> <li>Tuple \u5143\u7ec4</li> <li>Cartesian Product \u7b1b\u5361\u5c14\u79ef\uff08Cross Product \u53c9\u79ef\uff09</li> <li>Function \u51fd\u6570</li> <li>Mapping \u6620\u5c04</li> <li>Graph \u56fe</li> <li>Undirected Graph, Directed Graph \uff08\u65e0\u5411\u56fe\u3001\u6709\u5411\u56fe\uff09</li> <li>String, Lexicographic Order\uff08\u5b57\u7b26\u4e32\uff0c\u5b57\u5178\u5e8f\uff09</li> </ul> <p>Boolean Logic \u5e03\u5c14\u903b\u8f91\uff1a</p> <ul> <li>AND \u2227</li> <li>OR \u2228</li> <li>NOT \u00ac</li> <li>Exclusive OR \u2295 \uff08\u53ea\u67091\u22950\u4e3a0\uff09</li> <li>Equality \u2194</li> <li>Implication \u2192 \uff08\u53ea\u67091\u21920\u4e3a0\uff09</li> </ul> <p>\u5b9a\u4e49\u3001\u5b9a\u7406\u548c\u8bc1\u660e\uff1a</p> <ul> <li>Defination \u5b9a\u4e49</li> <li>Mathematical Statement \u6570\u5b66\u547d\u9898</li> <li>Proof \u8bc1\u660e</li> <li>Theorem \u5b9a\u7406</li> <li>Lemma \u5f15\u7406</li> <li>Corollary \u63a8\u8bba</li> <li>Counterexample \u53cd\u4f8b</li> </ul> <p>\u547d\u9898\u8bb0\u53f7\uff1a</p> <ul> <li>\u27fa iff, if and only if</li> <li>for P\u27faQ:</li> <li>forward direction: P\u27f9Q</li> <li>reverse direction: Q\u27f9P</li> </ul> <p>\u8bc1\u660e\u7684\u7c7b\u578b</p> <ul> <li>Proof by Construction \u6784\u9020\u6027\u8bc1\u660e</li> <li>Proof by Contradiction \u53cd\u8bc1\u6cd5</li> <li>Proof by Induction \u5f52\u7eb3\u6cd5</li> <li>Basis \u5f52\u7eb3\u57fa\u7840</li> <li>Induction Step \u5f52\u7eb3\u6b65\u9aa4</li> </ul>"},{"location":"computational_theory/ch0_intro/#_4","title":"\u8bfe\u7a0b\u89c4\u8303\u8bc1\u660e\u793a\u4f8b","text":""},{"location":"computational_theory/ch0_intro/#option-1-induction","title":"Option 1 (Induction)","text":"<p>This DFA recognizes the language by proof of induction on the length of the input string such that the DFA always ends in the correct state according to the last symbol and the requirement that the string starts with 0.</p> <p>Base Case:</p> <ol> <li>If w is a single 0, the DFA moves from q\u2080 to q\u2081. The DFA does not accept this string because it doesn\u2019t begin with a 0 AND end with a 1.</li> <li>If w is a single 1, the DFA moves from q\u2080 to q\u2083. The DFA does not accept this string and will never accept because it doesn\u2019t begin with a 0.</li> <li>If w is the empty string, the DFA will immediately reject because it doesn\u2019t begin with a 0 or end with a 1.</li> </ol> <p>Inductive Steps:</p> <p>Suppose the DFA is in the correct state after reading a string of length k and let w be a string that begins with a 0 and ends with a 1 of length k + 1.</p> <ul> <li>If w began with a 1, the DFA transitioned to q\u2081 and will never accept due to an infinite loop.</li> <li>Otherwise, if w began with a 0, the DFA can either be in q\u2081 or q\u2082 after reading in k characters.</li> </ul> <p>Now there are two cases:</p> <ol> <li>The last character of w is a 0</li> <li>The last character of w is a 1</li> </ol> <p>In the first case, if the last character of w is a 0, regardless of whether the DFA is in q\u2081 or q\u2082, the DFA will end in q\u2081 and reject.</p> <p>In the second case, if the last character of w is a 1, regardless of whether the DFA is in q\u2081 or q\u2082, the DFA will end in q\u2082 and accept.</p> <p>We know that the DFA only accepts a string iff (if and only if) it ends in q\u2082 and by the invariant, q\u2082 means the string starts with 0 and ends with 1.</p> <p>Conversely, if the string does not begin with 0, the DFA will go into an infinite loop in q\u2083 and reject.</p> <p>And if the string does not end with 1, the DFA will end in q\u2081 and reject.</p>"},{"location":"computational_theory/ch0_intro/#option-2-construction","title":"Option 2 (Construction)","text":"<p>This DFA recognizes the language by proof of construction by breaking up how the DFA handles strings in different cases.</p> <p>For any string w, w will either be one of the following:</p> <ol> <li>w begins with a 0 and ends with a 1</li> <li>w begins with a 0 and doesn\u2019t end with a 1</li> <li>w doesn\u2019t begin with a 0 and ends with a 1</li> <li>w doesn\u2019t begin with a 0 and doesn\u2019t end with a 1</li> </ol> <p>In case 1, the DFA must transition to q\u2081 since w begins with a 0 and it must end up in q\u2082 because regardless of whether the DFA is in q\u2081 or q\u2082 before the last character is read, it will always end in q\u2082. Therefore, strings in this case will always get accepted.</p> <p>In case 2, the DFA must transition to q\u2081 since w begins with a 0 and it must end up in q\u2081 because regardless of whether the DFA is in q\u2081 or q\u2083 before the last character is read, it will always end in q\u2081. Therefore, strings in this case will always be rejected.</p> <p>In case 3 and 4 (which can be combined), the DFA must transition to q\u2083 since w begins with a 1 and will remain in q\u2083 as the state loops on all inputs. Therefore, strings in this case will always be rejected.</p> <p>From the above cases, the only strings that can be accepted by this DFA are those that begin with a 0 and end with a 1 (case 1). All other cases result in the string being rejected. Therefore, the DFA recognizes the above language.</p>"},{"location":"computational_theory/ch1_regular_languages/","title":"Regular Languages \u6b63\u5219\u8bed\u8a00","text":"<p>\u73b0\u5b9e\u4e2d\u7684\u8ba1\u7b97\u673a\u592a\u590d\u6742\uff0c\u6211\u4eec\u4ece\u66f4\u52a0\u7b80\u5355\u548c\u62bd\u8c61\u7684\u6a21\u578b\u5f00\u59cb\u5b66\u4e60\u3002\u6211\u4eec\u7528\u8ba1\u7b97\u6a21\u578b\uff08computational model\uff09\u6765\u62bd\u8c61\u4e00\u4e2a\u8ba1\u7b97\u673a\uff0c\u53ea\u4fdd\u7559\u6211\u4eec\u5173\u5fc3\u7684\u6838\u5fc3\u7279\u5f81\u3002</p> <p>\u6211\u4eec\u5173\u6ce8\u72b6\u6001\u548c\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u800c\u4e0d\u8003\u8651\u590d\u6742\u7684\u5185\u5b58\u548c\u786c\u4ef6\uff0c\u56e0\u6b64\u8fd9\u79cd\u6a21\u578b\u53eb\u505a\u6709\u9650\u72b6\u6001\u673a\uff08finite state machine, FSM\uff09\uff0c\u4e5f\u53eb\u505a\u6709\u7a77\u81ea\u52a8\u673a\uff08finite automaton\uff09\u3002</p> <p>\u8fd9\u91cc\u6ce8\u610f\uff0c\u6709\u9650\u81ea\u52a8\u673a\u53ea\u6709\u6709\u9650\u591a\u4e2a\u72b6\u6001\uff0c\u6ca1\u6709\u989d\u5916\u7684\u5b58\u50a8\u5668\uff0c\u56e0\u6b64\u5e76\u975e\u6211\u4eec\u4eca\u5929\u6b63\u5728\u4f7f\u7528\u7684\u8ba1\u7b97\u673a\u3002\u73b0\u5728\u6211\u4eec\u7528\u7684\u8ba1\u7b97\u673a\uff0c\u66f4\u8fd1\u4f3c\u4e8e\u56fe\u7075\u673a\uff08\u4e25\u683c\u610f\u4e49\u4e0a\u7684\u56fe\u7075\u673a\u6709\u65e0\u9650\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f46\u5982\u4eca\u7684\u8ba1\u7b97\u673a\u5728\u5b58\u50a8\u7a7a\u95f4\u4e0a\u5df2\u7ecf\u6709\u6781\u5927\u7684\u6269\u5c55\u7a7a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u8fd1\u4f3c\u4e8e\u56fe\u7075\u673a\uff09\uff0c\u800c\u975e\u6709\u9650\u72b6\u6001\u673a\u3002</p> <p>\u5f53\u7136\uff0c\u6211\u4eec\u7684\u751f\u6d3b\u4e2d\u5176\u5b9e\u6709\u5f88\u591a\u6709\u9650\u72b6\u6001\u673a\uff0c\u6bd4\u5982\uff1a\u7ea2\u7eff\u706f\u3001\u81ea\u52a8\u552e\u8d27\u673a\u3001\u9065\u63a7\u5668\u7b49\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#11-finite-automata","title":"1.1 Finite Automata","text":""},{"location":"computational_theory/ch1_regular_languages/#111-state-diagram","title":"1.1.1 State Diagram","text":"<p>\u5148\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a\u5546\u573a\u5bbe\u9986\u7684\u81ea\u52a8\u95e8\u3002</p> <p></p> <p></p> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u81ea\u52a8\u95e8\u53ea\u6709\u4e24\u4e2a\u72b6\u6001\uff1aCLOSED and OPEN\uff0c\u5728\u8fd9\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u5982\u4e0b\u72b6\u6001\u8f6c\u79fb\uff08Transitions\uff09\uff1a</p> <ul> <li>\u5728CLOSED\u72b6\u6001\u4e0b\uff1a</li> <li>\u5982\u679c\u524d\u9762\u6709\u4eba\u51fa\u73b0\uff08FRONT\uff09\uff0c\u90a3\u4e48\u5c31\u6253\u5f00\u95e8</li> <li>\u5982\u679c\u540e\u9762\u6709\u4eba\u3001\u4e24\u4fa7\u90fd\u6709\u4eba\u3001\u4e24\u4fa7\u90fd\u6ca1\u4eba\uff0c\u5c31\u5148\u4fdd\u6301\u5173\u7740\uff1b\u4e66\u4e2d\u4f8b\u5b50\u7684\u81ea\u52a8\u95e8\u4e0d\u662f\u6211\u4eec\u5e38\u89c1\u7684\u90a3\u79cd\u81ea\u52a8\u95e8\uff0c\u800c\u662f\u4f1a\u753b\u4e00\u4e2a\u6247\u5f62\u90a3\u6837\u7684\u81ea\u52a8\u95e8\uff0c\u6240\u4ee5\u53ea\u80fd\u4ece\u524d\u95e8\u8fdb\uff0c\u5f00\u95e8\u7684\u65f6\u5019\u4f1a\u626b\u5411\u4fa7\u58c1\u90a3\u79cd\u611f\u89c9\uff0c\u56e0\u6b64\u8fd9\u91cc\u7684\u4fdd\u6301CLOSED\u662f\u4e3a\u4e86\u9632\u6b62\u649e\u5230\u4eba</li> <li>\u5728OPEN\u72b6\u6001\u4e0b\uff1a</li> <li>\u5982\u679c\u524d\u9762\u6709\u4eba\u3001\u540e\u9762\u6709\u4eba\u3001\u4e24\u4fa7\u90fd\u6709\u4eba\uff0c\u5219\u4fdd\u6301\u5f00\u95e8\u72b6\u6001</li> <li>\u5982\u679c\u90fd\u6ca1\u4eba\uff0c\u5219\u8f6c\u6362\u5230CLOSED\u72b6\u6001</li> </ul> <p></p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u6574\u7406\u4e3a\u72b6\u6001\u8868\u683c\u3002</p> <p></p> <p>\u4e0a\u56fe\u662f\u4e00\u4e2a\u975e\u5e38\u6807\u51c6\u7684\u6709\u7a77\u81ea\u52a8\u673aM1\u3002\u8be5\u56fe\u88ab\u79f0\u4e3a\u72b6\u6001\u56fe\uff08state diagram\uff09\uff0c\u5b83\u7684\u4e09\u4e2a\u72b6\u6001\u8bb0\u4f5cq1, q2, q3\uff1a</p> <ul> <li>q1\u4ee3\u8868 start state \u8d77\u59cb\u72b6\u6001</li> <li>q2\u4ee3\u8868 accept state \u63a5\u53d7\u72b6\u6001</li> </ul> <p>\u4e0a\u56fe\u8f93\u5165\u4fe1\u53f7\u4e3a1101. \u5bf9\u4e8eFA\uff0c\u6bcf\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u90fd\u53ea\u4f1a\u5728\u88ab\u8bfb\u53d6\u7684\u90a3\u4e00\u523b\u8d77\u4f5c\u7528\uff0c\u5f53\u8fd9\u4e2a\u7b26\u53f7\u88ab\u7528\u5b8c\u540e\uff0c\u4ed6\u5c31\u88ab\u6d88\u8017\u4e86\u3002\u4f46\u662f\uff0c\u4fe1\u53f7\u4f1a\u6539\u53d8\u72b6\u6001\uff0c\u56e0\u6b64\u673a\u5668\u53ef\u4ee5\u8bb0\u4f4f\u72b6\u6001\u3002\u4e0a\u8ff0\u8fc7\u7a0b\u8be6\u7ec6\u63cf\u8ff0\u5982\u4e0b\uff1a</p> <ol> <li>\u9996\u5148\u7b2c\u4e00\u4e2a1\u88abq1\u8bfb\u53d6\u540e\uff0c\u72b6\u6001\u4eceq1\u8f6c\u79fb\u5230\u4e86q2.</li> <li>\u7136\u540e\u7b2c\u4e8c\u4e2a1\u88abq2\u8bfb\u53d6\u540e\uff0c\u4fdd\u7559\u5728\u4e86q2.</li> <li>\u7136\u540e\u7b2c\u4e09\u4e2a0\u88abq2\u8bfb\u53d6\u540e\uff0c\u8f6c\u79fb\u5230\u4e86q3.</li> <li>\u7136\u540e\u7b2c\u56db\u4e2a1\u88abq3\u8bfb\u53d6\u540e\uff0c\u8f6c\u79fb\u5230\u4e86q2.</li> </ol> <p>\u8f93\u5165\u4fe1\u53f7/\u8f93\u5165\u4e321101\u88ab\u6d88\u8017\u540e\uff0c\u673a\u5668\u505c\u5728\u4e86q2. \u8fd9\u91cc\u8981\u6ce8\u610f\uff0c\u56fe\u7247\u4e2dq3\u5230q2\u7684\u80a9\u5934\u4e0a\u5199\u4e860\u548c1\uff0c\u8fd9\u91cc\u8bb0\u5f55\u7684\u662f\u89c4\u5219\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cstate diagram \u72b6\u6001\u56fe\u4e2d\u53ea\u8bb0\u5f55\u89c4\u5219\uff0c\u5177\u4f53\u7684\u8f6c\u79fb\u9700\u8981\u7528\u6237\u81ea\u5df1\u53bbtrack\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#112-5-tuple","title":"1.1.2 5-Tuple","text":"<p>\u4e00\u4e2a\u6709\u9650\u81ea\u52a8\u673aFA\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u4e94\u5143\u7ec4</p> <p>A finite automaton is a 5-tuple,</p> \\[ (Q, \\Sigma, \\delta, q_{0}, F) \\] <p>where</p> <ol> <li>\\(Q\\) is a finite set called the states \u72b6\u6001\u96c6\u5408</li> <li>\\(\\Sigma\\) is a finite set called the alphabet \u5b57\u6bcd\u8868</li> <li>\\(\\delta : Q \\times \\Sigma \\to Q\\) is the transition function \u8f6c\u79fb\u51fd\u6570</li> <li>\\(q_{0} \\in Q\\) is the start state \u8d77\u59cb\u72b6\u6001</li> <li>\\(F \\subseteq Q\\) is the set of accept states \u63a5\u53d7\u72b6\u6001\u96c6</li> </ol> <p>\u5176\u4e2d\uff0cFA\u5fc5\u987b\u6709start state\uff0c\u4f46\u662f\u7279\u6b8a\u60c5\u51b5\u4e2daccept states\u53ef\u4ee5\u4e3a\u7a7a\u3002</p> <p></p> <p>\u521a\u624d\u6211\u4eec\u8ba8\u8bba\u7684\u5c31\u53ef\u4ee5\u6539\u5199\u4e3a\u4e0a\u8ff0\u5f62\u5f0f\u3002</p> <p>\u5982\u679cA\u662f\u673a\u5668M\u53ef\u4ee5\u63a5\u53d7\u7684\u4e00\u4e32string\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8bf4\uff1aA is the language of machine M, \u5e76\u5199\u4f5c\uff1a</p> \\[ L(M) = A \\] <p>We say that M recognizes A, or M accepts A.</p> <p>\u4e00\u53f0FA\u673a\u5668\u53ef\u4ee5\u63a5\u53d7\u82e5\u5e72\u5b57\u7b26\u4e32\uff0c\u4f46\u5b83\u6c38\u8fdc\u53ea\u80fd\u8bc6\u522b\u4e00\u4e2a\u8bed\u8a00\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#113-concise-description","title":"1.1.3 Concise Description","text":"<p>\u4e66\u4e2dP37\u63cf\u8ff0\u4e86\u5982\u4f55\u6807\u51c6\u5730\u53bb\u63cf\u8ff0\u4e00\u4e2aFA\u673a\u5668\u3002\u5728\u63cf\u8ff0\u7684\u65f6\u5019\uff0c\u6709\u8fde\u5f29\u5404\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li>state diagram \u72b6\u6001\u56fe\uff0c\u5373\u5706\u5708\u548c\u7bad\u5934\u6240\u8868\u8fbe\u7684\u56fe</li> <li>formal description \u5f62\u5f0f\u5316\u63cf\u8ff0\uff0c\u5373\u7528\u6587\u5b57\u3001\u4e94\u5143\u7ec4\u3001\u8f6c\u79fb\u8868\u7684\u8868\u8fbe</li> </ul> <p>\u8fd9\u4e24\u79cd\u65b9\u6cd5\u662f\u7b49\u4ef7\u7684\u3002</p> <p>\u4e66\u4e2d\u6700\u540e\u603b\u7ed3\u4e86\u4e00\u4e2a\u96c6\u5408\u5f62\u5f0f\u7684concise description:</p> \\[ L(M_2) = \\{ w \\mid w \\text{ ends in a } 1 \\} \\] <p>\u4e0a\u5f0f\u4e5f\u53ef\u4ee5\u7528\u8bed\u8a00\u8868\u8fbe\uff1a</p> <p>M2 accepts exactly the set of binary strings that end with a 1.</p> <p>\u6216\u8005\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\uff1a</p> \\[ L(M_2) = (0 + 1) * 1 \\] <p>\u4e0a\u9762\u4e09\u79cd\u65b9\u5f0f\u90fd\u662fconcise description\uff0c\u5177\u4f53\u5199\u54ea\u79cd\u9700\u8981\u6839\u636e\u9700\u8981\u6765\u8fdb\u884c\u3002concise description\u5c31\u662f\u628a\u54ea\u4e9b\u4e32\u80fd\u5230\u8fbe\u63a5\u53d7\u6001\u603b\u7ed3\u6210\u4e00\u4e2a\u7b80\u6d01\u7684\u8bed\u8a00\u63cf\u8ff0\u3002</p> <p>\u518d\u770b\u51e0\u4e2a\u4f8b\u5b50\uff1a</p> <p>\u4f8b1.9</p> <p></p> <p>\u8fd9\u4e2a\u4f8b\u5b50\u4e2daccept state\u63a5\u53d7\u7a7a\u548c\u6240\u6709\u4ee50\u7ed3\u5c3e\u7684string</p> <p>\u4f8b1.11</p> <p></p> <p>start state\u4e00\u65e6\u63a5\u6536\u5230string\uff0c\u8981\u4e48\u53bbq1\uff0c\u8981\u4e48\u53bbr1\uff0c\u6ca1\u6709\u8fd4\u56de\u7684\u60c5\u51b5\uff0c\u6240\u4ee5M4\u8bb0\u4f4f\u4e86\u7b2c\u4e00\u4e2a\u7b26\u53f7\u3002</p> <p>\u5728\u5de6\u5206\u652f\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u7b26\u53f7\u662fa\uff0cM4\u63a5\u53d7\uff1b\u5728\u53f3\u5206\u652f\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u7b26\u53f7\u662fb\uff0cM4\u63a5\u53d7\u3002\u56e0\u6b64\u603b\u7ed3\u6765\u8bf4\uff1a</p> \\[ L(M_4) = \\{ w \\mid w \\text{ starts and ends with the same symbol} \\} \\] <p>\u4f8b1.13</p> <p></p> <p>\u9996\u5148\u6765\u770b\u4e00\u4e0b\u9898\u76ee\u4e2d\u7ed9\u51fa\u7684alphabet={<code>&lt;RESET&gt;,0,1,2</code>}\uff0c\u4e5f\u5c31\u662f\u8bf4\u8f93\u5165string\u53ef\u80fd\u7531\u56db\u79cd\u7b26\u53f7\u7ec4\u6210\uff0c\u5206\u522b\u662f\u6570\u5b570\u30011\u30012\u548c\u7279\u6b8a\u7b26\u53f7RESET\u3002</p> <p>\u8fd9\u4e2aFA\u4eceq0\u5f00\u59cb\uff0c\u5982\u679c\u662f0\u5c31\u63a5\u53d7\uff0c1\u7684\u8bdd\u5230q1\uff0c2\u7684\u8bdd\u5230q2\uff1b\u5728q1\u8fd9\u91cc\u5982\u679c\u662f2\u5c31\u8fd4\u56deq0\u7136\u540e\u88ab\u63a5\u53d7\uff1b\u5728q2\u7684\u8bdd\u5982\u679c\u662f1\u5c31\u56de\u5230q0\u2026\u2026\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f1a\u53d1\u73b0\u8fd9\u5c31\u662f\u4e00\u4e2a\u6a21\u8fd0\u7b97FA\u3002RESET\u7684\u4f5c\u7528\u662f\u6682\u505c\u5f53\u524d\u7684\u6a21\u8fd0\u7b97\uff0c\u8fdb\u884c\u65b0\u7684\u6a21\u8fd0\u7b97\u3002</p> <p>\u5bf9\u4e8e\u8fd9\u4e2aFA\uff0c\u6587\u5b57\u63cf\u8ff0\u4f1a\u66f4\u7b80\u5355\u548c\u6e05\u6670\u4e00\u70b9\u3002</p> <p>\u4f8b1.15</p> <p></p> <p>\u8fd9\u4e2a\u662f\u4e0a\u4e00\u4e2a\u9898\u7684\u6cdb\u5316\u7248\u672c\u3002\u5982\u679c\u6211\u4eec\u753b\u4e00\u4e2aModule4\uff0cModule5\u6216\u8005Module\u4efb\u610f\u6570\u5b57\u7684\u4f8b\u5b50\uff0c\u90fd\u53ef\u4ee5\u7528\u540c\u6837\u7684\u65b9\u6cd5\u5c31\u53ef\u4ee5\u753b\u51fa\u6765\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#114-formal-definition-of-computation","title":"1.1.4 Formal Definition of Computation","text":"<p>\u8ba1\u7b97\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\u5728\u4e0a\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u5206\u522b\u7528\u72b6\u6001\u56fe\u5bf9FA\u8fdb\u884c\u4e86\u975e\u5f62\u5f0f\u5316\u7684\u63cf\u8ff0\uff0c\u540c\u65f6\u4e5f\u75285\u5143\u7ec4\u4f5c\u4e3a\u5f62\u5f0f\u5316\u5b9a\u4e49\u63cf\u8ff0\u4e86\u5b83\u3002</p> <p>\u6211\u4eec\u9700\u8981\u638c\u63e1FA\u5f62\u5f0f\u5316\u7684\u5b9a\u4e49\u65b9\u6cd5\uff1a</p> <p>Let \\(M = (Q, \\Sigma, \\delta, q_0, F)\\) be a finite automaton and let \\(w = w_1 w_2 \\cdots w_n\\) be a string where each \\(w_i\\) is a member of the alphabet \\(\\Sigma\\).</p> <p>Then \\(M\\) accepts \\(w\\) if a sequence of states \\(r_0, r_1, \\ldots, r_n\\) in \\(Q\\) exists with three conditions:</p> <ol> <li>\\(r_0 = q_0\\),</li> <li>\\(\\delta(r_i, w_{i+1}) = r_{i+1}, \\quad \\text{for } i = 0, \\ldots, n-1\\),</li> <li>\\(r_n \\in F\\).</li> </ol> <p>Condition 1 says that the machine starts in the start state. Condition 2 says that the machine goes from state to state according to the transition function. Condition 3 says that the machine accepts its input if it ends up in an accept state.</p> <p>We say that \\(M\\) recognizes language \\(A\\) if</p> \\[ A = \\{ w \\mid M \\text{ accepts } w \\}. \\] <p>A language is called a regular language if some finite automaton recognizes it.</p> <p>\u4e0a\u8ff0\u6570\u7406\u5c42\u9762\u7684\u5b9a\u4e49\u4e5f\u4e0d\u7528\u592a\u7ec6\u6263\u3002\u5bf9\u4e8e\u8fd9\u90e8\u5206\u7684\u5185\u5bb9\uff0c\u80fd\u591f\u638c\u63e1\u57fa\u672c\u6982\u5ff5\u548c\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\u5c31\u884c\u4e86\uff1a</p> <ul> <li>\u533a\u5206DFA\u548cNFA\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u72b6\u6001\uff0c\u5982\u679c\u6765\u4e00\u4e2a\u5b57\u7b26\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u552f\u4e00\u7684\u8f6c\u79fb\uff0c\u5219\u662fDFA\uff1b\u5426\u5219\u662fNFA\u3002\u4f5c\u4e1a\u4e2d\u57fa\u672c\u90fd\u662fDFA\u3002</li> <li>\u8d70\u5b8c\u5b57\u7b26\u4e32\u540e\u6b63\u597d\u505c\u5728\u63a5\u53d7\u72b6\u6001\uff0c\u6216\u8005\u8d77\u59cb\u70b9\u5c31\u662f\u63a5\u6536\u72b6\u6001\uff0c\u5219\u79f0\u4e3a\u201c\u63a5\u53d7\u201d\u3002</li> <li>\u80fd\u591f\u770b\u61c2\u5e76\u7528\u4e00\u53e5\u8bdd\u63cf\u8ff0\u4e00\u4e2aDFA\u3002</li> <li>\u80fd\u591f\u6839\u636e\u8981\u6c42\u6784\u9020DFA\u3002</li> <li>\u80fd\u591f\u5bf9\u8fdb\u884c\u7b80\u77ed\u7684\u8bc1\u660e\u3002</li> </ul> <p>\u4f8b\uff1a</p> <p></p>"},{"location":"computational_theory/ch1_regular_languages/#115-dfa","title":"1.1.5 \u8bbe\u8ba1DFA","text":"<p>DFA\u7684D\u7684\u610f\u601d\u5c31\u662f\u786e\u5b9a\u6027\uff08Deterministic\uff09\uff0c\u56e0\u6b64\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6765\u81ea\u5b57\u6bcd\u8868\u7684\u8f93\u5165\u7b26\u53f7\uff0c\u90fd\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002\u6240\u4ee5\u5728\u8bfe\u7a0b\u4e2d\uff0c\u5927\u90e8\u5206\u5b57\u6bcd\u8868\u90fd\u6bd4\u8f83\u7b80\u5355\u3002</p> <p>\u5b9e\u8df5\u4e2d\u6709\u65f6\u5019\u4f1a\u7528\u7b80\u5199\uff08Shorthand\uff09\uff0c\u6765\u7b80\u5316DFA\u56fe\u3002</p> <p>\u4f8b1\uff1a\u8bbe\u8ba1\u4e00\u4e2a\u80fd\u591f\u8bc6\u522b\u5b57\u7b26\u4e32\u4e2d1\u7684\u4e2a\u6570\u662f\u5947\u6570\u4e2a\u8fd8\u662f\u5076\u6570\u4e2a\u7684FDA</p> <p></p> <p>\u7136\u540e\u6211\u4eec\u52a0\u5165start state\u548caccept state</p> <p></p> <p>\u8fd9\u91cc\u8fd9\u4e48\u8bbe\u7f6e\u7684\u539f\u56e0\u662f\u5728\u4e00\u4e2a\u6570\u5b57\u90fd\u6ca1\u6709\u8bfb\u7684\u65f6\u5019\uff0c\u8bfb\u5230\u76841\u7684\u4e2a\u6570\u662f0\u4e2a\uff0c\u6240\u4ee5start state\u662fq_even\u3002</p> <p>\u800caccept state\u7684\u8bbe\u7f6e\u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\u3002\u5982\u679c\u4f60\u60f3\u63a5\u53d7\u7684\u6027\u8d28\u662f\u5947\u6570\u4e2a\uff0c\u90a3\u4e48\u5c31\u628aq_odd\u8bbe\u7f6e\u4e3aaccept\uff1b\u5426\u5219\u5c31\u628aq_even\u8bbe\u7f6e\u4e3aaccept\u3002</p> <p>\u4f8b2\uff1a\u8bbe\u8ba1\u4e00\u4e2aDFA\uff0c\u8bc6\u522b\u201c\u81f3\u5c11\u5305\u542b\u4e00\u6b21\u5b57\u4e32001\u7684\u4e8c\u8fdb\u5236string\u201d</p> <p>\u89e3\u9898\u601d\u8def:</p> <ol> <li>\u5ffd\u7565\u6240\u6709\u76841</li> <li>\u4e00\u65e6\u770b\u52300\uff0c\u5c31\u8bb0\u4f4f\u53ef\u80fd\u662f001\u7684\u7b2c\u4e00\u4e2a0</li> <li>\u63a5\u7740\u5982\u679c\u8fd8\u662f0\uff0c\u5c31\u8bb0\u4f4f\u53ef\u80fd\u662f001\u768400</li> <li>\u63a5\u4e0b\u6765\u5982\u679c\u53c8\u662f\u4e00\u4e2a0\uff0c\u5219\u4ecd\u7136\u4fdd\u630100\u72b6\u6001</li> <li>\u572800\u72b6\u6001\u4e0b\u770b\u52301\uff0c\u5219\u627e\u5230\u4e86\u89e3\uff0caccept</li> </ol> <p></p>"},{"location":"computational_theory/ch1_regular_languages/#116-regular-operations","title":"1.1.6 Regular Operations \u6b63\u5219\u8fd0\u7b97","text":"<p>\u5728\u7b97\u672f\u4e2d\uff0c\u6570\u5b57\u662f\u5bf9\u8c61\uff0c\u52a0\u51cf\u4e58\u9664\u662f\u5de5\u5177\uff1b\u5728\u8ba1\u7b97\u7406\u8bba\u4e2d\uff0c\u5de5\u5177\u662f\u8bed\u8a00\uff0c\u5de5\u5177\u5219\u662f\u4e13\u95e8\u5904\u7406\u8bed\u8a00\u7684\u8fd0\u7b97\u3002</p> <p>\u8fd9\u91cc\u7684\u8bed\u8a00\u6307\u7684\u5c31\u662f\u6211\u4eec\u521a\u624d\u5b66\u4e60\u7684\u5f62\u5f0f\u8bed\u8a00\uff08formal language\uff09\u3002\u6bd4\u5982\u5728\u521a\u624d\u7ec3\u4e60\u7684\u4e60\u9898\u201c\u67e5\u627estring\u4e2d1\u7684\u4e2a\u6570\u662f\u5076\u6570\u4e2a\u8fd8\u662f\u5947\u6570\u4e2a\u201d\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u628a\u7ed3\u679c\u8fdb\u884c\u6b63\u5219\u5f62\u5f0f\u5316\u8868\u8ff0\uff1a</p> <p>\u5947\u6570\u4e2a 1 \u7684\u8bed\u8a00\uff1a</p> \\[ L_{\\text{odd}} = \\{\\, w \\in \\{0,1\\}^* \\mid \\#1(w) \\equiv 1 \\pmod{2} \\,\\} \\] <p>\u7b49\u4ef7\u6b63\u5219\u5f0f\uff1a</p> \\[ 0^* 1 0^* (10^*10^*)^* \\] <p>\u5047\u8bbeA\u548cB\u662f\u4e24\u4e2a\u8bed\u8a00\uff0c\u6b63\u5219\u8fd0\u7b97\u5305\u62ec\uff1a</p> <ul> <li>Union: \uff08\u5e76\uff09</li> </ul> <p>$$   A \\cup B = { x \\mid x \\in A \\;\\text{or}\\; x \\in B }   $$ - Concatenation: \uff08\u8fde\u63a5\uff09</p> <p>$$   A \\circ B = { xy \\mid x \\in A \\;\\text{and}\\; y \\in B }   $$ - Star: \uff08\u661f\u53f7\uff09</p> <p>$$   A^* = { x_1 x_2 \\cdots x_k \\mid k \\geq 0 \\;\\text{and each } x_i \\in A }   $$</p> <p>\u5e76\u5c31\u662f\u628aA\u548cB\u4e2d\u6240\u6709\u7684string\u5408\u5e76\u5728\u4e00\u4e2a\u8bed\u8a00\u4e2d\u3002</p> <p>\u8fde\u63a5\u4ee5\u6240\u6709\u53ef\u80fd\u7684\u65b9\u5f0f\uff0c\u628aA\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u5728B\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u524d\u9762\uff0c\u5f97\u5230\u65b0\u7684\u8bed\u8a00\u4e2d\u7684\u5168\u90e8\u5b57\u7b26\u4e32\u3002</p> <p>\u661f\u53f7\u8fd0\u7b97\u4f5c\u7528\u4e8e\u4e00\u4e2a\u8bed\u8a00\uff0c\u56e0\u6b64\u662funary operation\uff08\u4e00\u5143\u8fd0\u7b97\uff09\u800c\u4e0d\u662fbinary operation\uff08\u4e8c\u5143\u8fd0\u7b97\uff09\u3002\u661f\u53f7\u8fd0\u7b97\u4f1a\u628aA\u4e2d\u7684\u4efb\u610f\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u5f97\u5230\u65b0\u8bed\u8a00\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002</p> <p>\u4f8b\uff1a</p> <p></p> <p>\u6ce8\u610fsigma\uff08alphabet\uff09\u53ea\u662f\u4fdd\u8bc1A\u548cB\u662f\u5408\u6cd5\u7684\uff0c\u6b63\u5219\u8fd0\u7b97\u4e2d\u4e0d\u9700\u8981\u7528\u5230alphabet\u4e2d\u7684\u5185\u5bb9\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#12-nondeterminism","title":"1.2 Nondeterminism \u975e\u786e\u5b9a\u6027","text":""},{"location":"computational_theory/ch1_regular_languages/#121-dfa-nfa","title":"1.2.1 DFA, NFA","text":"<p>\u786e\u5b9a\u6027\u8ba1\u7b97\uff08Deterministic Computation\uff09\u5c31\u662f\u5f53\u673a\u5668\u5904\u4e8e\u7ed9\u5b9a\u72b6\u6001\u4e0b\u5e76\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u8f93\u5165\u7b26\u53f7\u65f6\uff0c\u53ef\u4ee5\u660e\u786e\u77e5\u9053\u673a\u5668\u7684\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002</p> <p>\u5728\u975e\u786e\u5b9a\u6027\uff08Nondeterministic\uff09\u673a\u5668\u4e2d\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u9009\u62e9\uff0c\u4ece\u800c\u5bfc\u81f4\u975e\u552f\u4e00\u7684\u7ed3\u679c\u3002\u6211\u4eec\u5728\u8bfe\u7a0b\u4e2d\u4e3b\u8981\u8ba8\u8bbaDFA\uff0c\u5373\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\u3002NFA\u5219\u662f\u975e\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\u3002</p> <p></p> <p>\u5728\u4e0a\u56fe\u7684\u4f8b\u5b50\u4e2d\uff0cq1\u72b6\u6001\u4e0b\u5982\u679c\u63a5\u53d71\uff0c\u53ef\u80fd\u8f6c\u79fb\u5230q2\uff0c\u4e5f\u53ef\u80fd\u4fdd\u6301\u5728q1\uff0c\u56e0\u6b64\u8fd9\u662f\u975e\u786e\u5b9a\u6027\u7684\u3002</p> <p>\u7531\u4e8e\u8bfe\u7a0b\u4e3b\u8981\u8ba8\u8bbaDFA\uff0c\u56e0\u6b64NFA\u7684\u8bf8\u591a\u76f8\u5173\u5185\u5bb9\u8fd9\u91cc\u5c31\u4e0d\u5c55\u5f00\u8ba8\u8bba\u4e86\u3002\u552f\u4e00\u8981\u660e\u786e\u7684\u662f\uff1a\u6240\u6709\u7684NFA\u90fd\u80fd\u8f6c\u6362\u4e3aDFA\u3002</p> <p>\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a{q1,q2}\u7684state\uff0c\u4ece\u800c\u8ba9q1\u63a5\u53d71\u540e\u6307\u5411\u8fd9\u4e2a\u65b0\u7684state\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u7528\u72b6\u6001\u96c6\u5408\u7684\u65b9\u5f0f\u53ef\u4ee5\u628a\u540c\u4e00\u8f93\u5165\u6307\u5411\u4e0d\u540c\u7684\u72b6\u6001\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u8f6c\u5316\u4e3a\u786e\u5b9a\u6027\u3002</p> <p>\u5b9a\u74061.19\uff1a\u6bcf\u4e00\u53f0NFA\u90fd\u7b49\u4ef7\u4e8e\u67d0\u4e00\u53f0DFA\u3002</p> <p>Corollary 1.40: A language is regular if and only if some nondeterministic finite automaton recognizes it.</p> <p>\u63a8\u8bba1.20\uff1a\u4e00\u4e2a\u8bed\u8a00\u662f\u6b63\u5219\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u6709\u4e00\u53f0\u975e\u786e\u5b9a\u6027\u6709\u7a77\u81ea\u52a8\u673a\u8bc6\u522b\u4ed6\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#122-closure-under-the-regular-operations","title":"1.2.2 Closure under the regular operations","text":"<p>\u6b63\u5219\u8bed\u8a00\u7684\u5c01\u95ed\u6027</p> <p>Theorem 1.45: The class of regular languages is closed under the union operation.</p> <p>\u5b9a\u74061.22 \u6b63\u5219\u8bed\u8a00\u7c7b\u5728\u5e76\u8fd0\u7b97\u4e0b\u5c01\u95ed</p> <p>\u8be6\u89c1\u4e66\u4e0a\u5185\u5bb9</p> <p>Theorem 1.47: The class of regular languages is closed under the concatenation operation.</p> <p>\u5b9a\u74061.23 \u6b63\u5219\u8bed\u8a00\u7c7b\u5728\u8fde\u63a5\u8fd0\u7b97\u4e0b\u5c01\u95ed</p> <p>\u8be6\u89c1\u4e66\u4e0a\u5185\u5bb9</p> <p>Theorem 1.49: The class of regular languages is closed under the star operation.</p> <p>\u5b9a\u74061.24 \u6b63\u5219\u8bed\u8a00\u5728\u661f\u53f7\u8fd0\u7b97\u4e0b\u5c01\u95ed</p> <p>\u8be6\u89c1\u4e66\u4e0a\u5185\u5bb9</p>"},{"location":"computational_theory/ch1_regular_languages/#13-regular-expressions","title":"1.3 Regular Expressions \u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"computational_theory/ch1_regular_languages/#131-formal-definition-of-a-regular-expression","title":"1.3.1 Formal definition of a regular expression","text":"<p>\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u63cf\u8ff0\u4e86\u4e00\u4e2a\u201c\u6a21\u5f0f\u201d\uff08Pattern\uff09\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u5b9a\u4e49\u4e86\u4e00\u7ec4\u5b57\u7b26\u4e32\u7684\u89c4\u5219\u3002\u5339\u914d\u5f15\u64ce\u5728\u5de5\u4f5c\u65f6\uff0c\u4f1a\u4ece\u5de6\u5230\u53f3\u8bfb\u53d6\u8fd9\u4e2a\u6a21\u5f0f\uff0c\u5e76\u5c1d\u8bd5\u4ece\u5de6\u5230\u53f3\u5339\u914d\u76ee\u6807\u5b57\u7b26\u4e32\u3002</p> <p>\u6bd4\u5982\u8bf4\uff1a</p> \\[ (0 \\cup 1)0^* \\] <p>\u8fd9\u4e2a\u5305\u62ec\u4e24\u4e2a\u90e8\u5206\uff0c\u524d\u534a\u90e8\u5206\u7684\\((0 \\cup 1)\\)\u4ee3\u88680\u6216\u80051\uff1b\u540e\u9762\u76840*\u4ee3\u8868\u4ee50\u5f00\u5934\u7684\u3001\u957f\u5ea6\u4efb\u610f\u7684\u5b57\u7b26\u4e32\u3002\u5408\u8d77\u6765\u7684\u610f\u601d\u5c31\u662f\uff1a\u4ee50\u6216\u80051\u5f00\u5934\u7684\u4e00\u4e2a\uff0c\u540e\u9762\u5168\u90e8\u90fd\u662f0\u7684\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u53c8\u6bd4\u5982\u8bf4\uff1a</p> \\[ (0 \\cup 1)^* \\] <p>\u8fd9\u4e2a\u4ee3\u8868\u7684\u5c31\u662f\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u7684binary\u4e32\u3002</p> <p>\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\uff0c\u5148\u505a\u661f\u53f7\u8fd0\u7b97\uff0c\u7136\u540e\u505a\u8fde\u63a5\u8fd0\u7b97\uff0c\u6700\u540e\u505a\u5e76\u8fd0\u7b97\u3002\u4e3a\u4e86\u66f4\u6e05\u6670\uff0c\u63a8\u8350\u7528\u62ec\u53f7\u6539\u53d8\u8fd9\u79cd\u60ef\u5e38\u987a\u5e8f\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679calphabet\u53ea\u5305\u542b0\u548c1\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528 \u03a3 \u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f (0\u222a1) \u7684\u7f29\u5199\u3002</p> <p></p> <p>\u603b\u7ed3\uff1a</p> <p></p> <p></p>"},{"location":"computational_theory/ch1_regular_languages/#132-kleenes-theorem","title":"1.3.2 Kleene's Theorem","text":"<p>\u5c31\u63cf\u8ff0\u80fd\u529b\u800c\u8a00\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u548cDFA\u662f\u7b49\u4ef7\u7684\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6240\u6709\u7684DFA\u90fd\u53ef\u4ee5\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u63cf\u8ff0\u3002</p> <p>\u4efb\u4f55\u4e00\u4e2aDFA\uff08\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a\uff09\u6240\u80fd\u8bc6\u522b\u7684\u8bed\u8a00\uff0c\u90fd\u4e00\u5b9a\u53ef\u4ee5\u7528\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u63cf\u8ff0\u3002\u53cd\u4e4b\uff0c\u4efb\u4f55\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6240\u63cf\u8ff0\u7684\u8bed\u8a00\uff0c\u4e5f\u4e00\u5b9a\u53ef\u4ee5\u7528\u4e00\u4e2aDFA\u6765\u8bc6\u522b\u3002</p> <p>\u8fd9\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5de7\u5408\uff0c\u800c\u662f\u7531\u4e00\u6761\u8457\u540d\u7684\u5b9a\u7406\u2014\u2014\u514b\u6797\u5b9a\u7406 (Kleene's Theorem) \u6240\u4fdd\u8bc1\u7684\u3002</p> <p>\u8fd9\u4e2a\u5b9a\u7406\u63ed\u793a\u4e86\u4e00\u4e2a\u6df1\u523b\u7684\u7b49\u4ef7\u5173\u7cfb\uff1a</p> <p>\u6b63\u5219\u8868\u8fbe\u5f0f (Regular Expressions) \u21d4 \u6709\u9650\u81ea\u52a8\u673a (Finite Automata)</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u4e0b\u9762\u8fd9\u4e09\u79cd\u63cf\u8ff0\u8bed\u8a00\u7684\u65b9\u5f0f\uff0c\u5b83\u4eec\u5728\u8868\u8fbe\u80fd\u529b\u4e0a\u662f\u5b8c\u5168\u7b49\u4ef7\u7684\uff1a</p> <ol> <li>\u6b63\u5219\u8868\u8fbe\u5f0f (Regular Expression)</li> <li>\u975e\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a (NFA)</li> <li>\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a (DFA)</li> </ol> <p>\u5b83\u4eec\u90fd\u80fd\u4e14\u4ec5\u80fd\u63cf\u8ff0\u540c\u4e00\u7c7b\u8bed\u8a00\uff0c\u8fd9\u7c7b\u8bed\u8a00\u88ab\u79f0\u4e3a  \u201c\u6b63\u5219\u8bed\u8a00\u201d (Regular Languages) \u3002</p> <p>\u8fd9\u79cd\u7b49\u4ef7\u5173\u7cfb\u610f\u5473\u7740\u6211\u4eec\u6709\u660e\u786e\u7684\u7b97\u6cd5\u53ef\u4ee5\u5728\u8fd9\u51e0\u79cd\u5f62\u5f0f\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\uff1a</p> <ul> <li>\u6b63\u5219\u8868\u8fbe\u5f0f \u2192 NFA \uff1a \u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u79cd\u53eb\u505a\u201c\u6c64\u666e\u68ee\u6784\u9020\u6cd5\u201d (Thompson's construction) \u7684\u7b97\u6cd5\uff0c\u5c06\u4efb\u610f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210\u4e00\u4e2a\u7b49\u4ef7\u7684NFA\u3002</li> <li>NFA \u2192 DFA \uff1a \u6211\u4eec\u53ef\u4ee5\u7528\u201c\u5b50\u96c6\u6784\u9020\u6cd5\u201d (Subset construction) \u5c06\u4efb\u610f\u4e00\u4e2aNFA\u8f6c\u6362\u6210\u4e00\u4e2a\u7b49\u4ef7\u7684DFA\u3002</li> <li>DFA \u2192 \u6b63\u5219\u8868\u8fbe\u5f0f \uff1a \u540c\u6837\uff0c\u6211\u4eec\u4e5f\u6709\u7b97\u6cd5\uff08\u4f8b\u5982\u201c\u72b6\u6001\u6d88\u9664\u6cd5\u201d State Elimination Method \u6216 Brzozowski's Algebraic Method\uff09\u53ef\u4ee5\u5c06\u4efb\u610f\u4e00\u4e2aDFA\u8f6c\u6362\u6210\u4e00\u4e2a\u7b49\u4ef7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002</li> </ul>"},{"location":"computational_theory/ch1_regular_languages/#14-nonregular-languages","title":"1.4 Nonregular Languages","text":""},{"location":"computational_theory/ch1_regular_languages/#141-pigeonhole-principle","title":"1.4.1 Pigeonhole Principle","text":"<p>\u975e\u6b63\u5219\u8bed\u8a00\u5c31\u662fDFA\u65e0\u6cd5\u8bc6\u522b\u7684\u8bed\u8a00\uff0c\u672c\u7ae0\u4e3b\u8981\u5c31\u662f\u6765\u8bf4\u660e\u5982\u4f55\u8bc6\u522b\u975e\u6b63\u5219\u8bed\u8a00\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2aDFA\uff0c\u5176\u672c\u8d28\u5c31\u662f\u4e00\u4e2a\u72b6\u6001\u673a\uff0c\u5b83\u7684\u72b6\u6001\u6570\u91cf\u4e5f\u662f\u6709\u9650\u7684\u3002\u4f60\u53ef\u4ee5\u628a\u72b6\u6001\u60f3\u8c61\u6210\u662f\u8fd9\u53f0\u673a\u5668\u7684\u5185\u5b58\uff0c\u5982\u679c\u4e00\u4e2aDFA\u670910\u4e2a\u72b6\u6001\uff0c\u90a3\u4e48\u5b83\u7684\u5185\u5b58\u5c31\u53ea\u670910\u4e2a\u5355\u4f4d\u3002\u90a3\u4e48\uff0c\u5982\u679c\u6211\u4eec\u8981\u505a\u4e00\u4e2a\u65e0\u9650\u8ba1\u6570\u7684\u4efb\u52a1\uff0c\u8fd9\u4e2a\u4f18\u5148\u5185\u5b58\u7684\u7279\u6027\u5c31\u4f1a\u51b3\u5b9a\u8be5DFA\u7684\u80fd\u529b\u4e0a\u9650\u3002</p> <p>\u6bd4\u5982\u8bf4\uff0c\u8bed\u8a00B={\\(0^n1^n\\) | n&gt;=0}\uff0c\u8fd9\u4e2a\u7684\u8bed\u8a00\u7684\u542b\u4e49\u662f0\u548c1\u7684\u6570\u91cf\u76f8\u7b49\uff0c\u4e140\u5728\u524d1\u5728\u540e\u3002\u8981\u8bc6\u522b\u8fd9\u4e2a\u8bed\u8a00\uff0c\u673a\u5668\u5fc5\u987b\u7cbe\u786e\u5730\u8bb0\u4f4f\u5b83\u5230\u5e95\u8bfb\u4e86\u591a\u5c11\u4e2a0\uff0c\u8fd9\u6837\u624d\u80fd\u5224\u65ad\u540e\u9762\u76841\u7684\u6570\u91cf\u662f\u5426\u5b8c\u5168\u76f8\u7b49\u3002\u5047\u8bben\u53ef\u4ee5\u662f\u4efb\u4f55\u975e\u8d1f\u6574\u6570\uff0c\u90a3\u4e48\u8fd9\u53f0\u673a\u5668\u663e\u7136\u9700\u8981\u65e0\u9650\u7684\u8bb0\u5fc6\u80fd\u529b\u6765\u5b58\u50a8\u4efb\u610f\u5927\u7684\u6570\u5b57n\u3002\u7136\u800cDFA\u7684\u5185\u5b58\uff08\u72b6\u6001\uff09\u662f\u6709\u9650\u7684\uff0c\u6240\u4ee5\u76f4\u89c9\u6765\u770b\uff0cDFA\u529e\u4e0d\u5230\u8fd9\u4ef6\u4e8b\u3002</p> <p>\u672c\u7ae0\u8282\u4e3b\u8981\u5c31\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u5728\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u4e4b\u524d\uff0c\u4ecb\u7ecd\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u7684\u539f\u7406\u2014\u2014\u9e3d\u5de2\u539f\u7406\uff08Pigeonhole Principle\uff09\uff1a\u5047\u8bbe\u670910\u4e2a\u9e3d\u5b50\uff0c9\u4e2a\u9e3d\u7b3c\uff0c\u90a3\u4e48\u663e\u7136\u6709\u4e00\u4e2a\u9e3d\u7b3c\u8981\u653e2\u53ea\u9e3d\u5b50\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4f60\u6709N\u4e2a\u5bb9\u5668\uff0c\u5374\u6709N+1\u4e2a\u7269\u54c1\uff0c\u90a3\u4e48\u81f3\u5c11\u6709\u4e00\u4e2a\u5bb9\u5668\u9700\u8981\u88c5\u4e24\u4e2a\u6216\u8005\u66f4\u591a\u7684\u7269\u54c1\u3002</p> <p>\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2aDFA\uff0c\u663e\u7136\u9e3d\u7b3c\u5c31\u662f\u72b6\u6001\u96c6\u5408\u3002\u8fd9\u662f\u4e00\u4e2a\u6709\u9650\u7684\u6570\u91cf\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3ap\u4e2a\u72b6\u6001\u3002</p> <p>\u800c\u5f53\u6211\u4eec\u5904\u7406\u4e00\u4e2a\u5f88\u957f\u7684\u5b57\u7b26\u4e32s\u7684\u65f6\u5019\uff0cDFA\u6bcf\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\uff0c\u5c31\u4f1a\u8fdb\u5165\u4e00\u4e2a\u72b6\u6001\u3002\u5982\u679c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662fn\uff08\u5047\u8bben&gt;=p\uff09\uff0c\u90a3\u4e48DFA\u5c31\u4f1a\u4f9d\u6b21\u7ecf\u8fc7n+1\u4e2a\u72b6\u6001\uff08\u5305\u62ec\u8d77\u59cb\u72b6\u6001\uff09\u3002</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u6709n+1\u957f\u5ea6\u7684\u72b6\u6001\u5e8f\u5217\uff0c\u4e14\u6709p\u4e2aDFA\u672c\u8eab\u7684\u72b6\u6001\u3002\u6839\u636e\u9e3d\u5de2\u539f\u7406\uff0c\u5728DFA\u8d70\u8fc7\u7684\u8fd9\u4e2a\u72b6\u6001\u5e8f\u5217\u4e2d\uff0c\u5fc5\u7136\u81f3\u5c11\u6709\u4e00\u4e2a\u72b6\u6001\u88ab\u8bbf\u95ee\u4e86\u4e24\u6b21\u6216\u4ee5\u4e0a\u3002\u8fd9\u4e2a\u88ab\u91cd\u590d\u8bbf\u95ee\u7684\u72b6\u6001\u5c31\u5236\u9020\u4e86\u4e00\u4e2a\u201c\u5708\u201d\uff08loop\uff09\uff0c\u800c\u8fd9\u4e2a\u5708\u5219\u548c\u4e0b\u4e00\u4e2a\u6211\u4eec\u8981\u63a2\u8ba8\u7684\u6cf5\u5f15\u7406\u5bc6\u5207\u76f8\u5173\u3002</p>"},{"location":"computational_theory/ch1_regular_languages/#142-pumping-lemma","title":"1.4.2 Pumping Lemma","text":"<p>\u5982\u679c <code>A</code> \u662f\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\uff0c\u90a3\u4e48\u5b83\u5fc5\u7136\u62e5\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a\u6cf5\u957f\u5ea6 (pumping length) \u7684\u7279\u6b8a\u6570\u5b57 <code>p</code>\u3002\u8fd9\u4e2a <code>p</code> \u5177\u6709\u4ee5\u4e0b\u795e\u5947\u7684\u6027\u8d28\uff1a</p> <p>\u5bf9\u4e8e\u8bed\u8a00 <code>A</code> \u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e\u6216\u7b49\u4e8e <code>p</code> \u7684\u5b57\u7b26\u4e32 <code>s</code>\uff0c\u6211\u4eec\u603b\u80fd\u591f\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c06 <code>s</code> \u5206\u89e3\u6210 <code>x</code>\u3001<code>y</code>\u3001<code>z</code> \u4e09\u6bb5\uff08\u5373 <code>s = xyz</code>\uff09\uff0c\u5e76\u4e14\u8fd9\u4e2a\u5206\u89e3\u65b9\u5f0f\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u4e2a\u6761\u4ef6\uff1a</p> <ol> <li><code>xy^iz \u2208 A</code>\uff0c\u5bf9\u4e8e\u6240\u6709 <code>i \u2265 0</code></li> <li>\u8fd9\u662f\u201c\u6cf5\u201d\u7684\u6838\u5fc3\u3002\u610f\u601d\u662f\uff0c\u4f60\u53ef\u4ee5\u628a\u4e2d\u95f4\u7684 <code>y</code> \u6bb5\u590d\u5236\u4efb\u610f\u6b21\u6570\uff08<code>i</code>=2, 3, 4...\uff09\u3001\u4fdd\u6301\u539f\u6837\uff08<code>i</code>=1\uff09\uff0c\u6216\u8005\u5b8c\u5168\u5220\u9664\uff08<code>i</code>=0\uff09\uff0c\u5f97\u5230\u7684\u65b0\u5b57\u7b26\u4e32\uff08\u5982 <code>xyyz</code>, <code>xyz</code>, <code>xz</code>\uff09\u5fc5\u987b\u4ecd\u7136\u662f\u8bed\u8a00 <code>A</code> \u7684\u4e00\u90e8\u5206\u3002</li> <li><code>|y| &gt; 0</code></li> <li>\u8fd9\u4e2a\u6761\u4ef6\u4fdd\u8bc1\u4e86\u6211\u4eec\u7528\u6765\u201c\u6cf5\u201d\u7684 <code>y</code> \u6bb5 \u4e0d\u662f\u7a7a\u7684 \u3002\u5982\u679c <code>y</code> \u53ef\u4ee5\u662f\u7a7a\u7684\uff0c\u90a3\u4e48\u7b2c\u4e00\u6761\u89c4\u5219\u5c31\u53d8\u5f97\u6beb\u65e0\u610f\u4e49\u4e86\uff0c\u56e0\u4e3a\u590d\u5236\u6216\u5220\u9664\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u4e1c\u897f\u3002</li> <li><code>|xy| \u2264 p</code></li> <li>\u8fd9\u4e2a\u6761\u4ef6\u89c4\u5b9a\uff0c\u6211\u4eec\u627e\u5230\u7684\u8fd9\u4e2a\u53ef\u201c\u6cf5\u201d\u7684 <code>y</code> \u6bb5\uff0c\u5fc5\u987b\u51fa\u73b0\u5728\u5b57\u7b26\u4e32\u7684 \u65e9\u671f\u90e8\u5206 \u3002\u4ece\u5b57\u7b26\u4e32\u5f00\u5934\u5230 <code>y</code> \u6bb5\u7ed3\u675f\u7684\u8fd9\u90e8\u5206\uff08\u5373 <code>xy</code>\uff09\u7684\u603b\u957f\u5ea6\uff0c\u4e0d\u80fd\u8d85\u8fc7\u6211\u4eec\u4e00\u5f00\u59cb\u8bf4\u7684\u90a3\u4e2a\u7279\u6b8a\u6570\u5b57 <code>p</code>\uff08\u6cf5\u957f\u5ea6\uff09\u3002</li> </ol> <p>\u4e66\u672c\u4e0a\u7684\u8865\u5145\u8bf4\u660e\uff1a</p> <ul> <li><code>x</code> \u548c <code>z</code> \u53ef\u4ee5\u662f\u7a7a\u5b57\u7b26\u4e32\uff0c\u4f46 <code>y</code> \u4e0d\u884c\u3002</li> <li>\u6761\u4ef62\u548c\u6761\u4ef63\u662f\u6280\u672f\u6027\u7ea6\u675f\uff0c\u5b83\u4eec\u5728\u540e\u7eed\u7528\u8fd9\u4e2a\u5f15\u7406\u53bb\u8bc1\u660e\u4e00\u4e2a\u8bed\u8a00\u4e0d\u662f\u6b63\u5219\u7684\u65f6\u5019\uff0c\u4f1a\u8d77\u5230\u81f3\u5173\u5448\u8981\u7684\u4f5c\u7528\u3002</li> </ul> <p>\u6cf5\u5f15\u7406\u8bc1\u660e\u7684\u8be6\u7ec6\u6b65\u9aa4</p> <p>\u76ee\u6807\uff1a \u8bc1\u660e\u5982\u679c <code>A</code> \u662f\u4e00\u4e2a\u6b63\u5219\u8bed\u8a00\uff0c\u90a3\u4e48\u5b83\u6ee1\u8db3\u6cf5\u5f15\u7406\u3002</p> <p>\u7b2c1\u6b65\uff1a\u524d\u63d0\u4e0e\u8bbe\u5b9a (Premise and Setup)</p> <ol> <li>\u5047\u8bbe <code>A</code> \u662f\u6b63\u5219\u8bed\u8a00 : \u6839\u636e\u6b63\u5219\u8bed\u8a00\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u77e5\u9053\u5fc5\u7136\u5b58\u5728\u4e00\u4e2a\u786e\u5b9a\u6027\u6709\u9650\u81ea\u52a8\u673a (DFA) <code>M</code> \u6765\u8bc6\u522b\u5b83\u3002</li> <li>\u5f62\u5f0f\u5316 <code>M</code> : \u6211\u4eec\u5c06 <code>M</code> \u5b9a\u4e49\u4e3a <code>(Q, \u03a3, \u03b4, q\u2080, F)</code>\uff0c\u5176\u4e2d <code>Q</code> \u662f <code>M</code> \u7684\u72b6\u6001\u96c6\u5408\u3002</li> <li>\u8bbe\u5b9a\u6cf5\u957f\u5ea6 <code>p</code> : \u6211\u4eec\u5c06\u6cf5\u5f15\u7406\u4e2d\u63d0\u5230\u7684\u6cf5\u957f\u5ea6 <code>p</code>\uff0c\u76f4\u63a5\u8bbe\u5b9a\u4e3aDFA <code>M</code> \u7684 \u72b6\u6001\u603b\u6570 \u3002\u5373 <code>p = |Q|</code>\u3002\u8fd9\u662f\u6574\u4e2a\u8bc1\u660e\u6700\u5173\u952e\u7684\u4e00\u6b65\u8bbe\u5b9a\u3002</li> </ol> <p>\u7b2c2\u6b65\uff1a\u9009\u62e9\u5b57\u7b26\u4e32\u5e76\u89c2\u5bdf\u5176\u72b6\u6001\u5e8f\u5217</p> <ol> <li>\u9009\u62e9\u5b57\u7b26\u4e32 <code>s</code> : \u4ece\u8bed\u8a00 <code>A</code> \u4e2d\u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u957f\u5ea6 <code>n</code> \u5927\u4e8e\u6216\u7b49\u4e8e <code>p</code> \u7684\u5b57\u7b26\u4e32\uff0c\u5373 <code>|s| = n \u2265 p</code>\u3002\uff08\u5982\u679c\u8bed\u8a00 <code>A</code> \u4e2d\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u957f\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6cf5\u5f15\u7406\u7684\u6761\u4ef6\u81ea\u7136\u6210\u7acb\uff0c\u56e0\u4e3a\u5b83\u7684\u8981\u6c42\u662f\u9488\u5bf9\u6240\u6709\u957f\u5b57\u7b26\u4e32\u7684\uff0c\u6ca1\u6709\u957f\u5b57\u7b26\u4e32\u5c31\u7b49\u4e8e\u6ca1\u6709\u53cd\u4f8b\u3002\uff09</li> <li>\u751f\u6210\u72b6\u6001\u5e8f\u5217 : \u8ba9DFA <code>M</code> \u8bfb\u53d6\u5b57\u7b26\u4e32 <code>s = s\u2081s\u2082...s\u2099</code>\u3002\u6211\u4eec\u4f1a\u5f97\u5230\u4e00\u4e2a\u72b6\u6001\u5e8f\u5217 <code>r\u2080, r\u2081, r\u2082, ..., r\u2099</code>\uff0c\u5176\u4e2d <code>r\u2080 = q\u2080</code> \u662f\u8d77\u59cb\u72b6\u6001\uff0c<code>r\u1d62</code> \u662f\u8bfb\u53d6\u4e86\u524d <code>i</code> \u4e2a\u5b57\u7b26\u540e <code>M</code> \u6240\u5904\u7684\u72b6\u6001\u3002</li> <li>\u8ba1\u7b97\u5e8f\u5217\u957f\u5ea6 : \u8fd9\u4e2a\u72b6\u6001\u5e8f\u5217\u603b\u5171\u5305\u542b\u4e86 <code>n+1</code> \u4e2a\u72b6\u6001\u3002</li> </ol> <p>\u7b2c3\u6b65\uff1a\u5e94\u7528\u9e3d\u5de2\u539f\u7406\u627e\u5230\u91cd\u590d\u72b6\u6001 (\u6838\u5fc3\u8bba\u8bc1)</p> <ol> <li> <p>\u786e\u5b9a\u201c\u9e3d\u5b50\u201d\u548c\u201c\u9e3d\u7b3c\u201d :</p> </li> <li> <p>\u9e3d\u7b3c (Containers) : DFA <code>M</code> \u81ea\u8eab\u7684\u6240\u6709\u72b6\u6001\uff0c\u5171 <code>p</code> \u4e2a\u3002</p> </li> <li> <p>\u9e3d\u5b50 (Items) : \u4e0a\u8ff0\u72b6\u6001\u5e8f\u5217\u4e2d\u7684 \u524d <code>p+1</code> \u4e2a\u72b6\u6001 \uff0c\u5373 <code>r\u2080, r\u2081, ..., r\u209a</code>\u3002</p> </li> <li> <p>\u5f97\u51fa\u7ed3\u8bba : \u56e0\u4e3a <code>p+1 &gt; p</code>\uff0c\u201c\u9e3d\u5b50\u201d\u6570\u91cf\u591a\u4e8e\u201c\u9e3d\u7b3c\u201d\u6570\u91cf\u3002\u6839\u636e \u9e3d\u5de2\u539f\u7406 \uff0c\u5728\u8fd9 <code>p+1</code> \u4e2a\u72b6\u6001\u4e2d\uff0c \u5fc5\u7136\u81f3\u5c11\u6709\u4e00\u4e2a\u72b6\u6001\u662f\u91cd\u590d\u51fa\u73b0\u7684 \u3002</p> </li> <li>\u5f62\u5f0f\u5316\u91cd\u590d\u72b6\u6001 : \u8fd9\u610f\u5473\u7740\uff0c\u6211\u4eec\u4e00\u5b9a\u80fd\u627e\u5230\u4e24\u4e2a\u4e0d\u540c\u7684\u4e0b\u6807 <code>j</code> \u548c <code>l</code>\uff0c\u6ee1\u8db3 <code>0 \u2264 j &lt; l \u2264 p</code>\uff0c\u4f7f\u5f97\u72b6\u6001 <code>r\u2c7c</code> \u548c\u72b6\u6001 <code>r\u2097</code> \u662f\u540c\u4e00\u4e2a\u72b6\u6001\uff0c\u5373 <code>r\u2c7c = r\u2097</code>\u3002</li> </ol> <p>\u7b2c4\u6b65\uff1a\u6839\u636e\u91cd\u590d\u72b6\u6001\u5206\u89e3\u5b57\u7b26\u4e32 <code>s</code></p> <p>\u6211\u4eec\u5229\u7528\u627e\u5230\u7684\u91cd\u590d\u72b6\u6001 <code>r\u2c7c = r\u2097</code> \u6765\u5c06\u5b57\u7b26\u4e32 <code>s</code> \u5206\u89e3\u6210 <code>xyz</code> \u4e09\u6bb5\uff1a</p> <ul> <li><code>x</code> : \u662f <code>s</code> \u7684\u524d <code>j</code> \u4e2a\u5b57\u7b26 (<code>s\u2081...s\u2c7c</code>)\u3002\u8fd9\u90e8\u5206\u5b57\u7b26\u4e32\u5c06 <code>M</code> \u4ece\u8d77\u59cb\u72b6\u6001 <code>r\u2080</code> \u5e26\u5230\u4e86 <code>r\u2c7c</code>\u3002</li> <li><code>y</code> : \u662f <code>s</code> \u7684\u7b2c <code>j+1</code> \u5230\u7b2c <code>l</code> \u4e2a\u5b57\u7b26 (<code>s\u2c7c\u208a\u2081...s\u2097</code>)\u3002\u8fd9\u90e8\u5206\u5b57\u7b26\u4e32\u5c06 <code>M</code> \u4ece <code>r\u2c7c</code> \u5e26\u5230 <code>r\u2097</code>\uff0c\u56e0\u4e3a <code>r\u2c7c = r\u2097</code>\uff0c\u6240\u4ee5 <code>y</code> \u9a71\u52a8 <code>M</code> \u8d70\u4e86\u4e00\u4e2a \u72b6\u6001\u56de\u8def \u3002</li> <li><code>z</code> : \u662f <code>s</code> \u5269\u4e0b\u7684\u90e8\u5206 (<code>s\u2097\u208a\u2081...s\u2099</code>)\u3002\u8fd9\u90e8\u5206\u5b57\u7b26\u4e32\u5c06 <code>M</code> \u4ece <code>r\u2097</code> \u5e26\u5230\u4e86\u6700\u7ec8\u72b6\u6001 <code>r\u2099</code>\u3002</li> </ul> <p>\u7b2c5\u6b65\uff1a\u9a8c\u8bc1\u5206\u89e3\u540e\u7684 <code>xyz</code> \u6ee1\u8db3\u6cf5\u5f15\u7406\u7684\u4e09\u4e2a\u6761\u4ef6</p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u6765\u9010\u4e00\u9a8c\u8bc1\u8fd9\u6837\u5206\u89e3\u51fa\u7684 <code>xyz</code> \u6ee1\u8db3\u6cf5\u5f15\u7406\u7684\u6240\u6709\u8981\u6c42\u3002</p> <ol> <li> <p>\u9a8c\u8bc1 <code>|y| &gt; 0</code> :</p> </li> <li> <p>\u56e0\u4e3a\u6211\u4eec\u627e\u5230\u7684\u4e0b\u6807 <code>j</code> \u548c <code>l</code> \u6ee1\u8db3 <code>j &lt; l</code>\uff0c\u8fd9\u610f\u5473\u7740\u4ece <code>j+1</code> \u5230 <code>l</code> \u81f3\u5c11\u6709\u4e00\u4e2a\u6570\u5b57\u3002\u6240\u4ee5\uff0c\u5b50\u5b57\u7b26\u4e32 <code>y</code> \u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5b57\u7b26 <code>s\u2c7c\u208a\u2081</code>\u3002\u56e0\u6b64\uff0c<code>y</code> \u4e0d\u53ef\u80fd\u662f\u7a7a\u5b57\u7b26\u4e32\u3002(\u6761\u4ef6\u6ee1\u8db3)</p> </li> <li> <p>\u9a8c\u8bc1 <code>|xy| \u2264 p</code> :</p> </li> <li> <p>\u5b57\u7b26\u4e32 <code>xy</code> \u7684\u957f\u5ea6\u5c31\u662f <code>l</code>\u3002\u6839\u636e\u6211\u4eec\u5728\u7b2c3\u6b65\u7684\u63a8\u5bfc\uff0c\u91cd\u590d\u72b6\u6001 <code>r\u2097</code> \u662f\u5728\u72b6\u6001\u5e8f\u5217\u7684\u524d <code>p+1</code> \u4e2a\u6210\u5458\u4e2d\u627e\u5230\u7684\uff0c\u6240\u4ee5 <code>l</code> \u7684\u6700\u5927\u503c\u5c31\u662f <code>p</code>\u3002\u56e0\u6b64\uff0c<code>|xy| = l \u2264 p</code>\u3002(\u6761\u4ef6\u6ee1\u8db3)</p> </li> <li> <p>\u9a8c\u8bc1 <code>xy^iz \u2208 A</code> \u5bf9\u6240\u6709 <code>i \u2265 0</code> \u6210\u7acb :</p> </li> <li> <p>\u6211\u4eec\u6765\u5206\u6790 <code>M</code> \u5982\u4f55\u5904\u7406 <code>xy^iz</code>\uff1a</p> </li> <li><code>M</code> \u8bfb\u53d6 <code>x</code> \u540e\uff0c\u4ece <code>r\u2080</code> \u5230\u8fbe <code>r\u2c7c</code>\u3002</li> <li><code>M</code> \u8bfb\u53d6 <code>y</code> \u540e\uff0c\u4ece <code>r\u2c7c</code> \u7ed5\u4e00\u5708\u56de\u5230 <code>r\u2c7c</code>\u3002\u65e0\u8bba\u8bfb\u53d6\u591a\u5c11\u6b21\uff08<code>i</code> \u6b21\uff09<code>y</code>\uff0c<code>M</code> \u6700\u7ec8\u90fd\u4f1a\u505c\u5728 <code>r\u2c7c</code> \u72b6\u6001\u3002</li> <li>\u5982\u679c <code>i=0</code>\uff0c\u76f8\u5f53\u4e8e\u4e0d\u8bfb\u53d6 <code>y</code>\uff0c<code>M</code> \u505c\u5728 <code>r\u2c7c</code>\u3002</li> <li>\u6700\u540e\uff0c<code>M</code> \u4ece <code>r\u2c7c</code> \u5f00\u59cb\u8bfb\u53d6 <code>z</code>\u3002\u56e0\u4e3a <code>r\u2c7c = r\u2097</code>\uff0c\u6240\u4ee5\u4ece <code>r\u2c7c</code> \u5f00\u59cb\u8bfb <code>z</code> \u548c\u4ece <code>r\u2097</code> \u5f00\u59cb\u8bfb <code>z</code> \u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\uff0c\u90fd\u4f1a\u6700\u7ec8\u5230\u8fbe <code>r\u2099</code> \u72b6\u6001\u3002</li> <li>\u7531\u4e8e\u539f\u59cb\u5b57\u7b26\u4e32 <code>s=xyz</code> \u5728\u8bed\u8a00 <code>A</code> \u4e2d\uff0c\u6240\u4ee5 <code>r\u2099</code> \u5fc5\u987b\u662f\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001\u3002\u56e0\u6b64\uff0c\u65e0\u8bba <code>i</code> \u662f\u591a\u5c11\uff0c<code>M</code> \u5904\u7406 <code>xy^iz</code> \u540e\u90fd\u4f1a\u5230\u8fbe\u540c\u4e00\u4e2a\u63a5\u53d7\u72b6\u6001 <code>r\u2099</code>\u3002\u8fd9\u610f\u5473\u7740\u6240\u6709 <code>xy^iz</code> \u5f62\u5f0f\u7684\u5b57\u7b26\u4e32\u90fd\u88ab <code>M</code> \u63a5\u53d7\uff0c\u5373\u5b83\u4eec\u90fd\u5728\u8bed\u8a00 <code>A</code> \u4e2d\u3002(\u6761\u4ef6\u6ee1\u8db3)</li> </ol> <p>\u7ed3\u8bba</p> <p>\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\uff0c\u4ece\u201c<code>A</code>\u662f\u6b63\u5219\u8bed\u8a00\u201d\u8fd9\u4e2a\u552f\u4e00\u7684\u524d\u63d0\u51fa\u53d1\uff0c\u53ef\u4ee5\u63a8\u5bfc\u51fa\uff1a\u5bf9\u4e8e <code>A</code> \u4e2d\u4efb\u610f\u4e00\u4e2a\u8db3\u591f\u957f\u7684\u5b57\u7b26\u4e32 <code>s</code>\uff0c\u6211\u4eec\u603b\u80fd\u627e\u5230\u4e00\u79cd\u6ee1\u8db3\u6cf5\u5f15\u7406\u6240\u6709\u4e09\u4e2a\u6761\u4ef6\u7684 <code>xyz</code> \u5206\u89e3\u65b9\u5f0f\u3002\u8fd9\u8868\u660e\u6cf5\u5f15\u7406\u7684\u9648\u8ff0\u662f\u5b8c\u5168\u6b63\u786e\u7684\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e0a\u4e00\u8282\u63d0\u5230\u7684\u8bed\u8a00 <code>L = {0\u207f1\u207f | n \u2265 0}</code>\u3002\u5b83\u5305\u542b \"\u03b5\", \"01\", \"0011\", \"000111\" \u7b49\u3002\u6211\u4eec\u53ef\u4ee5\u7528pumping lemma\u8bc1\u660e\u8be5\u8bed\u8a00\u4e0d\u662f\u6b63\u5219\u8bed\u8a00\u3002</p> <p>\u8bc1\u660e\u56de\u987e\uff1a</p> <ol> <li>\u5047\u8bbe\u5b83\u662f\u6b63\u5219\u7684\uff0c\u62e5\u6709\u6cf5\u957f\u5ea6 <code>p</code>\u3002</li> <li>\u6211\u4eec\u9009\u62e9\u5b57\u7b26\u4e32 <code>s = 0^p1^p</code>\u3002</li> <li>\u56e0\u4e3a <code>|xy| \u2264 p</code>\uff0c\u6240\u4ee5 <code>y</code> \u5fc5\u7136\u53ea\u5305\u542b <code>0</code>\u3002</li> <li>\u5f53\u6211\u4eec\u201c\u6cf5\u201d <code>y</code> \u65f6\uff08\u6bd4\u5982\u590d\u5236\u4e00\u6b21\u5f97\u5230 <code>xyyz</code>\uff09\uff0c\u6211\u4eec\u589e\u52a0\u4e86 <code>0</code> \u7684\u6570\u91cf\uff0c\u4f46 <code>1</code> \u7684\u6570\u91cf\u4e0d\u53d8\u3002</li> <li>\u65b0\u5b57\u7b26\u4e32 <code>xyyz</code> \u7684 <code>0</code> \u548c <code>1</code> \u6570\u91cf\u4e0d\u518d\u76f8\u7b49\uff0c\u6240\u4ee5\u5b83\u4e0d\u5c5e\u4e8e\u8bed\u8a00 <code>L</code>\u3002</li> <li>\u8fd9\u4e0e\u6cf5\u5f15\u7406\u7684\u627f\u8bfa\uff08\u6cf5\u5b8c\u4e4b\u540e\u8fd8\u5fc5\u987b\u5728\u8bed\u8a00\u91cc\uff09\u4ea7\u751f \u77db\u76fe \u3002</li> <li>\u56e0\u6b64\uff0c\u8bed\u8a00 L \u4e0d\u662f\u6b63\u5219\u7684\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4efb\u4f55DFA\u53ef\u4ee5\u8bc6\u522b\u5b83\u3002</li> </ol>"},{"location":"computational_theory/ch1_regular_languages/#_1","title":"\u9644\uff1a\u7ec3\u4e60","text":"<p>\u6ce8\uff1apumping theory\u8fd9\u4e2a\u8bfe\u7a0b\u4e2d\u4f1a\u6709\u4f5c\u4e1a\u3001\u8003\u8bd5\u7b49\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u4e00\u70b9\u3002\u4e4b\u540e\u8865\u5145\u3002</p>"},{"location":"computational_theory/%E8%AF%BE%E7%A8%8B%E7%9B%B8%E5%85%B3/","title":"\u8bfe\u7a0b\u76f8\u5173","text":"<p>\u8fd9\u95e8\u8bfe\u548c\u6211\u672a\u6765\u65b9\u5411\u4e0d\u592a\u5339\u914d\uff0c\u4f46\u662f\u662f\u5fc5\u4fee\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u628a\u5b66\u4e60\u65f6\u95f4\u7f29\u77ed\u5e76\u4fdd\u8bc1\u6210\u7ee9\u4e0d\u57ae\u6389\u5c31\u53ef\u4ee5\u4e86\u3002\u56e0\u4e3a\u53c2\u4e0e\u5206\u5f88\u4f4e\uff0c\u6240\u4ee5\u4fdd\u8bc1\u4f5c\u4e1a\u548c\u8003\u8bd5OK\u5c31\u884c\u3002</p> <p>AI Tools Policy:</p> <ul> <li>Prohibited\uff1a\u7981\u6b62\u4f7f\u7528AI\u5de5\u5177\uff0c\u82e5\u4f7f\u7528\u5219\u6309\u4f5c\u5f0a\u5904\u7406\u3002\u5e76\u4e14\u4e5f\u4e0d\u8ba9\u7528AI\u5de5\u5177\u5206\u6790\u8fc7\u7a0b\u3001\u63a2\u7a76\u601d\u8def\u7b49\u3002</li> </ul> <p>Participation: (5%)</p> <ul> <li>Includes participation in section</li> </ul> <p>Quizzes: (30%, Bring Pencil and Paper)</p> <ul> <li>Sep.16</li> <li>Oct.7</li> <li>Oct.21</li> <li>Nov.5 (In Section)</li> <li>Nov.25</li> <li>Dec.3 (\u8fd9\u4e2a\u4f3c\u4e4e\u4e5f\u662f\u5728Section\u4e2d)</li> </ul> <p>Homework Due: (35%)</p> <ul> <li>Sep.11</li> <li>Sep.25</li> <li>Oct.9</li> <li>Oct.23</li> <li>Nov.6</li> <li>Nov.20</li> <li>Dec.4</li> </ul> <p>Final Exam: (30%)</p> <ul> <li>Dec 15, 3:30 - 5:30pm</li> </ul>"}]}